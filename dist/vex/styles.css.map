{"version":3,"file":"styles.css","mappings":";;;AAAA;EACE,kBAAkB;EAClB,sBAAsB;EACtB,eAAe;EACf,2BAA2B;EAC3B,yBAAyB;EACzB,uBAAuB;AACzB;;AAEA;EACE,gBAAgB;EAChB,cAAc;EACd,eAAe;EACf,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,gBAAgB;EAChB,UAAU;EACV,SAAS;EACT,OAAO;EACP,MAAM;EACN,SAAS;EACT,QAAQ;EACR,sBAAsB;EACtB,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,6BAA6B;EAC7B,8BAA8B;EAC9B,uBAAuB;EACvB,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,SAAS;EACT,QAAQ;EACR,UAAU;EACV,SAAS;EACT,iCAAiC;AACnC;;AAEA;EACE,kBAAkB;EAClB,iCAAiC;EACjC,kBAAkB;EAClB,cAAc;EACd,YAAY,EAAE,mGAAmG;EACjH,WAAW;EACX,eAAe,EAAE,kDAAkD;EACnE,gBAAgB,EAAE,0CAA0C;EAC5D,cAAc;EACd,qBAAqB;EACrB,wBAAwB;AAC1B;;AAEA;;EAEE,aAAa;EACb,QAAQ;EACR,SAAS;AACX;;AAEA;;EAEE,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,gBAAgB;EAChB,eAAe;EACf,WAAW;EACX,oBAAoB;AACtB;;AAEA;EACE,8BAA8B;EAC9B,YAAY;EACZ,WAAW;EACX,cAAc;EACd,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,gBAAgB;EAChB,WAAW;EACX,UAAU;EACV,SAAS;EACT,oBAAoB;EACpB,kBAAkB;EAClB,cAAc;EACd,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,cAAc;EACd,UAAU;EACV,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,aAAa;EACb,YAAY;EACZ,eAAe;EACf,cAAc;EACd,gBAAgB;EAChB,oBAAoB;EACpB,WAAW;AACb;;AAEA;EACE,UAAU;EACV,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE,oBAAoB;EACpB,2BAA2B;EAC3B,yBAAyB;EAIzB,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;EACpB,2BAA2B;EAC3B,yBAAyB;EAIzB,iBAAiB;AACnB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,OAAO;EACP,QAAQ;EACR,gBAAgB;AAClB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,iBAAiB;EACjB,kBAAkB;EAClB,SAAS;EACT,UAAU;EACV,UAAU;EACV,oCAAoC;AACtC;;AAEA;EACE,YAAY;EACZ,oBAAoB;EACpB,uBAAuB;AACzB;;AAEA;EACE,MAAM;EACN,WAAW;AACb;;AAEA;EACE,QAAQ;EACR,WAAW;EACX,SAAS;EACT,UAAU;AACZ;;AAEA;EACE,OAAO;EACP,YAAY;AACd;;AAEA;EACE,WAAW;EACX,OAAO;EACP,MAAM;EACN,SAAS;EACT,aAAa;EACb,eAAe;EACf,WAAW;AACb;;AAEA,gBAAgB;AAChB;EACE,WAAW;EACX,OAAO;AACT;;AAEA;EACE,cAAc;EACd,eAAe;EACf,UAAU;EACV,kBAAkB;EAClB,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,kBAAkB;EAClB,wCAAwC;AAC1C;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,cAAc;AAChB;;AAEA;EACE,eAAe;EACf,OAAO;EACP,kBAAkB;EAClB,kBAAkB;EAClB,qBAAqB;EACrB,wBAAwB;AAC1B;;;;;ACrOA,cAAc,aAAa,CAAC,eAAe,CAAC,WAAW,CAAC,UAAU,eAAe,CAAC,MAAM,aAAa,CAAC,kBAAkB,CAAC,qDAAqD,aAAa,CAAC,gDAAgD,aAAa,CAAC,kDAAkD,aAAa,CAAC,0BAA0B,UAAU,CAAC,WAAW,aAAa,CAAC,4CAA4C,aAAa,CAAC,qCAAqC,aAAa,CAAC,kDAAkD,aAAa,CAAC,eAAe,iBAAiB,CAAC,aAAa,eAAe,C;;;;ACAlmB;EACE;EACA;EACA;EACA;EACA;EACA;ACGF;ADAA;EACE;EACA;EACA;EACA;EACA;EACA;ACEF;ACdA;EAIE;EAGA;EACA;EACA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EACA;EAGA;EACA;EAGA;EAGA;EACA;ADCF;AE3BE;EAII;AF0BN;AG3BI;ECgEA;AJlCJ;AGzBM;EAOE;AHqBR;AKyvBE;ED1tBE;AJ5BJ;AKsvBE;ED1tBE;AJzBJ;AKmvBE;ED1tBE;AJtBJ;AM9CI;EFoEA;AJnBJ;AOpBE;EACE,+BAXe;APiCnB;AOrBI;EACE,cANa;AP6BnB;AO3DI;;EACE,+BAkBM;AP4CZ;AO1DI;;EAKE,oCASM;APgDZ;AO7DM;;EACE,cAeO;APiDf;AOvEI;;EACE,8BAmBK;APuDX;AOtEI;;EAKE,mCAUK;AP2DX;AOzEM;;EACE,cAeO;AP6Df;AOnFI;;EACE,8BAmBK;APmEX;AOlFI;;EAKE,mCAUK;APuEX;AOrFM;;EACE,cAeO;APyEf;AO/FI;;EACE,4BAoBG;AP8ET;AO9FI;;EAKE,iCAWG;APkFT;AOjGM;;EACE,cAeO;APqFf;AO/CI;;EACE,cA/Ba;APiFnB;AO/CI;;EACE,mBAnCa;APqFnB;AQpGE;EAIE;EACA;ARmGJ;AQzFI;EJ0CA;AJkDJ;AQ5FI;EJ0CA;AJqDJ;AQ/FI;EJ0CA;AJwDJ;AQlGI;EJ0CA;AJ2DJ;AQrGI;EJ0CA;AJ8DJ;AQxGI;EJ0CA;AJiEJ;AQ3GI;EJ0CA;AJoEJ;AQ9GI;EJ0CA;AJuEJ;AQjHI;EJ0CA;AJ0EJ;AQpHI;EJ0CA;AJ6EJ;AQvHI;EJ0CA;AJgFJ;AQ1HI;EJ0CA;AJmFJ;AQ7HI;EJ0CA;AJsFJ;AQhII;EJ0CA;AJyFJ;AQnII;EJ0CA;AJ4FJ;AQtII;EJ0CA;AJ+FJ;AQzII;EJ0CA;AJkGJ;AQ5II;EJ0CA;AJqGJ;AQ/II;EJ0CA;AJwGJ;AQlJI;EJ0CA;AJ2GJ;AQrJI;EJ0CA;AJ8GJ;AQxJI;EJ0CA;AJiHJ;AQ3JI;EJ0CA;AJoHJ;AQ9JI;EJ0CA;AJuHJ;AQjKI;EJ0CA;AJ0HJ;AQ7JI;EACE;AR+JN;;ASvLI;EL0DA;EAAA;AJkIJ;ASjLI;EL+CA;EAAA;AJsIJ;ASxKI;EACE;AT0KN;AUtLI;EN6CA;AJ4IJ;AWjIE;EPXE;AJ+IJ;AWvHE;EPxBE;AJkJJ;AU5LM;EN0CF;AJqJJ;AW1IE;EPXE;AJwJJ;AWhIE;EPxBE;AJ2JJ;AUjMM;ENsCF;AJ8JJ;AWnJE;EPXE;AJiKJ;AWzIE;EPxBE;AJoKJ;AYtOI;ERkEA;EAAA;AJwKJ;AasyEE;ET98EE;AJ2KJ;Aa8tEE;ETz4EE;AJ8KJ;Aak0EE;EAGE;ITn/EA;EJkLF;Eay0EE;IT3/EA;EJuLF;AAJF;AakxBE;ETr8BE;AJ2LJ;ActKE;EVrBE;AJ8LJ;AezKE;;EXrBE;AJkMJ;AgBpGE;EZ9FE;AJqMJ;AgB7FE;EZxGE;AJwMJ;Aa+wEI;ETv9EA;AJ2MJ;AasxEI;ETj+EA;AJ8MJ;AiBlII;;Eb5EA;AJkNJ;AiBmQE;EbrdE;AJqNJ;AiBgQE;EbrdE;AJwNJ;AagzEE;ETxgFE;AJ2NJ;AkB3LI;EdhCA;AJ8NJ;AkB9LI;EdhCA;AJiOJ;AkB3MI;EdtBA;AJoOJ;AmBjLE;;;EfnDE;AJyOJ;AmBtLE;;;EfnDE;AJ8OJ;AmB3LE;;;EfnDE;AJmPJ;AoBjPM;EACE;EAEA;ApBkPR;;AoBrPM;EACE;EAEA;ApBuPR;;AiBhLI;;Eb5EA;AJiQJ;AoB/PM;EACE;EAEA;ApBgQR;AaysEE;ET98EE;AJwQJ;AkBxOI;EdhCA;AJ2QJ;AkBrPI;EdtBA;AJ8QJ;AagsEE;ET98EE;AJiRJ;AclPE;EV/BE;AJoRJ;AairBE;ETr8BE;AJuRJ;AgB/KE;EZxGE;AJ0RJ;AkB1PI;EdhCA;AJ6RJ;AmB1OE;;;EfnDE;AJkSJ;AmB/OE;;;EfnDE;AJuSJ;AmBpPE;;;EfnDE;AJ4SJ;Aa6lEE;ETz4EE;AJ+SJ;AaisEE;EAGE;ITn/EA;EJmTF;EawsEE;IT3/EA;EJwTF;AAJF;Aa0pEE;ET98EE;AJ4TJ;AcvSE;EVrBE;AJ+TJ;Ae1SE;;EXrBE;AJmUJ;AgBrOE;EZ9FE;AJsUJ;AgB9NE;EZxGE;AJyUJ;Aa8oEI;ETv9EA;AJ4UJ;AaqpEI;ETj+EA;AJ+UJ;AkB/SI;EdhCA;AJkVJ;AmB/RE;;;EfnDE;AJuVJ;AaypEE;EAGE;ITn/EA;EJ2VF;EagqEE;IT3/EA;EJgWF;Ea8mEA;IT98EE;EJqWF;EchVA;IVrBE;EJ0WF;EerVA;;IXrBE;EJgXF;EgBlRA;IZ9FE;EJqXF;EgB7QA;IZxGE;EJ0XF;Ea6lEE;ITv9EA;EJ+XF;EakmEE;ITj+EA;EJoYF;EkBpWE;IdhCA;EJyYF;EmBtVA;;;IfnDE;EJgZF;AApDF;AarII;ETvNA;AJoZJ;AoBlZM;EACE;EAEA;ApBmZR;;AoBtZM;EACE;EAEA;ApBwZR;AqB1aE;EjBaE;AJgaJ;AsBtdE;EACE,2CCHwB;AvB2d5B;AsBrdE;EACE,aAPc;AtB8dlB;AsBpdE;EACE,aAZc;AtBkelB;AwB5ZQ;EACE,0BCiCU;AzB6XpB;AwB3ZQ;EACE,0BC+BW;AzB8XrB;AwBvZM;EACE,gCAtBkB;AxB+a1B;AwBpZU;EACE;AxBsZZ;AwBjZU;EACE;AxBmZZ;AwB9YU;EACE;AxBgZZ;AwB1YQ;EACE,gCA9CyB;AxB0bnC;AaugBE;ETr8BE;AJicJ;AkB3aI;EdtBA;AJocJ;Aa0gEE;ET98EE;AJucJ;AkBvaI;EdhCA;AJ0cJ;AkBpbI;EdtBA;AJ6cJ;AaigEE;ET98EE;AJgdJ;AcjbE;EV/BE;AJmdJ;AakfE;ETr8BE;AJsdJ;AgB9WE;EZxGE;AJydJ;AkBzbI;EdhCA;AJ4dJ;AmBzaE;;;EfnDE;AJieJ;AmB9aE;;;EfnDE;AJseJ;AmBnbE;;;EfnDE;AJ2eJ;AmBxbE;;;EfnDE;AJgfJ;AaqdE;ETr8BE;AJmfJ;AkB7dI;EdtBA;AJsfJ;Aaw9DE;ET98EE;AJyfJ;AkBzdI;EdhCA;AJ4fJ;AkBteI;EdtBA;AJ+fJ;Aa+8DE;ET98EE;AJkgBJ;AcneE;EV/BE;AJqgBJ;AagcE;ETr8BE;AJwgBJ;AgBhaE;EZxGE;AJ2gBJ;AkB3eI;EdhCA;AJ8gBJ;AmB3dE;;;EfnDE;AJmhBJ;AmBheE;;;EfnDE;AJwhBJ;AmBreE;;;EfnDE;AJ6hBJ;AmB1eE;;;EfnDE;AJkiBJ;A0BziBQ;EACE;A1B2iBV;A0BriBU;EACE;EACA;A1BuiBZ;A2B7kBE;EvBoCE;EAAA;EAAA;AJ8iBJ;AK4KE;ED1tBE;AJijBJ;AKmLE;EDpuBE;AJojBJ;AKgME;EDpvBE;AJujBJ;AK4NE;;EDnxBE;EAAA;AJ2jBJ;AKmME;ED9vBE;AJkkBJ;AK+PI;;;EDj0BA;AJukBJ;AKmJE;ED1tBE;AJ0kBJ;AK0JE;EDpuBE;AJ6kBJ;AKuKE;EDpvBE;AJglBJ;AKwzBI;EDx4CA;AJmlBJ;AK8zBM;EDj5CF;AJslBJ;AKkyBI;EDx3CA;AJylBJ;AKiIE;;ED1tBE;AJ6lBJ;AK2yBI;;EDx4CA;AJimBJ;AK6OE;ED90BE;AJomBJ;AKwzBE;ED55CE;AJumBJ;AKkXE;EDz9BE;AJ0mBJ;A4BjqBI;EACE;A5BmqBN;A4BhqBI;EACE;A5BkqBN;A4B/pBI;EACE,gCAbe;A5B8qBrB;A4B9pBI;EACE;A5BgqBN;A4B3pBQ;EACE;A5B6pBV;A4B1pBQ;EACE;A5B4pBV;A4BzpBQ;EACE;A5B2pBV;A4BvpBM;EACE;A5BypBR;A4BtpBM;EACE,gCAxCa;A5BgsBrB;A2BzqBE;EvBoCE;EAAA;EAAA;AJ0oBJ;AKgFE;ED1tBE;AJ6oBJ;AKuFE;EDpuBE;AJgpBJ;AKoGE;EDpvBE;AJmpBJ;AKgIE;;EDnxBE;EAAA;AJupBJ;AKuGE;ED9vBE;AJ8pBJ;AKmKI;;;EDj0BA;AJmqBJ;AKuDE;ED1tBE;AJsqBJ;AK8DE;EDpuBE;AJyqBJ;AK2EE;EDpvBE;AJ4qBJ;AK4tBI;EDx4CA;AJ+qBJ;AKkuBM;EDj5CF;AJkrBJ;AKssBI;EDx3CA;AJqrBJ;AKqCE;;ED1tBE;AJyrBJ;AK+sBI;;EDx4CA;AJ6rBJ;AKiJE;ED90BE;AJgsBJ;AK4tBE;ED55CE;AJmsBJ;AKsRE;EDz9BE;AJssBJ;A6BtwBI;EzBgEA;EAAA;EAAA;EAAA;AJ4sBJ;A8B1uBI;E1B8BA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJutBJ;A8BvwBE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJkuBJ;A8BlxBE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ6uBJ;A8B7xBE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJwvBJ;A8B5vBE;EACE;A9B8vBJ;A+BvvBI;E3BJA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJixBJ;AgC5zBE;E5B2CE;AJoxBJ;A+B3wBM;EACE;A/B6wBR;AgCl0BE;E5B2CE;AJ0xBJ;AiCt0BE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC6zBJ;AiCj0BI;EACE;AjCm0BN;AiCv1BE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC80BJ;AiCl1BI;EACE;AjCo1BN;AiCx2BE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC+1BJ;AiCn2BI;EACE;AjCq2BN;AkC54BI;E9B+DA;EAAA;EAAA;EAAA;EAAA;EAAA;E8B/CE;AlCq4BN;AkCn4BM;E9B6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlC00BF;AkC34BM;E9ByCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlCs1BF;AkCn5BM;E9BqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlCk2BF;A2B95BE;EvBoCE;EAAA;EAAA;AJ+3BJ;AKrKE;ED1tBE;AJk4BJ;AK9JE;EDpuBE;AJq4BJ;AKjJE;EDpvBE;AJw4BJ;AKrHE;;EDnxBE;EAAA;AJ44BJ;AK9IE;ED9vBE;AJm5BJ;AKlFI;;;EDj0BA;AJw5BJ;AK9LE;ED1tBE;AJ25BJ;AKvLE;EDpuBE;AJ85BJ;AK1KE;EDpvBE;AJi6BJ;AKueI;EDx4CA;AJo6BJ;AK6eM;EDj5CF;AJu6BJ;AKidI;EDx3CA;AJ06BJ;AKhNE;;ED1tBE;AJ86BJ;AK0dI;;EDx4CA;AJk7BJ;AKpGE;ED90BE;AJq7BJ;AKueE;ED55CE;AJw7BJ;AKiCE;EDz9BE;AJ27BJ;AmCr/BM;;;E/B0DF;AJg8BJ;AmCj/BI;;E/BiDA;AJo8BJ;AmC3+BM;;;;EAEE;AnC++BR;AoCpgCE;EhC0DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ69BJ;AqCniCE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC+/BJ;AiCngCI;EACE;AjCmhCN;AqCjkCE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC6hCJ;AiCjiCI;EACE;AjCijCN;AqC/lCE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjC2jCJ;AiC/jCI;EACE;AjC+kCN;AK7VE;;ED1tBE;AJ2jCJ;AK6UI;;EDx4CA;AJ+jCJ;AoC9lCI;;;EAGE;ApCgmCN;AsC/nCE;EACE;EACA;AtCioCJ;AsC9nCE;EACE,+BATW;AtCyoCf;AsC7nCE;;EAEE;EACA;AtC+nCJ;AsC5nCE;;EAEE;AtC8nCJ;AsC1nCI;;;;EAIE,uCA3Ba;AtCupCnB;AsCznCI;EACE,+BA/Ba;AtC0pCnB;AuCtpCI;EAME;AvCmpCN;AwCv+BE;EpCzHE;AJmmCJ;AuCnpCQ;;;EAEE;AvCspCV;AwC/+BE;EpCzHE;AJ2mCJ;AyCxnCE;ErCaE;AJ8mCJ;AuCxmCE;;;;EnCNE;AJonCJ;AwC3/BE;EpCzHE;AJunCJ;AyCpoCE;ErCaE;AJ0nCJ;AuCpnCE;;;;;;;EnCNE;AJmoCJ;AwC1gCE;EpCzHE;AJsoCJ;AyCnpCE;ErCaE;AJyoCJ;AuCnoCE;;;;;;;EnCNE;AJkpCJ;AuC9qCM;EAsBJ;EACA;AvC2pCF;AuC9qCM;EAkBJ;EACA;AvC+pCF;AuC9qCM;EAcJ;EACA;AvCmqCF;AuC7qCI;EnCeA;AJiqCJ;AgC5sCE;E5B2CE;AJoqCJ;AEvuCE;EAII;AFsuCN;A0CtsCM;EACE;A1CwsCR;A0ClsCM;EtCwBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJurCJ;AE1vCE;EAOI,0CAVc;EAWd,YAVY;AFgwClB;A0ChvCI;EACE,oCAOM;A1C2uCZ;A0CjtCM;EtCmBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ2sCJ;AE9wCE;EAOI,yCAVc;EAWd,YAVY;AFoxClB;A0CpwCI;EACE,mCAQK;A1C8vCX;A0ChuCM;EtCcF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ+tCJ;AElyCE;EAOI,uCAVc;EAWd,YAVY;AFwyClB;A0CxxCI;EACE,iCASG;A1CixCT;A0C9uCI;EAEE;A1C+uCN;A2C/vCM;EvCsBF;AJ4uCJ;A2C9vCM;EvCkBF;AJ+uCJ;A2C7vCM;EvCcF;AJkvCJ;A2C5vCM;EvCUF;AJqvCJ;A4C9wCE;ExCyBE;EAAA;AJyvCJ;A2CpvCM;EvCLF;EAAA;AJ6vCJ;A2CpvCM;EvCTF;EAAA;AJiwCJ;A2CpvCM;EvCbF;EAAA;AJqwCJ;A2CpvCM;EvCjBF;EAAA;AJywCJ;A4ClyCE;ExCyBE;EAAA;EAAA;EAAA;AJ+wCJ;A2C7uCM;EvClCF;EAAA;AJmxCJ;A2C7uCM;EvCtCF;EAAA;AJuxCJ;A2C7uCM;EvC1CF;EAAA;AJ2xCJ;A2C7uCM;EvC9CF;EAAA;AJ+xCJ;A4CxzCE;ExCyBE;EAAA;EAAA;EAAA;EAAA;AJsyCJ;A2CvuCI;EvC/DA;AJyyCJ;A2CruCM;EvCpEF;AJ4yCJ;A2CpuCM;EvCxEF;AJ+yCJ;A2CnuCM;EvC5EF;AJkzCJ;A2CluCM;EvChFF;AJqzCJ;A4C90CE;ExCyBE;EAAA;EAAA;EAAA;AJ2zCJ;A2C1tCI;ECxKF;EACA;A5Cq4CF;A4C73CE;EACE;A5C+3CJ;A4C13CI;EACE;A5C43CN;A4Cx3CE;EACE;A5C03CJ;A4Cr3CE;EA1BA;EACA;A5Ck5CF;A4Cr3CE;EA9BA;EACA;A5Cs5CF;A4Cr3CE;EAlCA;EACA;A5C05CF;A2C/uCI;EC5KF;EACA;A5C85CF;A4Ct5CE;EACE;A5Cw5CJ;A4Cn5CI;EACE;A5Cq5CN;A4Cj5CE;EACE;A5Cm5CJ;A4C94CE;EA1BA;EACA;A5C26CF;A4C94CE;EA9BA;EACA;A5C+6CF;A4C94CE;EAlCA;EACA;A5Cm7CF;A6C16CI;EDVF;EACA;A5Cu7CF;A4C/6CE;EACE;A5Ci7CJ;A4C56CI;EACE;A5C86CN;A4C16CE;EACE;A5C46CJ;A4Cv6CE;EA1BA;EACA;A5Co8CF;A4Cv6CE;EA9BA;EACA;A5Cw8CF;A4Cv6CE;EAlCA;EACA;A5C48CF;A6Ch8CM;EzC0DF;AJy4CJ;A6C/7CM;EzCsDF;AJ44CJ;A6C97CM;EzCkDF;AJ+4CJ;A4Cx6CE;ExCyBE;EAAA;AJm5CJ;A8Cx8CI;EFlBF;EACA;A5C69CF;A4Cr9CE;EACE;A5Cu9CJ;A4Cl9CI;EACE;A5Co9CN;A4Ch9CE;EACE;A5Ck9CJ;A4C78CE;EA1BA;EACA;A5C0+CF;A4C78CE;EA9BA;EACA;A5C8+CF;A4C78CE;EAlCA;EACA;A5Ck/CF;A8C99CM;E1CkDF;EAAA;E0C9DF;A9C++CF;A8C/9CM;E1C8CF;EAAA;E0C9DF;A9Co/CF;A8C79CM;E1CuCF;EAAA;E0C9DF;A9Cy/CF;A8C39CM;E1CgCF;EAAA;E0C9DF;A9C8/CF;A4Cz9CE;ExCyBE;EAAA;E0C9DF;A9CmgDF;A+ClgDI;EAME;E3CuDF;EAAA;AJ08CJ;AgDh6CE;E5C1CE;EAAA;AJ88CJ;AiDltCE;E7C5PE;AJi9CJ;AiD/tCE;E7ClPE;AJo9CJ;AiD9sCE;E7CtQE;AJu9CJ;AmBp6CE;;;EfnDE;AJ49CJ;AiDvrCE;;E7CrSE;AJg+CJ;AiDprCE;E7C5SE;AJm+CJ;AiDppCE;E7C/UE;AJs+CJ;AiD7oCE;E7CzVE;AJy+CJ;AiDloCE;;;E7CvWE;AJ8+CJ;AoB5+CM;EACE;EAEA;ApB6+CR;;AkD1hDE;EAEE;AlD4hDJ;AmDtjDI;E/CgEA;AJy/CJ;AmDtjDM;E/C6DF;AJ4/CJ;AmDrjDM;E/CyDF;AJ+/CJ;AoDx+CE;EACE;ApD0+CJ;AoDn+CE;EACE;ApDq+CJ;AoDj+CI;EACE;ApDm+CN;AoD/9CE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ApDi+CJ;AoD99CE;;EAEE;ApDg+CJ;AoD39CE;EAEE;ApD49CJ;AoDjlDE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ApD8lDb;AoD/kDI;EACE;ApDilDN;AoD5kDI;EACE;ApD8kDN;AoDzkDI;EACE;ApD2kDN;AoDtkDI;EACE;EACA;ApDwkDN;AoDnkDI;EACE;ApDqkDN;AoDhkDI;EACE;EACA;ApDkkDN;AoD5jDM;EACE;ApD8jDR;AoDzjDM;EACE;EACA;ApD2jDR;AoDtjDM;EACE;ApDwjDR;AoDnjDM;EACE;EACA;ApDqjDR;AoDxnDE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;ApDsoDf;AoDtnDI;EACE;ApDwnDN;AoDnnDI;EACE;ApDqnDN;AoDhnDI;EACE;ApDknDN;AoD7mDI;EACE;EACA;ApD+mDN;AoD1mDI;EACE;ApD4mDN;AoDvmDI;EACE;EACA;ApDymDN;AoDnmDM;EACE;ApDqmDR;AoDhmDM;EACE;EACA;ApDkmDR;AoD7lDM;EACE;ApD+lDR;AoD1lDM;EACE;EACA;ApD4lDR;AoD/pDE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ApD2qDb;AoD7pDI;EACE;ApD+pDN;AoD1pDI;EACE;ApD4pDN;AoDvpDI;EACE;ApDypDN;AoDppDI;EACE;EACA;ApDspDN;AoDjpDI;EACE;ApDmpDN;AoD9oDI;EACE;EACA;ApDgpDN;AoD1oDM;EACE;ApD4oDR;AoDvoDM;EACE;EACA;ApDyoDR;AoDpoDM;EACE;ApDsoDR;AoDjoDM;EACE;EACA;ApDmoDR;AoDzjDE;EACE;EACA;ApD2jDJ;AqDhrDI;EDwHE;EACA;ApD2jDN;;AoDtjDI;EACE;EACA;ApDyjDN;AoDpjDI;EACE;EACA;ApDsjDN;AoDjjDI;EAWI;EAMF;ApDoiDN;AsDxuDE;ElDmEE;EkDjEA;EACA;AtD0uDJ;AuD1rDE;;EnDgBE;AJ8qDJ;AwD7tDI;;EACE;AxDguDN;AwD5tDE;EACE;AxD8tDJ;AwD5tDI;EACE;AxD8tDN;AwD1tDE;EACE;EACA;AxD4tDJ;AwD1tDI;EACE;AxD4tDN;AwDxtDE;EACE;AxD0tDJ;AwDvtDE;EACE;EACA;AxDytDJ;AwDrtDI;EACE;EACA;EACA;AxDutDN;AwDntDE;EACE;EACA;AxDqtDJ;AwDntDI;EACE;AxDqtDN;AwDjtDE;EACE;EACA;AxDmtDJ;AwDjtDI;EACE;AxDmtDN;AwDhtDI;EACE;AxDktDN;AwD9sDE;;EAEE;AxDgtDJ;AyDhuDE;EACE;AzDkuDJ;AyD7tDE;;;EAGE;AzD+tDJ;AyD5tDE;EACE;AzD8tDJ;AyD3tDE;;EAEE;AzD6tDJ;AyD1tDE;;EAEE;EACA;AzD4tDJ;AyDxwDE;EAiDI,+BA/Ba;AzDyvDnB;AyDttDE;EACE,+BApCe;AzD4vDnB;AyDrtDE;EAOI;AzDitDN;AyDjxDE;EA2EI;AzDysDN;AyDpxDE;EAoFM;AzDmsDR;AyDjnDE;EACE,oCA9MA;AzDi0DJ;AyDhnDE;;EAEE,kCAViB;AzD4nDrB;AyD/mDE;;EAEE;AzDinDJ;AyD9mDE;;EAEE;AzDgnDJ;AyD7mDE;;EAEE,mBAxBc;AzDuoDlB;AyD5mDE;;EAEE,mBA5BuB;AzD0oD3B;AyDn1DE;EACE;EACA;AzDq1DJ;AyDl1DE;EASI,YAtBc;AzDk2DpB;AyDx0DE;EACE;AzD00DJ;AyDxzDE;;EASI;AzDmzDN;AyDr0DE;EASA;IASI;EzDuzDJ;AACF;AyD/tDE;ErD9EE;EqDgFA;EACA;AzDiuDJ;AyDhqDE;EACE,mCA9MA;AzDg3DJ;AyD/pDE;;EAEE,kCAViB;AzD2qDrB;AyD9pDE;;EAEE;AzDgqDJ;AyD7pDE;;EAEE;AzD+pDJ;AyD5pDE;;EAEE,mBAxBc;AzDsrDlB;AyD3pDE;;EAEE,mBA5BuB;AzDyrD3B;AyDl4DE;EACE;EACA;AzDo4DJ;AyDj4DE;EASI,YAtBc;AzDi5DpB;AyDv3DE;EACE;AzDy3DJ;AyDv2DE;;EASI;AzDk2DN;AyDp3DE;EASA;IASI;EzDs2DJ;AACF;AyD1sDE;EACE,iCA9MA;AzD05DJ;AyDzsDE;;EAEE,kCAViB;AzDqtDrB;AyDxsDE;;EAEE;AzD0sDJ;AyDvsDE;;EAEE;AzDysDJ;AyDtsDE;;EAEE,mBAxBc;AzDguDlB;AyDrsDE;;EAEE,mBA5BuB;AzDmuD3B;AyD56DE;EACE;EACA;AzD86DJ;AyD36DE;EASI,YAtBc;AzD27DpB;AyDj6DE;EACE;AzDm6DJ;AyDj5DE;;EASI;AzD44DN;AyD95DE;EASA;IASI;EzDg5DJ;AACF;AyD1yDE;ErD5FE;AJy4DJ;AyDzyDE;EACE;AzD2yDJ;AyDzyDI;EACE;AzD2yDN;AyDxyDI;EACE;AzD0yDN;AyDtyDE;EACE;AzDwyDJ;A0D59DE;EACE;A1D89DJ;A0D39DE;EACE;A1D69DJ;A2D39DE;EAEE;EACA;A3D49DJ;AuD/6DE;EnDgBE;AJk6DJ;A2D59DE;EACE;A3D89DJ;A4D9+DM;EDoBF;A3D69DJ;A2Dx9DE;EACE;IAEE;E3Dy9DJ;AACF;A2Dt9DE;EACE;A3Dw9DJ;A2Dr9DE;;EAEE;A3Du9DJ;A2Dp9DE;EACE;A3Ds9DJ;A2Dp9DI;;EAEE;A3Ds9DN;A6D7/DI;EACE;A7D+/DN;A6D5/DI;EACE;A7D8/DN;A6D3/DI;EACE;A7D6/DN;A8D//DE;EACE,yBALmC;EAMnC;A9DigEJ;A8D9/DE;EACE,yBAXwB;EAYxB;A9DggEJ;A8D9/DI;EACE,yBAb2B;A9D6gEjC;A8D7/DI;E1D8CA;AJk9DJ;A8Dz/DE;EACE,iDAvBmB;A9DkhEvB;A8Dz/DI;EACE,gDA1BiB;EA2BjB;A9D2/DN;A8Dv/DE;EACE,gDAhCmB;EAiCnB;A9Dy/DJ;A8Dv/DI;EACE;EACA,iDArCiB;A9D8hEvB;A8Dr/DE;EAQI;A9Dg/DN;A+DjiEI;EAIE;A/DgiEN;A+D7hEI;EACE;A/D+hEN;A+DzhEI;EACE;IACE;E/D2hEN;AACF;A+DxhEI;;EAIE;A/DwhEN;A+DrhEI;EAGE;EACA;A/DqhEN;A+DlhEI;;;EAGE;EACA;A/DohEN;A+DhhEM;EACE;A/DkhER;A+D/gEM;;;EAGE;EACA;A/DihER;A+D5gEM;EACE;A/D8gER;A+D3gEM;;;EAGE;EACA;A/D6gER;A+DzgEI;EACE;EACA;A/D2gEN;A+DxgEI;EACE;A/D0gEN;A+DvgEI;EACE;A/DygEN;A+DrgEE;EACE;A/DugEJ;A+DpgEE;EACE;A/DsgEJ;A+DngEE;;;EAGE;A/DqgEJ;AgExmEE;EAYI;AhE+lEN;AiEnkEE;EACE;EACA;AjEqkEJ;AiEnkEI;EApCF;EACA;AjE0mEF;AiEnkEI;EAxCF;EACA;AjE8mEF;AiEnkEI;EA5CF;EACA;AjEknEF;AiE9mEE;;;EAGE;AjEgnEJ;AiE7mEE;;;;;EAKE;AjE+mEJ;AiE5mEE;EACE;AjE8mEJ;AkExoEE;EACE;AlE0oEJ;AkEvoEE;;EAEE;AlEyoEJ;;AmEzpEA;EAGE;EACA;EAGA;EACA;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AnEspEF;AmEnpEI;EAAA;EAAA;EAAA;AAAA;AAKI;;EAAA;AAAA;AAIA;EAAA;EAAA;EAAA;EAAA;AAAA;AAKF;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;EAAA;EAAA;EAAA;AAAA;AAMJ;EAAA;EAAA;AAAA;;AChpE6pEF;AoE5xEE;EAzBF;IA0BI;EpE+xEF;AACF;;AqEzzEE;EACE;EAIA;ArEyzEJ;AqElzEI;EACE;ArEozEN;;AqEhzEE;EACE;ArEmzEJ;;AqEhzEE;EACE;EACA;EACA;EAEA;EAIA;ArE+yEJ;AqDhyEI;EgBXE;ArE8yEN;;AqDl1EE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAIA;EAGA;EAGA;EACA;EAMA;ArDy0EJ;AqDv0EI;EACE;EACA;ArDy0EN;;AsEz1EE;EAEE;EAGA;EACA;EACA;EACA;AtEy1EJ;;AsEr1EE;EACE;EACA,aA3BwB;AtEm3E5B;AsEt1EI;EAGE;AtEs1EN;;AsE90EE;EACE;EACA;EACA,aA1Cc;AtE23ElB;;AsE70EE;EAGE;EACA;EACA;EACA,aApDc;EAwDd;EACA;EACA;AtE20EJ;;AsEx0EE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApEuB;EAqEvB;EACA;EACA;EACA;AtEy0EJ;AsEv0EI;EACE;AtEy0EN;AsEp0EM;EAGE;AtEo0ER;;AsE/zEE;EACE,+BAtFqB;AtEw5EzB;;AsE/zEE;EAEE;EACA;EACA;AtEi0EJ;AsE3zEI;EACE;EACA;AtE6zEN;;AsEzzEE;EACE;AtE4zEJ;;AsEvzEE;EACE;EACA,aArHc;EA0Hd;EAIA;EAGA;EACA;AtEizEJ;;AsE7yEE;EACE;EAKA;EAKA;AtEwyEJ;;AuEz7EE;EACE;AvE47EJ;;AuEt7EE;EAyCA;EACA;EAxCE;EACA;AvE07EJ;;AuEj7EE;EA6BA;EACA;EA5BE;AvEq7EJ;;AuE36EE;AACA;AAEA;EAEE;AvE46EJ;;AuEz6EE;EAEE;AvE26EJ;;AwE18EE;EACE;AxE68EJ;AwE38EI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AxEs8EN;AwE97EI;EACE;AxEg8EN;;AqDr5EM;EmB7BA;AxEs7EN;;AwEj+EE;EACE;AxEo+EJ;AwEl+EI;ECfF;EACA;EACA;EACA;EACA;EDaI;EACA;EACA;EACA;EAYA;AxE69EN;AwEr9EI;EACE;AxEu9EN;;AqD56EM;EmB7BA;AxE68EN;;AE3/EE;EAII;AF2/EN;;AG5/EI;ECgEA;AJg8EJ;AG3/EM;EAOE;AHu/ER;;AKzuDE;ED1tBE;AJu8EJ;;AK7uDE;ED1tBE;AJ28EJ;;AKjvDE;ED1tBE;AJ+8EJ;;AMnhFI;EFoEA;AJm9EJ;;AO1/EE;EACE,0BAXe;APwgFnB;AO5/EI;EACE,cANa;APogFnB;;AOliFI;;EACE,+BAkBM;APohFZ;AOliFI;;EAKE,oCASM;APwhFZ;AOriFM;;EACE,cAeO;APyhFf;;AO/iFI;;EACE,8BAmBK;APgiFX;AO/iFI;;EAKE,mCAUK;APoiFX;AOljFM;;EACE,cAeO;APsiFf;;AO5jFI;;EACE,8BAmBK;AP6iFX;AO5jFI;;EAKE,mCAUK;APijFX;AO/jFM;;EACE,cAeO;APmjFf;;AOzkFI;;EACE,4BAoBG;APyjFT;AOzkFI;;EAKE,iCAWG;AP6jFT;AO5kFM;;EACE,cAeO;APgkFf;;AO1hFI;;EACE,cA/Ba;AP6jFnB;AO3hFI;;EACE,mBAnCa;APikFnB;;AQhlFE;EAIE;EACA;ARglFJ;;AQtkFI;EJ0CA;AJgiFJ;;AQ1kFI;EJ0CA;AJoiFJ;;AQ9kFI;EJ0CA;AJwiFJ;;AQllFI;EJ0CA;AJ4iFJ;;AQtlFI;EJ0CA;AJgjFJ;;AQ1lFI;EJ0CA;AJojFJ;;AQ9lFI;EJ0CA;AJwjFJ;;AQlmFI;EJ0CA;AJ4jFJ;;AQtmFI;EJ0CA;AJgkFJ;;AQ1mFI;EJ0CA;AJokFJ;;AQ9mFI;EJ0CA;AJwkFJ;;AQlnFI;EJ0CA;AJ4kFJ;;AQtnFI;EJ0CA;AJglFJ;;AQ1nFI;EJ0CA;AJolFJ;;AQ9nFI;EJ0CA;AJwlFJ;;AQloFI;EJ0CA;AJ4lFJ;;AQtoFI;EJ0CA;AJgmFJ;;AQ1oFI;EJ0CA;AJomFJ;;AQ9oFI;EJ0CA;AJwmFJ;;AQlpFI;EJ0CA;AJ4mFJ;;AQtpFI;EJ0CA;AJgnFJ;;AQ1pFI;EJ0CA;AJonFJ;;AQ9pFI;EJ0CA;AJwnFJ;;AQlqFI;EJ0CA;AJ4nFJ;;AQtqFI;EJ0CA;AJgoFJ;;AQnqFI;EACE;ARsqFN;;AGtpFI;EuE6QA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;AJ8oFJ;;ASxsFI;EL0DA;EAAA;AJmpFJ;;ASlsFI;EL+CA;EAAA;AJwpFJ;;AS1rFI;EACE;AT6rFN;;ASlrFI;EiEiRA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJwqFJ;;AS1rFI;EiE6QA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJorFJ;;AUjuFI;EN6CA;AJwrFJ;AW7qFE;EPXE;AJ2rFJ;AWnqFE;EPxBE;AJ8rFJ;AUxuFM;EN0CF;AJisFJ;AWtrFE;EPXE;AJosFJ;AW5qFE;EPxBE;AJusFJ;AU7uFM;ENsCF;AJ0sFJ;AW/rFE;EPXE;AJ6sFJ;AWrrFE;EPxBE;AJgtFJ;AYlxFI;ERkEA;EAAA;EAAA;EAAA;EAAA;EAAA;AJotFJ;;AatQE;ET98EE;AJ+tFJ;AatVE;ETz4EE;AJkuFJ;AalPE;EAGE;ITn/EA;EJsuFF;Ea3OE;IT3/EA;EJ2uFF;AAJF;AalyDE;ETr8BE;AJ+uFJ;Ac1tFE;EVrBE;AJkvFJ;Ae7tFE;;EXrBE;AJsvFJ;AgBxpFE;EZ9FE;AJyvFJ;AgBjpFE;EZxGE;AJ4vFJ;AarSI;ETv9EA;AJ+vFJ;Aa9RI;ETj+EA;AJkwFJ;AiBtrFI;;Eb5EA;AJswFJ;AiBjzEE;EbrdE;AJywFJ;AiBpzEE;EbrdE;AJ4wFJ;AapQE;ETxgFE;AJ+wFJ;AkB/uFI;EdhCA;AJkxFJ;AkBlvFI;EdhCA;AJqxFJ;AkB/vFI;EdtBA;AJwxFJ;AmBruFE;;;EfnDE;AJ6xFJ;AmB1uFE;;;EfnDE;AJkyFJ;AmB/uFE;;;EfnDE;AJuyFJ;AoBryFM;EACE;EAEA;ApBsyFR;;AoBzyFM;EACE;EAEA;ApB2yFR;;AiBpuFI;;Eb5EA;AJqzFJ;AoBnzFM;EACE;EAEA;ApBozFR;Aa3WE;ET98EE;AJ4zFJ;AkB5xFI;EdhCA;AJ+zFJ;AkBzyFI;EdtBA;AJk0FJ;AapXE;ET98EE;AJq0FJ;ActyFE;EV/BE;AJw0FJ;Aan4DE;ETr8BE;AJ20FJ;AgBnuFE;EZxGE;AJ80FJ;AkB9yFI;EdhCA;AJi1FJ;AmB9xFE;;;EfnDE;AJs1FJ;AmBnyFE;;;EfnDE;AJ21FJ;AmBxyFE;;;EfnDE;AJg2FJ;AavdE;ETz4EE;AJm2FJ;AanXE;EAGE;ITn/EA;EJu2FF;Ea5WE;IT3/EA;EJ42FF;AAJF;Aa1ZE;ET98EE;AJg3FJ;Ac31FE;EVrBE;AJm3FJ;Ae91FE;;EXrBE;AJu3FJ;AgBzxFE;EZ9FE;AJ03FJ;AgBlxFE;EZxGE;AJ63FJ;AataI;ETv9EA;AJg4FJ;Aa/ZI;ETj+EA;AJm4FJ;AkBn2FI;EdhCA;AJs4FJ;AmBn1FE;;;EfnDE;AJ24FJ;Aa3ZE;EAGE;ITn/EA;EJ+4FF;EapZE;IT3/EA;EJo5FF;EatcA;IT98EE;EJy5FF;Ecp4FA;IVrBE;EJ85FF;Eez4FA;;IXrBE;EJo6FF;EgBt0FA;IZ9FE;EJy6FF;EgBj0FA;IZxGE;EJ86FF;EavdE;ITv9EA;EJm7FF;EaldE;ITj+EA;EJw7FF;EkBx5FE;IdhCA;EJ67FF;EmB14FA;;;IfnDE;EJo8FF;AApDF;AazrFI;ETvNA;AJw8FJ;AoBt8FM;EACE;EAEA;ApBu8FR;;AoB18FM;EACE;EAEA;ApB48FR;AqB99FE;EjBaE;AJo9FJ;;AsB1gGE;EACE,qCCHwB;AvBghG5B;;AsB1gGE;EACE,aAPc;AtBohGlB;;AsB1gGE;EACE,aAZc;AtByhGlB;;AwBx8FM;EACE,0BAtBkB;AxBi+F1B;AwBt8FU;EACE;AxBw8FZ;AwBn8FU;EACE;AxBq8FZ;AwBh8FU;EACE;AxBk8FZ;AwB57FQ;EACE,0BA9CyB;AxB4+FnC;;Aa3iEE;ETr8BE;AJo/FJ;AkB99FI;EdtBA;AJu/FJ;AaziBE;ET98EE;AJ0/FJ;AkB19FI;EdhCA;AJ6/FJ;AkBv+FI;EdtBA;AJggGJ;AaljBE;ET98EE;AJmgGJ;Acp+FE;EV/BE;AJsgGJ;AajkEE;ETr8BE;AJygGJ;AgBj6FE;EZxGE;AJ4gGJ;AkB5+FI;EdhCA;AJ+gGJ;AmB59FE;;;EfnDE;AJohGJ;AmBj+FE;;;EfnDE;AJyhGJ;AmBt+FE;;;EfnDE;AJ8hGJ;AmB3+FE;;;EfnDE;AJmiGJ;;Aa9lEE;ETr8BE;AJuiGJ;AkBjhGI;EdtBA;AJ0iGJ;Aa5lBE;ET98EE;AJ6iGJ;AkB7gGI;EdhCA;AJgjGJ;AkB1hGI;EdtBA;AJmjGJ;AarmBE;ET98EE;AJsjGJ;AcvhGE;EV/BE;AJyjGJ;AapnEE;ETr8BE;AJ4jGJ;AgBp9FE;EZxGE;AJ+jGJ;AkB/hGI;EdhCA;AJkkGJ;AmB/gGE;;;EfnDE;AJukGJ;AmBphGE;;;EfnDE;AJ4kGJ;AmBzhGE;;;EfnDE;AJilGJ;AmB9hGE;;;EfnDE;AJslGJ;;A0B7lGQ;EACE;A1BgmGV;;A0B1lGU;EACE;EACA;A1B6lGZ;;A2ErmGE;EACE,gBA7BO;A3EqoGX;;A2EjmGE;EACE;A3EomGJ;;A2E9lGE;EAEE;;qEAAA;EAGA;A3EgmGJ;;A2EhqGE;EACE;EACA;A3EmqGJ;;A2ErrGE;EACE;EACA;A3EwrGJ;;A2ErrGE;EAEE;EACA;A3EurGJ;;Aa9nGE;E6D4PE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJwoGJ;AaxnGE;E6D2OE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJkpGJ;AoBhpGM;EACE;EAEA;ApBipGR;;AoBppGM;EACE;EAEA;ApBspGR;;AaplGI;EAi8DA,mB+Dv8DmB;A5E8lGvB;AoB7pGM;EACE;EAEA;ApB8pGR;AoBjqGM;EACE;EAEA;ApBkqGR;;A6E9sGE;EHkSE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJkrGJ;;AoBhrGM;EACE;EAEA;ApBkrGR;AqBxrGE;;EqD4PE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJmsGJ;;A0B5qGI;;EgDoOA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJgtGJ;;A0B3qGM;EACE;A1B8qGR;A0B3qGM;EACE;A1B6qGR;;A2B3vGE;EvBoCE;EAAA;EAAA;AJ6tGJ;AKngFE;ED1tBE;AJguGJ;;AK5/EE;EDpuBE;AJouGJ;;AKh/EE;EDpvBE;AJwuGJ;;AKr9EE;;EDnxBE;EAAA;AJ6uGJ;;AK/+EE;ED9vBE;AJsvGJ;;AKr7EI;;;EDj0BA;AJ4vGJ;;AKliFE;ED1tBE;AJgwGJ;AK5hFE;EDpuBE;AJmwGJ;AK/gFE;EDpvBE;AJswGJ;AK93DI;EDx4CA;AJywGJ;AKx3DM;EDj5CF;AJ4wGJ;AKp5DI;EDx3CA;AJ+wGJ;;AKrjFE;;ED1tBE;AJoxGJ;AK54DI;;EDx4CA;AJwxGJ;;AK18EE;ED90BE;AJ4xGJ;;AKh4DE;ED55CE;AJgyGJ;;AKv0EE;EDz9BE;AJoyGJ;;A4B31GI;EACE;A5B81GN;;A4B31GI;EACE;A5B81GN;;A4B31GI;EACE,0BAbe;A5B22GrB;;A4B31GI;EACE;A5B81GN;;A4Bz1GQ;EACE;A5B41GV;A4Bz1GQ;EACE;A5B21GV;A4Bx1GQ;EACE;A5B01GV;A4Bt1GM;EACE;A5Bw1GR;A4Br1GM;EACE,0BAxCa;A5B+3GrB;;A4B30GI;E8CkQA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;EC4rCA;EACA;ALqpEJ;;A4Br1GI;E8C8PA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ81GJ;;A2Bl4GE;EvBoCE;EAAA;EAAA;AJo2GJ;AK1oFE;ED1tBE;AJu2GJ;;AKnoFE;EDpuBE;AJ22GJ;;AKvnFE;EDpvBE;AJ+2GJ;;AK5lFE;;EDnxBE;EAAA;AJo3GJ;;AKtnFE;ED9vBE;AJ63GJ;;AK5jFI;;;EDj0BA;AJm4GJ;;AKzqFE;ED1tBE;AJu4GJ;AKnqFE;EDpuBE;AJ04GJ;AKtpFE;EDpvBE;AJ64GJ;AKrgEI;EDx4CA;AJg5GJ;AK//DM;EDj5CF;AJm5GJ;AK3hEI;EDx3CA;AJs5GJ;;AK5rFE;;ED1tBE;AJ25GJ;AKnhEI;;EDx4CA;AJ+5GJ;;AKjlFE;ED90BE;AJm6GJ;;AKvgEE;ED55CE;AJu6GJ;;AK98EE;EDz9BE;AJ26GJ;;A8Er+GI;EJqTA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;EC4rCA;EACA;AL4vEJ;;A6Bz/GI;EzBgEA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJg8GJ;;A8B99GI;E1B8BA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJy9GJ;A8BzgHE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJo+GJ;A8BphHE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ++GJ;A8B/hHE;E1BgDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ0/GJ;;A8B9/GE;EACE;A9BigHJ;;A8B5+GE;E1BlBE;AJkgHJ;;A8Bz/GI;E4CkPA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ8gHJ;;A+B1gHI;E3BJA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJqiHJ;AgChlHE;E5B2CE;AJwiHJ;A+B/hHM;EACE;A/BiiHR;A+BrgHE;E3BtCE;AJ8iHJ;;AgCzlHE;E0CsSE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ0jHJ;AgCrmHE;E5B2CE;AJ6jHJ;AiCzmHE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCgmHJ;AiCpmHI;EACE;AjCsmHN;AiC1nHE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCinHJ;AiCrnHI;EACE;AjCunHN;AiC3oHE;E7B4CE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCkoHJ;AiCtoHI;EACE;AjCwoHN;;A+EjpHE;E3EiCE;AJonHJ;AgFjxGE;E5EnWE;EAAA;EAAA;EAAA;AJ0nHJ;AgF10GE;E5EhTE;EAAA;EAAA;EAAA;EAAA;AJioHJ;;AgC5qHE;E0CsSE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ6oHJ;AkC5sHI;E9B+DA;EAAA;EAAA;EAAA;EAAA;EAAA;E8B/CE;AlCqsHN;AkCnsHM;E9B6CF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlC0oHF;AkC3sHM;E9ByCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlCspHF;AkCntHM;E9BqCF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E8BsBF;EACA;EACA;AlCkqHF;;AkCptHI;E9B0BA;EAAA;EAAA;EAAA;EAAA;AJksHJ;;A2BtuHE;EvBoCE;EAAA;EAAA;AJwsHJ;AK9+FE;ED1tBE;AJ2sHJ;;AKv+FE;EDpuBE;AJ+sHJ;;AK39FE;EDpvBE;AJmtHJ;;AKh8FE;;EDnxBE;EAAA;AJwtHJ;;AK19FE;ED9vBE;AJiuHJ;;AKh6FI;;;EDj0BA;AJuuHJ;;AK7gGE;ED1tBE;AJ2uHJ;AKvgGE;EDpuBE;AJ8uHJ;AK1/FE;EDpvBE;AJivHJ;AKz2EI;EDx4CA;AJovHJ;AKn2EM;EDj5CF;AJuvHJ;AK/3EI;EDx3CA;AJ0vHJ;;AKhiGE;;ED1tBE;AJ+vHJ;AKv3EI;;EDx4CA;AJmwHJ;;AKr7FE;ED90BE;AJuwHJ;;AK32EE;ED55CE;AJ2wHJ;;AKlzFE;EDz9BE;AJ+wHJ;;AmCz0HM;;;E/B0DF;AJqxHJ;;AmCt0HI;;E/BiDA;AJ0xHJ;;AmCj0HM;;;;EAEE;AnCs0HR;;AmC1zHI;EuCoRA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;EC4rCA;EACA;ALknFJ;AmCj0HM;;EuC6QF;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ2zHJ;;AoCr3HE;EhC0DE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ+0HJ;;AqCr5HE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCk3HJ;AiCt3HI;EACE;AjCs4HN;;AqCp7HE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCi5HJ;AiCr5HI;EACE;AjCq6HN;;AqCn9HE;EjCsEE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;E6B5BA;EAOA;AjCg7HJ;AiCp7HI;EACE;AjCo8HN;;AKltGE;;ED1tBE;AJi7HJ;AKziFI;;EDx4CA;AJq7HJ;;AoCp9HI;;;EAGE;ApCu9HN;;AoC78HE;EhCkBE;EAAA;EAAA;AJi8HJ;;AoCv8HM;EACE;ApC08HR;AoCh8HM;EACE;ApCk8HR;;AoC/6HE;EhCzBE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ09HJ;;AoC37HE;E6C7BE;EAcF;AjF+8HF;;AsC1hIE;EACE;EACA;AtC6hIJ;;AsC1hIE;EACE,yBATW;AtCsiIf;;AsC1hIE;;EAEE;EACA;AtC6hIJ;;AsC1hIE;;EAEE;AtC6hIJ;;AsCzhII;;;;EAIE,iCA3Ba;AtCujInB;AsCzhII;EACE,yBA/Ba;AtC0jInB;;A2EngIE;EACE,gBA7BO;A3EmiIX;A2E//HE;EACE;A3EigIJ;A2E3/HE;EAEE;;qEAAA;EAGA;A3E4/HJ;A2E5jIE;EACE;EACA;A3E8jIJ;A2EhlIE;EACE;EACA;A3EklIJ;A2E/kIE;EAEE;EACA;A3EglIJ;A2Ez/HI;EACI;A3E2/HR;;AsClhIE;EACE,gBAhBO;AtCqiIX;;AsCjjII;EoC+QA;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJyiIJ;;AsCzjII;EACE;AtC4jIN;;AuCtmII;EAME;AvComIN;AwCx7HE;EpCzHE;AJojIJ;AuCpmIQ;;;EAEE;AvCumIV;;AwCh8HE;EpCzHE;AJ6jIJ;AyC1kIE;ErCaE;AJgkIJ;AuC1jIE;;;;EnCNE;AJskIJ;;AwC78HE;EpCzHE;AJ0kIJ;AyCvlIE;ErCaE;AJ6kIJ;AuCvkIE;;;;;;;EnCNE;AJslIJ;AwC79HE;EpCzHE;AJylIJ;AyCtmIE;ErCaE;AJ4lIJ;AuCtlIE;;;;;;;EnCNE;AJqmIJ;;AuCjoIM;EAsBJ;EACA;AvC+mIF;AuCloIM;EAkBJ;EACA;AvCmnIF;AuCloIM;EAcJ;EACA;AvCunIF;;AuCjoII;EnCeA;AJsnIJ;;AkFjoIE;E1CgNE,Y0CtNO;AlF2oIX;;AwCnjIE;EkCoLE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJsoIJ;AgCjrIE;E5B2CE;AJyoIJ;AE5sIE;EAII;AF2sIN;A0C3qIM;EACE;A1C6qIR;A0CvqIM;EtCwBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJ4pIJ;AE/tIE;EAOI,0CAVc;EAWd,YAVY;AFquIlB;A0CrtII;EACE,oCAOM;A1CgtIZ;A0CtrIM;EtCmBF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJgrIJ;AEnvIE;EAOI,yCAVc;EAWd,YAVY;AFyvIlB;A0CzuII;EACE,mCAQK;A1CmuIX;A0CrsIM;EtCcF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AJosIJ;AEvwIE;EAOI,uCAVc;EAWd,YAVY;AF6wIlB;A0C7vII;EACE,iCASG;A1CsvIT;;A0CntII;EAEE;A1CqtIN;;A0CnsII;EtCZA;EAAA;AJotIJ;AmFn8HE;E/EjRE;EAAA;AJwtIJ;AmF/5HM;E/EzTF;EAAA;EAAA;EAAA;EAAA;AJ+tIJ;;AoFjtII;EACE;IACE;EpFotIN;AACF;;AgChxIE;E0CsSE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJivIJ;A2CvwIM;EvCsBF;AJovIJ;A2CtwIM;EvCkBF;AJuvIJ;A2CrwIM;EvCcF;AJ0vIJ;A2CpwIM;EvCUF;AJ6vIJ;A4CtxIE;ExCyBE;EAAA;AJiwIJ;;A2C5vIM;EvCLF;EAAA;AJswIJ;A2C7vIM;EvCTF;EAAA;AJ0wIJ;A2C7vIM;EvCbF;EAAA;AJ8wIJ;A2C7vIM;EvCjBF;EAAA;AJkxIJ;A4C3yIE;ExCyBE;EAAA;EAAA;EAAA;AJwxIJ;;A2CtvIM;EvClCF;EAAA;AJ6xIJ;A2CvvIM;EvCtCF;EAAA;AJiyIJ;A2CvvIM;EvC1CF;EAAA;AJqyIJ;A2CvvIM;EvC9CF;EAAA;AJyyIJ;A4Cl0IE;ExCyBE;EAAA;EAAA;EAAA;EAAA;AJgzIJ;;A2CjvII;EvC/DA;AJozIJ;A2ChvIM;EvCpEF;AJuzIJ;A2C/uIM;EvCxEF;AJ0zIJ;A2C9uIM;EvC5EF;AJ6zIJ;A2C7uIM;EvChFF;AJg0IJ;A4Cz1IE;ExCyBE;EAAA;EAAA;EAAA;AJs0IJ;;A2CruII;ECxKF;EACA;A5Ci5IF;A4Cz4IE;EACE;A5C24IJ;A4Ct4II;EACE;A5Cw4IN;A4Cp4IE;EACE;A5Cs4IJ;A4Cj4IE;EA1BA;EACA;A5C85IF;A4Cj4IE;EA9BA;EACA;A5Ck6IF;A4Cj4IE;EAlCA;EACA;A5Cs6IF;;A2C3vII;EC5KF;EACA;A5C26IF;A4Cn6IE;EACE;A5Cq6IJ;A4Ch6II;EACE;A5Ck6IN;A4C95IE;EACE;A5Cg6IJ;A4C35IE;EA1BA;EACA;A5Cw7IF;A4C35IE;EA9BA;EACA;A5C47IF;A4C35IE;EAlCA;EACA;A5Cg8IF;;A2ChwII;;;;EvC1HA;AJi4IJ;;AqFvzIE;EXiLE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJ64IJ;;A6C18II;EDVF;EACA;A5Cw9IF;A4Ch9IE;EACE;A5Ck9IJ;A4C78II;EACE;A5C+8IN;A4C38IE;EACE;A5C68IJ;A4Cx8IE;EA1BA;EACA;A5Cq+IF;A4Cx8IE;EA9BA;EACA;A5Cy+IF;A4Cx8IE;EAlCA;EACA;A5C6+IF;A6Cj+IM;EzC0DF;AJ06IJ;A6Ch+IM;EzCsDF;AJ66IJ;A6C/9IM;EzCkDF;AJg7IJ;A4Cz8IE;ExCyBE;EAAA;AJo7IJ;;A6C78IE;EyC8FE,WAnBK;EAoBL,YApBK;EAqBL;AtFm3IJ;AsFh3IE;EAEI,gBA1BG;EA2BH,eA3BG;AtF44IT;AsFp2II;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AvFm3IlC;AsF71II;EAEI,gBApBe;EAqBf,eArBe;AtFm3IvB;AsFz1IE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AvFk9IN;;A8CxgJI;EFlBF;EACA;A5C8hJF;A4CthJE;EACE;A5CwhJJ;A4CnhJI;EACE;A5CqhJN;A4CjhJE;EACE;A5CmhJJ;A4C9gJE;EA1BA;EACA;A5C2iJF;A4C9gJE;EA9BA;EACA;A5C+iJF;A4C9gJE;EAlCA;EACA;A5CmjJF;A8C/hJM;E1CkDF;EAAA;E0C9DF;A9CgjJF;A8ChiJM;E1C8CF;EAAA;E0C9DF;A9CqjJF;A8C9hJM;E1CuCF;EAAA;E0C9DF;A9C0jJF;A8C5hJM;E1CgCF;EAAA;E0C9DF;A9C+jJF;A4C1hJE;ExCyBE;EAAA;E0C9DF;A9CokJF;;AyFjhJE;EfsQE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJkhJJ;A+C/kJI;EAME;E3CuDF;EAAA;EAAA;EAAA;EAAA;EAAA;AJuhJJ;;AgD7+IE;E5C1CE;EAAA;AJmiJJ;AiDvyIE;E7C5PE;AJsiJJ;;AiDpzIE;E7ClPE;AJ0iJJ;;AiDpyIE;E7CtQE;AJ8iJJ;;AmB3/IE;;;EfnDE;AJojJJ;AiD/wIE;;E7CrSE;AJwjJJ;;AiD5wIE;E7C5SE;AJ4jJJ;;AiD7uIE;E7C/UE;AJgkJJ;;AiDvuIE;E7CzVE;AJokJJ;;AiD7tIE;;;E7CvWE;AJ0kJJ;;AoBxkJM;EACE;EAEA;ApB0kJR;;AkDvnJE;EAEE;AlDynJJ;;AiDrmIE;E7C9eE;AJulJJ;AiDnmIE;E7CpfE;AJ0lJJ;AiDtnIE;E7CpeE;AJ6lJJ;;AgDvjJE;E0BqNE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJymJJ;;A0FvpJE;EhBySE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJqnJJ;;A2F7pJE;EjBmSE;EACA;EtE5PA;EAAA;EAAA;EAAA;EAAA;EAAA;UAAA;EAAA;AJioJJ;;AoB/nJM;EACE;EAEA;ApBioJR;;AmDtsJI;E/CgEA;AJ0oJJ;AmDvsJM;E/C6DF;AJ6oJJ;AmDtsJM;E/CyDF;AJgpJJ;;AoDznJE;EACE;ApD4nJJ;;AoDrnJE;EACE;ApDwnJJ;;AoDpnJI;EACE;ApDunJN;;AoDnnJE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;ApDsnJJ;;AoDnnJE;;EAEE;ApDsnJJ;;AoDjnJE;EAEE;ApDmnJJ;;AoDxuJE;EACE,WATS;EAUT,YAVS;EAWT,iBAXS;ApDsvJb;AoDvuJI;EACE;ApDyuJN;AoDpuJI;EACE;ApDsuJN;AoDjuJI;EACE;ApDmuJN;AoD9tJI;EACE;EACA;ApDguJN;AoD3tJI;EACE;ApD6tJN;AoDxtJI;EACE;EACA;ApD0tJN;AoDptJM;EACE;ApDstJR;AoDjtJM;EACE;EACA;ApDmtJR;AoD9sJM;EACE;ApDgtJR;AoD3sJM;EACE;EACA;ApD6sJR;;AoDhxJE;EACE,WAVW;EAWX,YAXW;EAYX,iBAZW;ApD+xJf;AoD/wJI;EACE;ApDixJN;AoD5wJI;EACE;ApD8wJN;AoDzwJI;EACE;ApD2wJN;AoDtwJI;EACE;EACA;ApDwwJN;AoDnwJI;EACE;ApDqwJN;AoDhwJI;EACE;EACA;ApDkwJN;AoD5vJM;EACE;ApD8vJR;AoDzvJM;EACE;EACA;ApD2vJR;AoDtvJM;EACE;ApDwvJR;AoDnvJM;EACE;EACA;ApDqvJR;;AoDxzJE;EACE,WARS;EAST,YATS;EAUT,iBAVS;ApDq0Jb;AoDvzJI;EACE;ApDyzJN;AoDpzJI;EACE;ApDszJN;AoDjzJI;EACE;ApDmzJN;AoD9yJI;EACE;EACA;ApDgzJN;AoD3yJI;EACE;ApD6yJN;AoDxyJI;EACE;EACA;ApD0yJN;AoDpyJM;EACE;ApDsyJR;AoDjyJM;EACE;EACA;ApDmyJR;AoD9xJM;EACE;ApDgyJR;AoD3xJM;EACE;EACA;ApD6xJR;;AoDntJE;EACE;EACA;ApDstJJ;AqD30JI;EDwHE;EACA;ApDstJN;;AoDjtJI;EACE;EACA;ApDotJN;;AoD/sJI;EACE;EACA;ApDktJN;;AoD7sJI;EAWI;EAMF;ApDisJN;;AoDzrJE;EACE,gBA1MU;EA2MV,eA5MQ;EA6MR;ApD4rJJ;;AoDzrJE;EAEE;ApD2rJJ;;AoDxrJE;EACE;ApD2rJJ;;AsDn5JE;ElDmEE;EkDjEA;EACA;E2BkEA;EAcF;AjFs0JF;;AuDt2JE;;EnDgBE;AJg2JJ;;AwD/4JI;;EACE;AxDm5JN;;AwD/4JE;EACE;AxDk5JJ;AwDh5JI;EACE;AxDk5JN;;AwD94JE;EACE;EACA;AxDi5JJ;AwD/4JI;EACE;AxDi5JN;;AwD74JE;EACE;AxDg5JJ;;AwD74JE;EACE;EACA;AxDg5JJ;;AwD54JI;EACE;EACA;EACA;AxD+4JN;;AwD34JE;EACE;EACA;AxD84JJ;AwD54JI;EACE;AxD84JN;;AwD14JE;EACE;EACA;AxD64JJ;AwD34JI;EACE;AxD64JN;AwD14JI;EACE;AxD44JN;;AwDx4JE;;EAEE;AxD24JJ;;AwDz3JI;EACE,iBALc;AxDi4JpB;;AwDx4JE;EACE;AxD24JJ;;AyDn6JE;EACE;AzDs6JJ;;AyDj6JE;;;EAGE;AzDo6JJ;;AyDj6JE;EACE;AzDo6JJ;;AyDj6JE;;EAEE;AzDo6JJ;;AyDj6JE;;EAEE;EACA;AzDo6JJ;;AyDh9JE;EAiDI,0BA/Ba;AzDk8JnB;;AyD/5JE;EACE,0BApCe;AzDs8JnB;;AyD/5JE;EAOI;AzD45JN;;AyD59JE;EA2EI;AzDq5JN;;AyDh+JE;EAoFM;AzDg5JR;;AyD9zJE;EACE,oCA9MA;AzD+gKJ;;AyD9zJE;;EAEE,kCAViB;AzD20JrB;;AyD9zJE;;EAEE;AzDi0JJ;;AyD9zJE;;EAEE;AzDi0JJ;;AyD9zJE;;EAEE,mBAxBc;AzDy1JlB;;AyD9zJE;;EAEE,mBA5BuB;AzD61J3B;;AyDtiKE;EACE;EACA;AzDyiKJ;;AyDtiKE;EASI,YAtBc;AzDujKpB;;AyD7hKE;EACE;AzDgiKJ;;AyD9gKE;;EASI;AzD0gKN;;AyD5hKE;EASA;IASI;EzD+gKJ;AACF;AyDv7JE;ErD9EE;EqDgFA;EACA;AzDy7JJ;AyDx3JE;EACE,mCA9MA;AzDwkKJ;AyDv3JE;;EAEE,kCAViB;AzDm4JrB;AyDt3JE;;EAEE;AzDw3JJ;AyDr3JE;;EAEE;AzDu3JJ;AyDp3JE;;EAEE,mBAxBc;AzD84JlB;AyDn3JE;;EAEE,mBA5BuB;AzDi5J3B;AyD1lKE;EACE;EACA;AzD4lKJ;AyDzlKE;EASI,YAtBc;AzDymKpB;AyD/kKE;EACE;AzDilKJ;AyD/jKE;;EASI;AzD0jKN;AyD5kKE;EASA;IASI;EzD8jKJ;AACF;AyDl6JE;EACE,iCA9MA;AzDknKJ;AyDj6JE;;EAEE,kCAViB;AzD66JrB;AyDh6JE;;EAEE;AzDk6JJ;AyD/5JE;;EAEE;AzDi6JJ;AyD95JE;;EAEE,mBAxBc;AzDw7JlB;AyD75JE;;EAEE,mBA5BuB;AzD27J3B;AyDpoKE;EACE;EACA;AzDsoKJ;AyDnoKE;EASI,YAtBc;AzDmpKpB;AyDznKE;EACE;AzD2nKJ;AyDzmKE;;EASI;AzDomKN;AyDtnKE;EASA;IASI;EzDwmKJ;AACF;;AyDlgKE;ErD5FE;AJkmKJ;;AyDlgKE;EACE;AzDqgKJ;AyDngKI;EACE;AzDqgKN;AyDlgKI;EACE;AzDogKN;;AyDhgKE;EACE;AzDmgKJ;;A6CzoKE;EyC8FE,WAnBK;EAoBL,YApBK;EAqBL;AtF+iKJ;AsF5iKE;EAEI,gBA1BG;EA2BH,eA3BG;AtFwkKT;AsFhiKI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AvF+iKlC;AsFzhKI;EAEI,gBApBe;EAqBf,eArBe;AtF+iKvB;AsFrhKE;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AvF8oKN;A4ChqKI;EACE;A5CkqKN;;AyD9hKE;EACE;AzDiiKJ;;AyD9hKE;EACE,eAzLsB;AzD0tK1B;;AyD9hKE;;EAGI;EACA;AzDgiKN;;AyD5hKE;EAEI,eArM6B;EAsM7B;AzD8hKN;;A0D5uKE;EACE;A1D+uKJ;;A0D5uKE;EACE;A1D+uKJ;;A2D7uKE;EAEE;EACA;A3D+uKJ;AuDlsKE;EnDgBE;AJqrKJ;;A2D/uKE;EACE;A3DkvKJ;;A4DlwKM;EDoBF;A3DkvKJ;;A2D7uKE;EACE;IAEE;E3D+uKJ;AACF;A2D5uKE;EACE;A3D8uKJ;;A2D3uKE;;EAEE;A3D8uKJ;;A2D3uKE;EACE;A3D8uKJ;A2D5uKI;;EAEE;A3D8uKN;;A2DjtKI;EACE,YALe;A3DytKrB;A2DltKM;EACE,YAVY;A3D8tKpB;;A2D7uKE;EAEI;EACA;EACA;A3D+uKN;;A2D3uKE;EsBaE;EAcF;AjFqtKF;;A4FvyKE;;EAGE;A5FyyKJ;A6F7yKE;;EARA;EACA;EACA;EAQE;EACA;A7FkzKJ;A6F/yKI;;EACE,eDJwB;A5FszK9B;;A6DxzKI;EACE;A7D2zKN;A6DxzKI;EACE;A7D0zKN;A6DvzKI;EACE;A7DyzKN;;A8D3zKE;EACE,yBALmC;EAMnC;A9D8zKJ;;A8D3zKE;EACE,uBAXwB;EAYxB;A9D8zKJ;A8D5zKI;EACE,uBAb2B;A9D20KjC;A8D3zKI;E1D8CA;AJgxKJ;;A8DvzKE;EACE,+CAvBmB;A9Di1KvB;A8DxzKI;EACE,8CA1BiB;EA2BjB;A9D0zKN;;A8DtzKE;EACE,8CAhCmB;EAiCnB;A9DyzKJ;A8DvzKI;EACE;EACA,+CArCiB;A9D81KvB;;A8DrzKE;EAQI;A9DizKN;;A+Dl2KI;EAIE;A/Dk2KN;A+D/1KI;EACE;A/Di2KN;A+D31KI;EACE;IACE;E/D61KN;AACF;A+D11KI;;EAIE;A/D01KN;A+Dv1KI;EAGE;EACA;A/Du1KN;A+Dp1KI;;;EAGE;EACA;A/Ds1KN;A+Dl1KM;EACE;A/Do1KR;A+Dj1KM;;;EAGE;EACA;A/Dm1KR;A+D90KM;EACE;A/Dg1KR;A+D70KM;;;EAGE;EACA;A/D+0KR;A+D30KI;EACE;EACA;A/D60KN;A+D10KI;EACE;A/D40KN;A+Dz0KI;EACE;A/D20KN;;A+Dv0KE;EACE;A/D00KJ;;A+Dv0KE;EACE;A/D00KJ;;A+Dv0KE;;;EAGE;A/D00KJ;;A+DjyKI;EACE,YANK;A/D0yKX;;A+DjyKI;;EAEE;A/DoyKN;;A+D/xKI;EACE;EACA;A/DkyKN;;A+D7xKM;EACE;A/DgyKR;;A+D3xKI;EACE;A/D8xKN;;A+Dz1KE;EACE;A/D41KJ;;A+Dz1KE;EAEI;EACA;A/D21KN;;A+Dv1KE;EACE;A/D01KJ;;A+Dv1KE;EACE;A/D01KJ;;A+Dv1KE;EAEI;EACA;A/Dy1KN;;AgEz9KE;EAYI;AhEi9KN;;AiEr7KE;EACE;EACA;AjEw7KJ;AiEt7KI;EApCF;EACA;AjE69KF;AiEt7KI;EAxCF;EACA;AjEi+KF;AiEt7KI;EA5CF;EACA;AjEq+KF;AiEj+KE;;;EAGE;AjEm+KJ;AiEh+KE;;;;;EAKE;AjEk+KJ;AiE/9KE;EACE;AjEi+KJ;;AiE9/KE;EACE,gBA6Ee;AjEo7KnB;;AiE//KE;EACE,YA0Ee;AjEw7KnB;;AiE56KI;EA1FF;IACE,gBA+Ec;EjE27KhB;EiExgLA;IACE,YA4Ec;EjE87KhB;AACF;AiE/8KE;;;;;;;EgBOE;EAcF;EhBbE;AjEk9KJ;;AkEvhLE;EACE;AlE0hLJ;;AkEvhLE;;EAEE;AlE0hLJ;;AkElgLI;EACE,gBALK;AlE0gLX;;AkEvhLE;EACE;AlE0hLJ;;AkEvhLE;;EAEE;EACA;AlE0hLJ;;A8F1jLA;EAEE;EACA;A9F4jLF;A8F1jLE;EALF;IAMI;E9F6jLF;E8F3jLE;IACE;E9F6jLJ;AACF;A8F1jLE;EACE;0FAAA;EAEA;A9F4jLJ;A8FxjLI;EACE;A9F0jLN;;A8FrjLA;EAGM;IACE;IACA;E9FsjLN;E8FnjLI;IACE;IACA;E9FqjLN;E8F9iLI;IACE;IACA;E9FgjLN;E8F7iLI;IACE;IACA;E9F+iLN;AACF;A+FlmLA;AAEE;EACE;EACA;EACA;A/FmmLJ;A+FhmLE;EACE;A/FkmLJ;A+F/lLE;EACE;EACA;EACA;A/FimLJ;A+F9lLE;EACE;EACA;A/FgmLJ;;A+F5lLA;AACA;EACE;EACA;A/F+lLF;;A+F5lLA;AAEE;EAAA;AAAA;;AAIA;EACE;UAAA;EACA;A/F8lLJ;;AgGpoLA;EACE;AhGuoLF;AgGnoLI;EACE;AhGqoLN;AgGloLI;EACE;EACA;EACA;EACA;EACA;EACA;EACA;AhGooLN;AgGhoLE;EACE;EACA;AhGkoLJ;AgG9nLI;EACE;AhGgoLN;;AiG3pLA;EACE;IACE;IACA;EjG8pLF;EiG3pLA;IACE;EjG6pLF;EiG1pLA;IACE;EjG4pLF;EiGzpLA;IACE;EjG2pLF;EiGxpLA;IACE;EjG0pLF;EiGvpLA;IACE;IACA;IAAA;EjGypLF;EiGtpLA;IACE;EjGwpLF;EiGrpLA;IACE;EjGupLF;AACF;AkGrrLA;;;;;;;;;;CAAA;AAYA;EjBiEI;EAcF;AjFymLF;;AkGprLA;EjB6DI;EAcF;AjF8mLF;;AkGrrLA;EjByDI;EAcF;AjFmnLF;;AkGtrLA;EjBqDI;EAcF;AjFwnLF;;AkGvrLA;EjBiDI;EAcF;AjF6nLF;;AkGxrLA;EjB6CI;EAcF;AjFkoLF;;AkGzrLA;EjByCI;EAcF;AjFuoLF;;AkG1rLA;EjBqCI;EAcF;AjF4oLF;;AkG3rLA;EjBiCI;EAcF;AjFipLF;;AkG5rLA;EjB6BI;EAcF;AjFspLF;;AkG7rLA;EjByBI;EAcF;AjF2pLF;;AkG9rLA;EACE;AlGisLF;;AkG9rLA;EACE;AlGisLF;;AkG9rLA;EACE;AlGisLF;;AkG9rLA;EACE;AlGisLF;;AkG9rLA;EACE;AlGisLF;;AkG9rLA;EACE;AlGisLF;;AmG9wLM;EAAA;AAAA;AAKF;EAAA;EAAA;AAAA;AAIA;EAAA;AAAA;AAGE;EAAA;AAAA;AAIA;EAAA;AAAA;AAKF;EAAA;AAAA;AAKE;EAAA;EAAA;EAAA;AAAA;;AC5BJ;EACE;ApGyyLJ;;AqG3yLA;EASE;ArGsyLF;AqG7yLI;EAAA;AAAA;AAIA;EAAA;AAAA;AAIF;EACE;EACA;ArG6yLJ;;AsGzzLA;EACE;AtG4zLF;;AuG3zLI;EAAA;EAAA;EAAA;EAAA;AAAA;AAIA;EAAA;AAAA;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;AAAA;AAGE;EAAA;EAAA;AAAA;AAKF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACA;EACA;EACA;AAHA;AAQF;EAAA;AAAA;;AAIJ;EACE;AvGwzLF;;AwG11LA;;;EAGE;AxG61LF;;AwG11LA;;EAEE;EACA;AxG61LF;;AwGz1LE;EAAA;EAAA;EAAA;AAAA;;AAGF;EACE;AxG61LF;;AyG52LI;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;AAAA;AAGE;EAAA;EAAA;AAAA;AAKF;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACA;EACA;EACA;AAHA;AAOA;EAAA;AAAA;AAKF;EAAA;AAAA;;AC5BF;EACE;A1Gy4LJ;;A0Gn4LI;EACE;A1Gs4LN;;A2G/4LA;EACE;EACA;A3Gk5LF;;A2G/4LA;EACE;A3Gk5LF;;A4Gx5LA;EAEE;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EAEA;EAEA;A5Gq5LF;A4Gn5LE;EACE;A5Gq5LJ;A4Gl5LM;EACE;EACA;EAAA;EAAA;EAAA;EAAA;A5Go5LR;A4Gj5LU;EAAA;EAAA;EAAA;AAAA;AAKF;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;AAAA;AAKF;EAAA;AAAA;AAMJ;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAKF;EAAA;EAAA;EAAA;AAAA;AAGF;EACE;EACA;A5Gw4LJ;A4Gr4LM;EACE;A5Gu4LR;A4Gl4LE;EACE;EACA;EACA;EACA;EACA;A5Go4LJ;;A6G59LA;EACE;EACA;EACA;A7G+9LF;A6G79LE;EACE;A7G+9LJ;A6G59LE;EACE;EACA;EACA;EACA;A7G89LJ;A6G39LE;EACE;A7G69LJ;A6Gx9LE;EAEI;IAAA;EAAA;A7G29LN;A6Gt9LI;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AC7BJ;EAEE;A9Gw/LF;A8Gt/LE;EACE;EACA;EACA;A9Gw/LJ;;A+G//LA;EAEE;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;A/G+/LF;A+G5/LI;EAAA;EAAA;EAAA;EAAA;AAAA;AAGF;EACE;A/G8/LJ;A+G3/LE;EACE;EACA;EACA;EACA;A/G6/LJ;A+G1/LE;EACE;EACA;EACA;EACA;EACA;A/G4/LJ;A+Gz/LE;EACE;EACA;EACA;EACA;EACA;A/G2/LJ;;AgH5hMA;;;;;;;;;;CAAA;AAYA;;EAAA;ArCoDE;EACE,gBA7BO;A3E0gMX;A2Et+LE;EACE;A3Ew+LJ;A2El+LE;EAEE;;qEAAA;EAGA;A3Em+LJ;A2EniME;EACE;EACA;A3EqiMJ;A2EvjME;EACE;EACA;A3EyjMJ;A2EtjME;EAEE;EACA;A3EujMJ;A2Eh+LI;EACI;A3Ek+LR;A0Cp/LI;EtCZA;EAAA;AJogMJ;AmFnvLE;E/EjRE;EAAA;AJwgMJ;AmF/sLM;E/EzTF;EAAA;EAAA;EAAA;EAAA;AJ+gMJ;A0C3/LM;EACE;A1C6/LR;A8BhgME;E1BlBE;AJqhMJ;AiHt9KE;EAEI;AjHu9KN;A+Bl/LE;E3BtCE;AJ2hMJ;A+E5jME;E3EiCE;E4EyXA;AhFsqLJ;AgF5rLE;E5EnWE;EAAA;EAAA;EAAA;AJqiMJ;AgFrvLE;E5EhTE;EAAA;EAAA;EAAA;EAAA;AJ4iMJ;A+ExkMI;EACE;A/E0kMN;AoCjkME;EhCkBE;EAAA;EAAA;AJojMJ;AoC1jMM;EACE;ApC4jMR;AoCljMM;EACE;ApCojMR;A2EhkME;EACE,gBA7BO;A3E+lMX;A2E3jME;EACE;A3E6jMJ;A2EvjME;EAEE;;qEAAA;EAGA;A3EwjMJ;A2ExnME;EACE;EACA;A3E0nMJ;A2E5oME;EACE;EACA;A3E8oMJ;A2E3oME;EAEE;EACA;A3E4oMJ;A2ErjMI;EACI;A3EujMR;AsC9kME;EACE,gBAhBO;AtCgmMX;AkFnmME;E1CgNE,Y0CtNO;AlF4mMX;A2Cj+LI;;;;EvC1HA;E8GgXA;EACA;AlHkvLJ;AkH/uLE;;;;EAGI;AlHkvLN;A4C1nMI;;;;EACE;A5C+nMN;A6CxoME;EyC8FE,WAnBK;EAoBL,YApBK;EAqBL;AtF6iMJ;AsF1iME;EAEI,gBA1BG;EA2BH,eA3BG;AtFskMT;AsF9hMI;EAEI,WALe;EAMf,YANe;ECnCjB,eAJwB;EAKxB,kBALwB;EAuCtB,iBAJ0B;EAK1B,gBAL0B;AvF6iMlC;AsFvhMI;EAEI,gBApBe;EAqBf,eArBe;AtF6iMvB;AsFnhME;EC1HE;EACA;EACA,YDyDK;EErEL;EDkBE;EACA,WDkDG;ECjDH;AvF4oMN;A4C9pMI;EACE;A5CgqMN;AiDlqLE;E7C9eE;AJmpMJ;AiD/pLE;E7CpfE;AJspMJ;AiDlrLE;E7CpeE;AJypMJ;A2DvpMI;EACE,YALe;A3D8pMrB;A2DvpMM;EACE,YAVY;A3DmqMpB;A+DvlMI;EACE,YANK;A/D+lMX;A+DtlMI;;EAEE;A/DwlMN;A+DnlMI;EACE;EACA;A/DqlMN;A+DhlMM;EACE;A/DklMR;A+D7kMI;EACE;A/D+kMN;AiErvME;EACE,gBA6Ee;AjE0qMnB;AiErvME;EACE,YA0Ee;AjE6qMnB;AiEjqMI;EA1FF;IACE,gBA+Ec;EjE+qMhB;EiE5vMA;IACE,YA4Ec;EjEkrMhB;AACF;AkEluMI;EACE,gBALK;AlEyuMX;AwD/pMI;EACE,iBALc;AxDsqMpB,C;;;;AmHlxMA;;CAAA;;;CAAA;;AAAA;;;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;EAAA;AAAA;;AAAA;;;;;;CAAA;;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;EAAA;EAAA;AAAA;;AAAA;;;;CAAA;;AAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;UAAA;AAAA;;AAAA;;CAAA;;AAAA;;;;;;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;;;;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;;AAAA;;;;CAAA;;AAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;;;CAAA;;AAAA;;;;;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;;;;EAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;;;;;;;;;;;;EAAA;AAAA;;AAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;AAAA;;AAAA;;;EAAA;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;EAAA;AAAA;;AAAA;;;CAAA;;AAAA;;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;AAAA;;AAAA;;CAAA;AAAA;EAAA;AAAA;;AAAA;;;;CAAA;;AAAA;;;;;;;;EAAA;EAAA;AAAA;;AAAA;;CAAA;;AAAA;;EAAA;EAAA;AAAA;;AAAA;AAAA;EAAA;AAAA;;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;ACAA;EACE;EACA;EACA;EACA;EACA;EACA;EAAA;EAAA;EAAA;ACEF;;ADCA;EACE;EACA;EACA;EAAA;EAAA;ACEF;;ADCA;EACE;ACEF;;ADCA;EACE;EACA;ACEF;;ADCA;EACE;ACEF;;ADCA;EACE;EACA;EACA;EACA;EACA;EACA;ACEF;;ADCA;EACE;EACA;EACA;EACA;EACA;EACA;ACEF;ADAE;EACE;ACEJ;AChmDF;AEjDE;EAJF;IAKI;IACA;IACA;IACA;EFoDF;AACF;;AEhDE;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;;AAIA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;AAAA;AAGE;EAAA;EAAA;EAAA;EAAA;AAAA;AAIA;EAAA;EAAA;AAAA;;AAIJ;EACE;EAEA;EACA;AFiDF;;AE5CA;EACE,sDCbe;AH4DjB;;AE5CA;EACE;AF+CF;;AF/FA;EAAA;CMAA;;ANAA;EAAA,uBMAA;ENAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA,qBMAA;ENAA;CMAA;;ANAA;EAAA,gFMAA;ENAA,oGMAA;ENAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;EAAA;CMAA;;ANAA;;EAAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;CAAA;;ANAA;;EAAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;;ENAA;IAAA;GMAA;CAAA;;ANAA;;EAAA;IAAA;GMAA","sources":["./node_modules/simplebar/dist/simplebar.css","./node_modules/highlight.js/styles/androidstudio.css","./src/@vex/styles/partials/fonts/_inter.scss","../../payment%20requests%20channel/demo/src/styles.scss","./src/@vex/styles/partials/styles/_style-dark.scss","./node_modules/@angular/material/core/ripple/_ripple-theme.scss","./node_modules/@angular/material/core/option/_option-theme.scss","./node_modules/@material/theme/_css.scss","./node_modules/@material/list/_list.scss","./node_modules/@angular/material/core/option/_optgroup-theme.scss","./node_modules/@angular/material/core/selection/pseudo-checkbox/_pseudo-checkbox-theme.scss","./node_modules/@angular/material/core/_core-theme.scss","./node_modules/@angular/material/card/_card-theme.scss","./node_modules/@angular/material/progress-bar/_progress-bar-theme.scss","./node_modules/@material/linear-progress/_linear-progress-theme.scss","./node_modules/@angular/material/tooltip/_tooltip-theme.scss","./node_modules/@material/textfield/_mixins.scss","./node_modules/@material/textfield/helper-text/_mixins.scss","./node_modules/@material/textfield/character-counter/_mixins.scss","./node_modules/@material/textfield/icon/_mixins.scss","./node_modules/@material/ripple/_ripple-theme.scss","./node_modules/@material/line-ripple/_mixins.scss","./node_modules/@material/notched-outline/_mixins.scss","./node_modules/@material/rtl/_rtl.scss","./node_modules/@angular/material/form-field/_form-field-subscript.scss","./node_modules/@angular/material/form-field/_form-field-focus-overlay.scss","./node_modules/@angular/material/form-field/_mdc-text-field-theme-variable-refresh.scss","./node_modules/@angular/material/form-field/_form-field-native-select.scss","./src/@vex/styles/_var.scss","./node_modules/@angular/material/form-field/_form-field-theme.scss","./node_modules/@material/menu-surface/_mixins.scss","./node_modules/@angular/material/select/_select-theme.scss","./node_modules/@angular/material/dialog/_dialog-theme.scss","./node_modules/@angular/material/chips/_chips-theme.scss","./node_modules/@angular/material/slide-toggle/_slide-toggle-theme.scss","./node_modules/@material/form-field/_mixins.scss","./node_modules/@angular/material/radio/_radio-private.scss","./node_modules/@angular/material/slider/_slider-theme.scss","./node_modules/@angular/material/menu/_menu-theme.scss","./node_modules/@angular/material/list/_list-theme.scss","./node_modules/@angular/material/list/_list-option-theme.scss","./node_modules/@angular/material/paginator/_paginator-theme.scss","./node_modules/@angular/material/tabs/_tabs-theme.scss","./node_modules/@material/tab/_mixins.scss","./node_modules/@material/tab-indicator/_tab-indicator-theme.scss","./node_modules/@angular/material/checkbox/_checkbox-theme.scss","./node_modules/@angular/material/button/_button-theme.scss","./node_modules/@angular/material/button/_button-theme-private.scss","./node_modules/@angular/material/button/_icon-button-theme.scss","./node_modules/@angular/material/button/_fab-theme.scss","./node_modules/@angular/material/snack-bar/_snack-bar-theme.scss","./node_modules/@material/data-table/_data-table.scss","./node_modules/@material/data-table/_data-table-theme.scss","./node_modules/@angular/material/table/_table-theme.scss","./node_modules/@angular/material/progress-spinner/_progress-spinner-theme.scss","./node_modules/@angular/material/badge/_badge-theme.scss","./node_modules/@angular/cdk/a11y/_index.scss","./node_modules/@angular/material/bottom-sheet/_bottom-sheet-theme.scss","./node_modules/@angular/material/core/style/_elevation.scss","./node_modules/@angular/material/button-toggle/_button-toggle-theme.scss","./node_modules/@angular/material/datepicker/_datepicker-theme.scss","./node_modules/@angular/material/divider/_divider-theme.scss","./node_modules/@angular/material/expansion/_expansion-theme.scss","./node_modules/@angular/material/expansion/_expansion-mixins.scss","./node_modules/@angular/material/icon/_icon-theme.scss","./node_modules/@angular/material/sidenav/_sidenav-theme.scss","./node_modules/@angular/material/stepper/_stepper-theme.scss","./node_modules/@angular/material/sort/_sort-theme.scss","./node_modules/@angular/material/toolbar/_toolbar-theme.scss","./node_modules/@angular/material/tree/_tree-theme.scss","./src/@vex/styles/partials/styles/_style-light.scss","./src/@vex/styles/partials/styles/_style-default.scss","./node_modules/@angular/material/core/ripple/_ripple.scss","./node_modules/@angular/cdk/overlay/_index.scss","./node_modules/@angular/cdk/text-field/_index.scss","./node_modules/@angular/material/core/focus-indicators/_private.scss","./node_modules/@angular/material/core/style/_layout-common.scss","./node_modules/@material/typography/_typography.scss","./node_modules/@angular/material/form-field/_form-field-density.scss","./node_modules/@material/textfield/_variables.scss","./node_modules/@material/floating-label/_mixins.scss","./node_modules/@angular/material/autocomplete/_autocomplete-theme.scss","./node_modules/@angular/material/radio/_radio-theme.scss","./node_modules/@material/radio/_radio-theme.scss","./node_modules/@angular/material/core/typography/_typography-utils.scss","./node_modules/@material/tab-bar/_mixins.scss","./node_modules/@material/checkbox/_checkbox-theme.scss","./node_modules/@material/checkbox/_checkbox.scss","./node_modules/@material/button/_button-base.scss","./node_modules/@material/icon-button/_icon-button-theme.scss","./node_modules/@material/touch-target/_touch-target.scss","./node_modules/@material/theme/_gss.scss","./node_modules/@material/fab/_fab.scss","./node_modules/@material/data-table/_data-table-cell.scss","./node_modules/@material/data-table/_data-table-header-cell.scss","./node_modules/@angular/material/grid-list/_grid-list-theme.scss","./node_modules/@angular/material/core/style/_list-common.scss","./src/@vex/styles/partials/_horizontal.scss","./src/@vex/styles/partials/_misc.scss","./src/@vex/styles/partials/_vertical.scss","./src/@vex/styles/partials/_print.scss","./src/@vex/styles/partials/_typography.scss","./src/@vex/styles/partials/plugins/@angular/material/_button.scss","./src/@vex/styles/partials/plugins/@angular/material/_checkbox.scss","./src/@vex/styles/partials/plugins/@angular/material/_dialog.scss","./src/@vex/styles/partials/plugins/@angular/material/_input.scss","./src/@vex/styles/partials/plugins/@angular/material/_menu.scss","./src/@vex/styles/partials/plugins/@angular/material/_misc.scss","./src/@vex/styles/partials/plugins/@angular/material/_select.scss","./src/@vex/styles/partials/plugins/@angular/material/_progress-bar.scss","./src/@vex/styles/partials/plugins/apexcharts/_apexcharts.scss","./src/@vex/styles/partials/layouts/_layout-ares.scss","./src/@vex/styles/partials/layouts/_layout-hermes.scss","./src/@vex/styles/partials/layouts/_layout-ikaros.scss","./src/@vex/styles/partials/layouts/_layout-poseidon.scss","./src/styles.scss","./node_modules/@material/chips/_chip-theme.scss","./node_modules/@material/button/_button-shared-theme.scss","./node_modules/tailwindcss/base.css","./src/@vex/styles/_base.scss","../../payment%20requests%20channel/demo/src/@vex/styles/tailwind.scss","./node_modules/tailwindcss/utilities.css","./src/@vex/styles/_utilities.scss","./node_modules/@angular/material/core/style/_variables.scss","<no source>"],"sourcesContent":["[data-simplebar] {\n  position: relative;\n  flex-direction: column;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-content: flex-start;\n  align-items: flex-start;\n}\n\n.simplebar-wrapper {\n  overflow: hidden;\n  width: inherit;\n  height: inherit;\n  max-width: inherit;\n  max-height: inherit;\n}\n\n.simplebar-mask {\n  direction: inherit;\n  position: absolute;\n  overflow: hidden;\n  padding: 0;\n  margin: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  width: auto !important;\n  height: auto !important;\n  z-index: 0;\n}\n\n.simplebar-offset {\n  direction: inherit !important;\n  box-sizing: inherit !important;\n  resize: none !important;\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  padding: 0;\n  margin: 0;\n  -webkit-overflow-scrolling: touch;\n}\n\n.simplebar-content-wrapper {\n  direction: inherit;\n  box-sizing: border-box !important;\n  position: relative;\n  display: block;\n  height: 100%; /* Required for horizontal native scrollbar to not appear if parent is taller than natural height */\n  width: auto;\n  max-width: 100%; /* Not required for horizontal scroll to trigger */\n  max-height: 100%; /* Needed for vertical scroll to trigger */\n  overflow: auto;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n\n.simplebar-content-wrapper::-webkit-scrollbar,\n.simplebar-hide-scrollbar::-webkit-scrollbar {\n  display: none;\n  width: 0;\n  height: 0;\n}\n\n.simplebar-content:before,\n.simplebar-content:after {\n  content: ' ';\n  display: table;\n}\n\n.simplebar-placeholder {\n  max-height: 100%;\n  max-width: 100%;\n  width: 100%;\n  pointer-events: none;\n}\n\n.simplebar-height-auto-observer-wrapper {\n  box-sizing: inherit !important;\n  height: 100%;\n  width: 100%;\n  max-width: 1px;\n  position: relative;\n  float: left;\n  max-height: 1px;\n  overflow: hidden;\n  z-index: -1;\n  padding: 0;\n  margin: 0;\n  pointer-events: none;\n  flex-grow: inherit;\n  flex-shrink: 0;\n  flex-basis: 0;\n}\n\n.simplebar-height-auto-observer {\n  box-sizing: inherit;\n  display: block;\n  opacity: 0;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 1000%;\n  width: 1000%;\n  min-height: 1px;\n  min-width: 1px;\n  overflow: hidden;\n  pointer-events: none;\n  z-index: -1;\n}\n\n.simplebar-track {\n  z-index: 1;\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  overflow: hidden;\n}\n\n[data-simplebar].simplebar-dragging {\n  pointer-events: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n[data-simplebar].simplebar-dragging .simplebar-content {\n  pointer-events: none;\n  -webkit-touch-callout: none;\n  -webkit-user-select: none;\n  -khtml-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n}\n\n[data-simplebar].simplebar-dragging .simplebar-track {\n  pointer-events: all;\n}\n\n.simplebar-scrollbar {\n  position: absolute;\n  left: 0;\n  right: 0;\n  min-height: 10px;\n}\n\n.simplebar-scrollbar:before {\n  position: absolute;\n  content: '';\n  background: black;\n  border-radius: 7px;\n  left: 2px;\n  right: 2px;\n  opacity: 0;\n  transition: opacity 0.2s 0.5s linear;\n}\n\n.simplebar-scrollbar.simplebar-visible:before {\n  opacity: 0.5;\n  transition-delay: 0s;\n  transition-duration: 0s;\n}\n\n.simplebar-track.simplebar-vertical {\n  top: 0;\n  width: 11px;\n}\n\n.simplebar-scrollbar:before {\n  top: 2px;\n  bottom: 2px;\n  left: 2px;\n  right: 2px;\n}\n\n.simplebar-track.simplebar-horizontal {\n  left: 0;\n  height: 11px;\n}\n\n.simplebar-track.simplebar-horizontal .simplebar-scrollbar {\n  right: auto;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  min-height: 0;\n  min-width: 10px;\n  width: auto;\n}\n\n/* Rtl support */\n[data-simplebar-direction='rtl'] .simplebar-track.simplebar-vertical {\n  right: auto;\n  left: 0;\n}\n\n.simplebar-dummy-scrollbar-size {\n  direction: rtl;\n  position: fixed;\n  opacity: 0;\n  visibility: hidden;\n  height: 500px;\n  width: 500px;\n  overflow-y: hidden;\n  overflow-x: scroll;\n  -ms-overflow-style: scrollbar !important;\n}\n\n.simplebar-dummy-scrollbar-size > div {\n  width: 200%;\n  height: 200%;\n  margin: 10px 0;\n}\n\n.simplebar-hide-scrollbar {\n  position: fixed;\n  left: 0;\n  visibility: hidden;\n  overflow-y: scroll;\n  scrollbar-width: none;\n  -ms-overflow-style: none;\n}\n","pre code.hljs{display:block;overflow-x:auto;padding:1em}code.hljs{padding:3px 5px}.hljs{color:#a9b7c6;background:#282b2e}.hljs-bullet,.hljs-literal,.hljs-number,.hljs-symbol{color:#6897bb}.hljs-deletion,.hljs-keyword,.hljs-selector-tag{color:#cc7832}.hljs-link,.hljs-template-variable,.hljs-variable{color:#629755}.hljs-comment,.hljs-quote{color:grey}.hljs-meta{color:#bbb529}.hljs-addition,.hljs-attribute,.hljs-string{color:#6a8759}.hljs-section,.hljs-title,.hljs-type{color:#ffc66d}.hljs-name,.hljs-selector-class,.hljs-selector-id{color:#e8bf6a}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}","@font-face {\n  font-family: 'Inter var';\n  font-style: normal;\n  font-weight: 100 900;\n  font-display: swap;\n  src: url('/assets/fonts/Inter-roman-var.woff2?v=3.19') format('woff2');\n  font-named-instance: 'Regular';\n}\n\n@font-face {\n  font-family: 'Inter var';\n  font-style: italic;\n  font-weight: 100 900;\n  font-display: swap;\n  src: url('/assets/fonts/Inter-italic-var.woff2?v=3.19') format('woff2');\n  font-named-instance: 'Italic';\n}\n","@import \"~simplebar/dist/simplebar.css\";\n@import \"~highlight.js/styles/androidstudio.css\";\n@font-face {\n  font-family: \"Inter var\";\n  font-style: normal;\n  font-weight: 100 900;\n  font-display: swap;\n  src: url(\"/assets/fonts/Inter-roman-var.woff2?v=3.19\") format(\"woff2\");\n  font-named-instance: \"Regular\";\n}\n@font-face {\n  font-family: \"Inter var\";\n  font-style: italic;\n  font-weight: 100 900;\n  font-display: swap;\n  src: url(\"/assets/fonts/Inter-italic-var.woff2?v=3.19\") format(\"woff2\");\n  font-named-instance: \"Italic\";\n}\n.vex-style-dark {\n  --background-app-bar: #11151e;\n  --footer-background: var(--background-foreground);\n  --navigation-background: #1a202e;\n  --toolbar-background: #1a202e;\n  --background-base: #232b3e;\n  --background-foreground: #1a202e;\n  --background-foreground-rgb: 26, 32, 46;\n  --footer-color: var(--text-color);\n  --navigation-color: var(--text-color);\n  --text-color: white;\n  --toolbar-color: white;\n  --text-color-light: rgba(0, 0, 0, 0.87);\n  --foreground-divider: rgba(255, 255, 255, 0.12);\n  --text-hint: rgba(255, 255, 255, 0.5);\n  --text-hint-light: rgba(0, 0, 0, 0.38);\n  --background-hover: rgba(255, 255, 255, 0.04);\n  --text-secondary: rgba(255, 255, 255, 0.7);\n  --text-secondary-light: rgba(0, 0, 0, 0.54);\n  --secondary-toolbar-background: var(--background-foreground);\n}\n.vex-style-dark .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-option {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-mdc-option:hover:not(.mdc-list-item--disabled), .vex-style-dark .mat-mdc-option:focus:not(.mdc-list-item--disabled), .vex-style-dark .mat-mdc-option.mat-mdc-option-active, .vex-style-dark .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(255, 255, 255, 0.08);\n}\n.vex-style-dark .mat-primary .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mat-accent .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.vex-style-dark .mat-warn .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-optgroup-label {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-pseudo-checkbox-full {\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled {\n  color: #686868;\n}\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.vex-style-dark .mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #232b3e;\n}\n.vex-style-dark .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.vex-style-dark .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.vex-style-dark .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.vex-style-dark .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #232b3e;\n}\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.vex-style-dark .mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #232b3e;\n}\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.vex-style-dark .mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #232b3e;\n}\n.vex-style-dark .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.vex-style-dark .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #686868;\n}\n.vex-style-dark .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.vex-style-dark .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #686868;\n}\n.vex-style-dark .mat-app-background, .vex-style-dark.mat-app-background {\n  background-color: #232b3e;\n  color: white;\n}\n.vex-style-dark .mat-elevation-z0, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z1, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z2, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z3, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z4, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z5, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z6, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z7, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z8, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z9, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z10, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z11, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z12, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z13, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z14, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z15, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z16, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z17, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z18, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z19, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z20, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z21, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z22, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z23, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-elevation-z24, .vex-style-dark .mat-mdc-elevation-specific.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.vex-style-dark .mat-mdc-card {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #1a202e;\n}\n.vex-style-dark .mat-mdc-card-outlined {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #353b47;\n}\n.vex-style-dark .mat-mdc-card-subtitle {\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-mdc-progress-bar {\n  --mdc-linear-progress-active-indicator-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-progress-bar .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-primary-rgb)'/%3E%3C/svg%3E\");\n}\n.vex-style-dark .mat-mdc-progress-bar .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-accent {\n  --mdc-linear-progress-active-indicator-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-accent-rgb)'/%3E%3C/svg%3E\");\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-warn {\n  --mdc-linear-progress-active-indicator-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-warn-rgb)'/%3E%3C/svg%3E\");\n}\n.vex-style-dark .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-tooltip {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(255, 255, 255, 0.6);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input {\n  color: rgba(255, 255, 255, 0.87);\n}\n@media all {\n  .vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n@media all {\n  .vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n}\n.vex-style-dark .mdc-text-field .mdc-text-field__input {\n  caret-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n  color: rgba(0, 0, 0, 0.6);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field-character-counter,\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n  color: rgba(0, 0, 0, 0.6);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading {\n  color: rgba(0, 0, 0, 0.54);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: rgba(0, 0, 0, 0.54);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--prefix {\n  color: rgba(0, 0, 0, 0.6);\n}\n.vex-style-dark .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--suffix {\n  color: rgba(0, 0, 0, 0.6);\n}\n.vex-style-dark .mdc-text-field--filled .mdc-text-field__ripple::before,\n.vex-style-dark .mdc-text-field--filled .mdc-text-field__ripple::after {\n  background-color: var(--mdc-ripple-color, rgba(255, 255, 255, 0.87));\n}\n.vex-style-dark .mdc-text-field--filled:hover .mdc-text-field__ripple::before, .vex-style-dark .mdc-text-field--filled.mdc-ripple-surface--hover .mdc-text-field__ripple::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.08);\n}\n.vex-style-dark .mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before, .vex-style-dark .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.24);\n}\n.vex-style-dark .mdc-text-field--filled:not(.mdc-text-field--disabled) {\n  background-color: #232936;\n}\n.vex-style-dark .mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: rgba(255, 255, 255, 0.42);\n}\n.vex-style-dark .mdc-text-field--filled:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mdc-text-field--filled .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: rgba(255, 255, 255, 0.38);\n}\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n[dir=rtl] .vex-style-dark .mdc-text-field--outlined.mdc-text-field--with-leading-icon, .vex-style-dark .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n[dir=rtl] .vex-style-dark .mdc-text-field--outlined.mdc-text-field--with-trailing-icon, .vex-style-dark .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.vex-style-dark .mdc-text-field--outlined .mdc-text-field__ripple::before,\n.vex-style-dark .mdc-text-field--outlined .mdc-text-field__ripple::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl] .vex-style-dark .mdc-text-field--with-leading-icon.mdc-text-field--outlined, .vex-style-dark .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n.vex-style-dark .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field__input {\n  color: rgba(255, 255, 255, 0.38);\n}\n@media all {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n@media all {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(255, 255, 255, 0.38);\n  }\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-floating-label {\n  color: rgba(255, 255, 255, 0.38);\n}\n.vex-style-dark .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n  color: rgba(0, 0, 0, 0.38);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field-character-counter,\n.vex-style-dark .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n  color: rgba(0, 0, 0, 0.38);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field__icon--leading {\n  color: rgba(0, 0, 0, 0.3);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field__icon--trailing {\n  color: rgba(0, 0, 0, 0.3);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field__affix--prefix {\n  color: rgba(0, 0, 0, 0.38);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-text-field__affix--suffix {\n  color: rgba(0, 0, 0, 0.38);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-line-ripple::before {\n  border-bottom-color: rgba(255, 255, 255, 0.06);\n}\n.vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__leading,\n.vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__notch,\n.vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__trailing {\n  border-color: rgba(255, 255, 255, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-floating-label {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field-character-counter,\n  .vex-style-dark .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__icon--leading {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__icon--trailing {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__affix--prefix {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-text-field__affix--suffix {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-line-ripple::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__leading,\n  .vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__notch,\n  .vex-style-dark .mdc-text-field--disabled .mdc-notched-outline__trailing {\n    border-color: GrayText;\n  }\n}\n.vex-style-dark .mdc-text-field--disabled.mdc-text-field--filled {\n  background-color: #1f2432;\n}\n[dir=rtl] .vex-style-dark .mdc-text-field--end-aligned .mdc-text-field__input, .vex-style-dark .mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n[dir=rtl] .vex-style-dark .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker), .vex-style-dark .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n.vex-style-dark .mat-mdc-form-field-error {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field-focus-overlay {\n  background-color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n  opacity: 0.08;\n}\n.vex-style-dark .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n  opacity: 0.24;\n}\n.vex-style-dark select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option {\n  color: rgba(0, 0, 0, 0.87);\n}\n.vex-style-dark select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled {\n  color: rgba(0, 0, 0, 0.38);\n}\n.vex-style-dark .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-primary-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after {\n  color: rgba(255, 255, 255, 0.38);\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field__input {\n  caret-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.vex-style-dark .mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n  border-left: 1px solid transparent;\n}\n.vex-style-dark [dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n.vex-style-dark .mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #1a202e);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n.vex-style-dark .mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__content,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--selected .mdc-list-item__primary-text,\n.vex-style-dark .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-divider::after {\n  border-bottom-color: white;\n}\n.vex-style-dark .mdc-list-divider {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n.vex-style-dark .mat-mdc-select-value {\n  color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mat-mdc-select-placeholder {\n  color: rgba(255, 255, 255, 0.6);\n}\n.vex-style-dark .mat-mdc-select-disabled .mat-mdc-select-value {\n  color: rgba(255, 255, 255, 0.38);\n}\n.vex-style-dark .mat-mdc-select-arrow {\n  color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-form-field.mat-focused.mat-primary .mat-mdc-select-arrow {\n  color: rgba(var(--color-primary-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field.mat-focused.mat-accent .mat-mdc-select-arrow {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field.mat-focused.mat-warn .mat-mdc-select-arrow {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.vex-style-dark .mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow {\n  color: rgba(255, 255, 255, 0.38);\n}\n.vex-style-dark .mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #1a202e);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n.vex-style-dark .mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__content,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--selected .mdc-list-item__primary-text,\n.vex-style-dark .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-divider::after {\n  border-bottom-color: white;\n}\n.vex-style-dark .mdc-list-divider {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n.vex-style-dark .mat-mdc-dialog-container {\n  --mdc-dialog-container-color: #1a202e;\n  --mdc-dialog-with-divider-divider-color: rgba(255, 255, 255, 0.12);\n  --mdc-dialog-subhead-color: rgba(255, 255, 255, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(255, 255, 255, 0.6);\n}\n.vex-style-dark .mat-mdc-standard-chip {\n  --mdc-chip-elevated-container-color: #353b47;\n  --mdc-chip-elevated-disabled-container-color: #353b47;\n  --mdc-chip-label-text-color: #fafafa;\n  --mdc-chip-disabled-label-text-color: #fafafa;\n  --mdc-chip-with-icon-icon-color: #fafafa;\n  --mdc-chip-with-icon-disabled-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #fafafa;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #fafafa;\n  --mdc-chip-with-icon-selected-icon-color: #fafafa;\n}\n.vex-style-dark .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected, .vex-style-dark .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-primary-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-primary-rgb);\n  --mdc-chip-label-text-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected, .vex-style-dark .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-accent-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-accent-rgb);\n  --mdc-chip-label-text-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected, .vex-style-dark .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-warn-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-warn-rgb);\n  --mdc-chip-label-text-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-mdc-chip-focus-overlay {\n  background: white;\n}\n.vex-style-dark .mat-mdc-slide-toggle {\n  --mdc-switch-disabled-selected-handle-color: #000;\n  --mdc-switch-disabled-unselected-handle-color: #000;\n  --mdc-switch-disabled-selected-track-color: #f5f5f5;\n  --mdc-switch-disabled-unselected-track-color: #f5f5f5;\n  --mdc-switch-unselected-focus-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-pressed-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-hover-state-layer-color: #f5f5f5;\n  --mdc-switch-unselected-focus-track-color: #616161;\n  --mdc-switch-unselected-hover-track-color: #616161;\n  --mdc-switch-unselected-pressed-track-color: #616161;\n  --mdc-switch-unselected-track-color: #616161;\n  --mdc-switch-unselected-focus-handle-color: #fafafa;\n  --mdc-switch-unselected-hover-handle-color: #fafafa;\n  --mdc-switch-unselected-pressed-handle-color: #fafafa;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #9e9e9e;\n  --mdc-switch-selected-icon-color: #212121;\n  --mdc-switch-disabled-selected-icon-color: #212121;\n  --mdc-switch-disabled-unselected-icon-color: #212121;\n  --mdc-switch-unselected-icon-color: #212121;\n}\n.vex-style-dark .mat-mdc-slide-toggle .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-mdc-slide-toggle .mdc-switch--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-radio-button .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-primary {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-primary .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-accent {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-accent .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-warn {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-radio-button.mat-warn .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-slider {\n  --mdc-slider-label-container-color: white;\n  --mdc-slider-label-label-text-color: black;\n  --mdc-slider-disabled-handle-color: #fff;\n  --mdc-slider-disabled-active-track-color: #fff;\n  --mdc-slider-disabled-inactive-track-color: #fff;\n  --mdc-slider-with-tick-marks-disabled-container-color: #fff;\n  --mat-mdc-slider-value-indicator-opacity: 0.9;\n}\n.vex-style-dark .mat-mdc-slider.mat-primary {\n  --mdc-slider-handle-color: var(--color-primary-rgb);\n  --mdc-slider-focus-handle-color: var(--color-primary-rgb);\n  --mdc-slider-hover-handle-color: var(--color-primary-rgb);\n  --mdc-slider-active-track-color: var(--color-primary-rgb);\n  --mdc-slider-inactive-track-color: var(--color-primary-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-primary-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-primary-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-primary-rgb), 0.2);\n}\n.vex-style-dark .mat-mdc-slider.mat-accent {\n  --mdc-slider-handle-color: var(--color-accent-rgb);\n  --mdc-slider-focus-handle-color: var(--color-accent-rgb);\n  --mdc-slider-hover-handle-color: var(--color-accent-rgb);\n  --mdc-slider-active-track-color: var(--color-accent-rgb);\n  --mdc-slider-inactive-track-color: var(--color-accent-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-accent-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-accent-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-accent-rgb), 0.2);\n}\n.vex-style-dark .mat-mdc-slider.mat-warn {\n  --mdc-slider-handle-color: var(--color-warn-rgb);\n  --mdc-slider-focus-handle-color: var(--color-warn-rgb);\n  --mdc-slider-hover-handle-color: var(--color-warn-rgb);\n  --mdc-slider-active-track-color: var(--color-warn-rgb);\n  --mdc-slider-inactive-track-color: var(--color-warn-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #fff;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-warn-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-warn-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-warn-rgb), 0.2);\n}\n.vex-style-dark .mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #1a202e);\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(255, 255, 255, 0.7));\n}\n.vex-style-dark .mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n.vex-style-dark .mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__content,\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mdc-list-item--selected .mdc-list-item__primary-text,\n.vex-style-dark .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mdc-list-divider::after {\n  border-bottom-color: white;\n}\n.vex-style-dark .mdc-list-divider {\n  background-color: rgba(255, 255, 255, 0.2);\n}\n.vex-style-dark .mat-mdc-menu-item[disabled],\n.vex-style-dark .mat-mdc-menu-item[disabled] .mat-mdc-menu-submenu-icon,\n.vex-style-dark .mat-mdc-menu-item[disabled] .mat-icon-no-color {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(255, 255, 255, 0.5));\n}\n.vex-style-dark .mat-mdc-menu-item .mat-icon-no-color,\n.vex-style-dark .mat-mdc-menu-submenu-icon {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-mdc-menu-item:hover:not([disabled]),\n.vex-style-dark .mat-mdc-menu-item.cdk-program-focused:not([disabled]),\n.vex-style-dark .mat-mdc-menu-item.cdk-keyboard-focused:not([disabled]),\n.vex-style-dark .mat-mdc-menu-item-highlighted:not([disabled]) {\n  background: rgba(255, 255, 255, 0.08);\n}\n.vex-style-dark .mat-mdc-list-base {\n  --mdc-list-list-item-label-text-color: white;\n  --mdc-list-list-item-supporting-text-color: rgba(255, 255, 255, 0.7);\n  --mdc-list-list-item-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-disabled-label-text-color: white;\n  --mdc-list-list-item-disabled-leading-icon-color: white;\n  --mdc-list-list-item-disabled-trailing-icon-color: white;\n  --mdc-list-list-item-hover-label-text-color: white;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-list-list-item-focus-label-text-color: white;\n  --mdc-list-list-item-hover-state-layer-color: white;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.08;\n  --mdc-list-list-item-focus-state-layer-color: white;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-list-option .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-list-option .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-list-option .mdc-list-item__start .mdc-radio--disabled + label, .vex-style-dark .mat-mdc-list-option .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__start .mdc-radio--disabled + label, .vex-style-dark .mat-mdc-list-option.mat-accent .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__start, .vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #fff;\n  --mdc-radio-disabled-unselected-icon-color: #fff;\n  --mdc-radio-unselected-focus-icon-color: #eeeeee;\n  --mdc-radio-unselected-hover-icon-color: #eeeeee;\n  --mdc-radio-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mat-mdc-radio-ripple-color: #fff;\n  --mat-mdc-radio-checked-ripple-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__start .mdc-radio--disabled + label, .vex-style-dark .mat-mdc-list-option.mat-warn .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,\n.vex-style-dark .mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.vex-style-dark .mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,\n.vex-style-dark .mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,\n.vex-style-dark .mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 1;\n}\n.vex-style-dark .mat-mdc-paginator {\n  background: #1a202e;\n  color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mat-mdc-paginator-icon {\n  fill: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-paginator-decrement,\n.vex-style-dark .mat-mdc-paginator-increment {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n  border-right: 2px solid rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-paginator-first,\n.vex-style-dark .mat-mdc-paginator-last {\n  border-top: 2px solid rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-icon-button[disabled] .mat-mdc-paginator-decrement,\n.vex-style-dark .mat-mdc-icon-button[disabled] .mat-mdc-paginator-increment,\n.vex-style-dark .mat-mdc-icon-button[disabled] .mat-mdc-paginator-first,\n.vex-style-dark .mat-mdc-icon-button[disabled] .mat-mdc-paginator-last {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon {\n  fill: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-mdc-tab, .vex-style-dark .mat-mdc-tab-link {\n  background-color: transparent;\n}\n.vex-style-dark .mat-mdc-tab .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-link .mdc-tab__text-label {\n  color: rgba(255, 255, 255, 0.6);\n}\n.vex-style-dark .mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element, .vex-style-dark .mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-primary-rgb));\n}\n.vex-style-dark .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-header-pagination .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-accent-rgb));\n}\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-group.mat-accent .mat-mdc-tab-link .mat-ripple-element, .vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-warn-rgb));\n}\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-group.mat-warn .mat-mdc-tab-link .mat-ripple-element, .vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mdc-tab__ripple::before,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,\n.vex-style-dark .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-tab-group.mat-background-primary, .vex-style-dark .mat-mdc-tab-nav-bar.mat-background-primary {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-primary-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.vex-style-dark .mat-mdc-tab-group.mat-background-accent, .vex-style-dark .mat-mdc-tab-nav-bar.mat-background-accent {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-accent-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.vex-style-dark .mat-mdc-tab-group.mat-background-warn, .vex-style-dark .mat-mdc-tab-nav-bar.mat-background-warn {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-warn-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #fff;\n}\n.vex-style-dark .mat-mdc-tab-header-pagination-chevron {\n  border-color: var(--mdc-theme-on-surface, #fff);\n}\n.vex-style-dark .mat-mdc-checkbox .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, white);\n}\n.vex-style-dark .mat-mdc-checkbox .mat-ripple-element {\n  background-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-checkbox .mdc-checkbox__ripple {\n  background: #fff;\n}\n.vex-style-dark .mat-mdc-checkbox.mat-primary {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-checkbox.mat-primary .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-primary-rgb);\n  opacity: 0.1;\n}\n.vex-style-dark .mat-mdc-checkbox.mat-primary .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-checkbox.mat-accent {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-checkbox.mat-accent .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-accent-rgb);\n  opacity: 0.1;\n}\n.vex-style-dark .mat-mdc-checkbox.mat-accent .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-checkbox.mat-warn {\n  --mdc-checkbox-selected-checkmark-color: #fff;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #eeeeee;\n  --mdc-checkbox-unselected-hover-icon-color: #eeeeee;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(255, 255, 255, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(255, 255, 255, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(255, 255, 255, 0.54);\n}\n.vex-style-dark .mat-mdc-checkbox.mat-warn .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-warn-rgb);\n  opacity: 0.1;\n}\n.vex-style-dark .mat-mdc-checkbox.mat-warn .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-checkbox-disabled label {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-button.mat-unthemed {\n  --mdc-text-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-button[disabled][disabled] {\n  --mdc-text-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-text-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-unelevated-button.mat-unthemed {\n  --mdc-filled-button-container-color: #1a202e;\n  --mdc-filled-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: var(--color-primary-rgb);\n  --mdc-filled-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: var(--color-accent-rgb);\n  --mdc-filled-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: var(--color-warn-rgb);\n  --mdc-filled-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-unelevated-button[disabled][disabled] {\n  --mdc-filled-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-filled-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-filled-button-label-text-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-raised-button.mat-unthemed {\n  --mdc-protected-button-container-color: #1a202e;\n  --mdc-protected-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: var(--color-primary-rgb);\n  --mdc-protected-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: var(--color-accent-rgb);\n  --mdc-protected-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: var(--color-warn-rgb);\n  --mdc-protected-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-raised-button[disabled][disabled] {\n  --mdc-protected-button-disabled-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-protected-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-protected-button-container-elevation: 0;\n}\n.vex-style-dark .mat-mdc-outlined-button {\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-mdc-outlined-button.mat-unthemed {\n  --mdc-outlined-button-label-text-color: #fff;\n}\n.vex-style-dark .mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-outlined-button[disabled][disabled] {\n  --mdc-outlined-button-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-disabled-label-text-color: rgba(255, 255, 255, 0.5);\n  --mdc-outlined-button-outline-color: rgba(255, 255, 255, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-mdc-button, .vex-style-dark .mat-mdc-outlined-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.vex-style-dark .mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-button:active .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-button.mat-primary, .vex-style-dark .mat-mdc-outlined-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-primary-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-button.mat-accent, .vex-style-dark .mat-mdc-outlined-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-accent-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-button.mat-warn, .vex-style-dark .mat-mdc-outlined-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-warn-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-raised-button, .vex-style-dark .mat-mdc-unelevated-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.vex-style-dark .mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-raised-button.mat-primary, .vex-style-dark .mat-mdc-unelevated-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-raised-button.mat-accent, .vex-style-dark .mat-mdc-unelevated-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-raised-button.mat-warn, .vex-style-dark .mat-mdc-unelevated-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-icon-button {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.vex-style-dark .mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-icon-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-primary-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-icon-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-accent-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-icon-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-warn-rgb), 0.1);\n}\n.vex-style-dark .mat-mdc-icon-button.mat-primary {\n  --mdc-icon-button-icon-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-icon-button.mat-accent {\n  --mdc-icon-button-icon-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-icon-button.mat-warn {\n  --mdc-icon-button-icon-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-mdc-icon-button[disabled][disabled] {\n  --mdc-icon-button-icon-color: rgba(255, 255, 255, 0.5);\n  --mdc-icon-button-disabled-icon-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-fab, .vex-style-dark .mat-mdc-mini-fab {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.08;\n}\n.vex-style-dark .mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before, .vex-style-dark .mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.24;\n}\n.vex-style-dark .mat-mdc-fab.mat-primary, .vex-style-dark .mat-mdc-mini-fab.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-fab.mat-accent, .vex-style-dark .mat-mdc-mini-fab.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-fab.mat-warn, .vex-style-dark .mat-mdc-mini-fab.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #fff;\n  --mat-mdc-button-ripple-color: rgba(255, 255, 255, 0.1);\n}\n.vex-style-dark .mat-mdc-fab.mat-unthemed, .vex-style-dark .mat-mdc-mini-fab.mat-unthemed {\n  --mdc-fab-container-color: #1a202e;\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.vex-style-dark .mat-mdc-fab.mat-primary, .vex-style-dark .mat-mdc-mini-fab.mat-primary {\n  --mdc-fab-container-color: var(--color-primary-rgb);\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.vex-style-dark .mat-mdc-fab.mat-accent, .vex-style-dark .mat-mdc-mini-fab.mat-accent {\n  --mdc-fab-container-color: var(--color-accent-rgb);\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.vex-style-dark .mat-mdc-fab.mat-warn, .vex-style-dark .mat-mdc-mini-fab.mat-warn {\n  --mdc-fab-container-color: var(--color-warn-rgb);\n  --mdc-fab-icon-color: #fff;\n  --mat-mdc-fab-color: #fff;\n}\n.vex-style-dark .mat-mdc-fab[disabled][disabled], .vex-style-dark .mat-mdc-mini-fab[disabled][disabled] {\n  --mdc-fab-container-color: rgba(255, 255, 255, 0.12);\n  --mdc-fab-icon-color: rgba(255, 255, 255, 0.5);\n  --mat-mdc-fab-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-mdc-snack-bar-container {\n  --mat-mdc-snack-bar-button-color: rgba(0, 0, 0, 0.87);\n  --mdc-snackbar-container-color: #d1d2d5;\n  --mdc-snackbar-supporting-text-color: rgba(26, 32, 46, 0.87);\n}\n.vex-style-dark .mdc-data-table {\n  background-color: var(--mdc-theme-surface, #1a202e);\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mdc-data-table__row {\n  background-color: inherit;\n}\n.vex-style-dark .mdc-data-table__header-cell {\n  background-color: var(--mdc-theme-surface, #1a202e);\n}\n.vex-style-dark .mdc-data-table__row--selected {\n  background-color: rgba(var(--color-primary-rgb), 0.04);\n}\n.vex-style-dark .mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__leading,\n.vex-style-dark .mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__notch,\n.vex-style-dark .mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__trailing {\n  border-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mdc-data-table__cell,\n.vex-style-dark .mdc-data-table__header-cell {\n  border-bottom-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mdc-data-table__pagination {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.vex-style-dark .mdc-data-table__header-cell {\n  color: rgba(255, 255, 255, 0.87);\n}\n.vex-style-dark .mdc-data-table__pagination-total,\n.vex-style-dark .mdc-data-table__pagination-rows-per-page-label,\n.vex-style-dark .mdc-data-table__cell {\n  color: rgba(255, 255, 255, 0.87);\n}\n[dir=rtl] .vex-style-dark .mdc-data-table__pagination-button .mdc-button__icon, .vex-style-dark .mdc-data-table__pagination-button .mdc-button__icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.vex-style-dark .mat-mdc-table {\n  background: #1a202e;\n}\n.vex-style-dark .mat-mdc-progress-spinner {\n  --mdc-circular-progress-active-indicator-color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-mdc-progress-spinner.mat-accent {\n  --mdc-circular-progress-active-indicator-color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-mdc-progress-spinner.mat-warn {\n  --mdc-circular-progress-active-indicator-color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-badge {\n  position: relative;\n}\n.vex-style-dark .mat-badge.mat-badge {\n  overflow: visible;\n}\n.vex-style-dark .mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n.vex-style-dark .mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n.vex-style-dark .ng-animate-disabled .mat-badge-content,\n.vex-style-dark .mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n.vex-style-dark .mat-badge-content.mat-badge-active {\n  transform: none;\n}\n.vex-style-dark .mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.vex-style-dark .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n.vex-style-dark .mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.vex-style-dark .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n.vex-style-dark .mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.vex-style-dark .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .vex-style-dark .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n.vex-style-dark .mat-badge-content {\n  color: var(--color-primary-contrast-rgb);\n  background: var(--color-primary-rgb);\n}\n.cdk-high-contrast-active .vex-style-dark .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.vex-style-dark .mat-badge-accent .mat-badge-content {\n  background: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-badge-warn .mat-badge-content {\n  color: var(--color-warn-contrast-rgb);\n  background: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-badge-disabled .mat-badge-content {\n  background: #656b78;\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: #1a202e;\n  color: white;\n}\n.vex-style-dark .mat-button-toggle-standalone:not([class*=mat-elevation-z]),\n.vex-style-dark .mat-button-toggle-group:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),\n.vex-style-dark .mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n.vex-style-dark .mat-button-toggle {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-button-toggle-appearance-standard {\n  color: white;\n  background: #1a202e;\n}\n.vex-style-dark .mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: white;\n}\n.vex-style-dark .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px #353b47;\n}\n.vex-style-dark [dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px #353b47;\n}\n.vex-style-dark .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #353b47;\n}\n.vex-style-dark .mat-button-toggle-checked {\n  background-color: #212121;\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: white;\n}\n.vex-style-dark .mat-button-toggle-disabled {\n  color: rgba(255, 255, 255, 0.3);\n  background-color: black;\n}\n.vex-style-dark .mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: #1a202e;\n}\n.vex-style-dark .mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #424242;\n}\n.vex-style-dark .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.vex-style-dark .mat-button-toggle-group-appearance-standard {\n  border: solid 1px #353b47;\n}\n.vex-style-dark .mat-calendar-arrow {\n  fill: white;\n}\n.vex-style-dark .mat-datepicker-toggle,\n.vex-style-dark .mat-datepicker-content .mat-calendar-next-button,\n.vex-style-dark .mat-datepicker-content .mat-calendar-previous-button {\n  color: white;\n}\n.vex-style-dark .mat-calendar-table-header-divider::after {\n  background: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-calendar-table-header,\n.vex-style-dark .mat-calendar-body-label {\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-calendar-body-cell-content,\n.vex-style-dark .mat-date-range-input-separator {\n  color: white;\n  border-color: transparent;\n}\n.vex-style-dark .mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-calendar-body-in-preview {\n  color: rgba(255, 255, 255, 0.24);\n}\n.vex-style-dark .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(255, 255, 255, 0.3);\n}\n.vex-style-dark .mat-calendar-body-in-range::before {\n  background: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.vex-style-dark .mat-calendar-body-comparison-bridge-start::before,\n.vex-style-dark [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-primary-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-calendar-body-comparison-bridge-end::before,\n.vex-style-dark [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-primary-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.vex-style-dark .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.vex-style-dark .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.vex-style-dark .mat-calendar-body-selected {\n  background-color: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n.vex-style-dark .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.vex-style-dark .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-primary-rgb);\n}\n@media (hover: hover) {\n  .vex-style-dark .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-primary-rgb);\n  }\n}\n.vex-style-dark .mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: #1a202e;\n  color: white;\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.vex-style-dark .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-accent-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.vex-style-dark .mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-accent-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.vex-style-dark .mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-accent-rgb);\n}\n@media (hover: hover) {\n  .vex-style-dark .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-accent-rgb);\n  }\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.vex-style-dark .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-warn-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.vex-style-dark .mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-warn-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.vex-style-dark .mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-warn-rgb);\n}\n@media (hover: hover) {\n  .vex-style-dark .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-warn-rgb);\n  }\n}\n.vex-style-dark .mat-datepicker-content-touch {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-datepicker-toggle-active {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-datepicker-toggle-active.mat-accent {\n  color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-datepicker-toggle-active.mat-warn {\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-date-range-input-inner[disabled] {\n  color: rgba(255, 255, 255, 0.5);\n}\n.vex-style-dark .mat-divider {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-divider-vertical {\n  border-right-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-expansion-panel {\n  background: #1a202e;\n  color: white;\n}\n.vex-style-dark .mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-action-row {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .vex-style-dark .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .vex-style-dark .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(255, 255, 255, 0.04);\n}\n@media (hover: none) {\n  .vex-style-dark .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: #1a202e;\n  }\n}\n.vex-style-dark .mat-expansion-panel-header-title {\n  color: white;\n}\n.vex-style-dark .mat-expansion-panel-header-description,\n.vex-style-dark .mat-expansion-indicator::after {\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(255, 255, 255, 0.3);\n}\n.vex-style-dark .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.vex-style-dark .mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n.vex-style-dark .mat-icon.mat-primary {\n  color: var(--color-primary-rgb);\n}\n.vex-style-dark .mat-icon.mat-accent {\n  color: var(--color-accent-rgb);\n}\n.vex-style-dark .mat-icon.mat-warn {\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-drawer-container {\n  background-color: #232b3e;\n  color: white;\n}\n.vex-style-dark .mat-drawer {\n  background-color: #1a202e;\n  color: white;\n}\n.vex-style-dark .mat-drawer.mat-drawer-push {\n  background-color: #1a202e;\n}\n.vex-style-dark .mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n.vex-style-dark .mat-drawer-side {\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.vex-style-dark [dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(255, 255, 255, 0.12);\n  border-right: none;\n}\n.vex-style-dark [dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(229, 223, 209, 0.6);\n}\n.vex-style-dark .mat-step-header.cdk-keyboard-focused, .vex-style-dark .mat-step-header.cdk-program-focused, .vex-style-dark .mat-step-header:hover:not([aria-disabled]), .vex-style-dark .mat-step-header:hover[aria-disabled=false] {\n  background-color: rgba(255, 255, 255, 0.04);\n}\n.vex-style-dark .mat-step-header:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .vex-style-dark .mat-step-header:hover {\n    background: none;\n  }\n}\n.vex-style-dark .mat-step-header .mat-step-label,\n.vex-style-dark .mat-step-header .mat-step-optional {\n  color: rgba(255, 255, 255, 0.7);\n}\n.vex-style-dark .mat-step-header .mat-step-icon {\n  background-color: rgba(255, 255, 255, 0.7);\n  color: var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .mat-step-header .mat-step-icon-selected,\n.vex-style-dark .mat-step-header .mat-step-icon-state-done,\n.vex-style-dark .mat-step-header .mat-step-icon-state-edit {\n  background-color: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .mat-step-header.mat-accent .mat-step-icon {\n  color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-step-header.mat-accent .mat-step-icon-selected,\n.vex-style-dark .mat-step-header.mat-accent .mat-step-icon-state-done,\n.vex-style-dark .mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-step-header.mat-warn .mat-step-icon {\n  color: var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-step-header.mat-warn .mat-step-icon-selected,\n.vex-style-dark .mat-step-header.mat-warn .mat-step-icon-state-done,\n.vex-style-dark .mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-step-header .mat-step-label.mat-step-label-active {\n  color: white;\n}\n.vex-style-dark .mat-step-header .mat-step-label.mat-step-label-error {\n  color: var(--color-warn-rgb);\n}\n.vex-style-dark .mat-stepper-horizontal, .vex-style-dark .mat-stepper-vertical {\n  background-color: #1a202e;\n}\n.vex-style-dark .mat-stepper-vertical-line::before {\n  border-left-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-horizontal-stepper-header::before,\n.vex-style-dark .mat-horizontal-stepper-header::after,\n.vex-style-dark .mat-stepper-horizontal-line {\n  border-top-color: rgba(255, 255, 255, 0.12);\n}\n.vex-style-dark .mat-sort-header-arrow {\n  color: #babcc0;\n}\n.vex-style-dark .mat-toolbar {\n  background: #11151e;\n  color: white;\n}\n.vex-style-dark .mat-toolbar.mat-primary {\n  background: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n.vex-style-dark .mat-toolbar.mat-accent {\n  background: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.vex-style-dark .mat-toolbar.mat-warn {\n  background: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.vex-style-dark .mat-toolbar .mat-form-field-underline,\n.vex-style-dark .mat-toolbar .mat-form-field-ripple,\n.vex-style-dark .mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.vex-style-dark .mat-toolbar .mat-form-field-label,\n.vex-style-dark .mat-toolbar .mat-focused .mat-form-field-label,\n.vex-style-dark .mat-toolbar .mat-select-value,\n.vex-style-dark .mat-toolbar .mat-select-arrow,\n.vex-style-dark .mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.vex-style-dark .mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n.vex-style-dark .mat-tree {\n  background: #1a202e;\n}\n.vex-style-dark .mat-tree-node,\n.vex-style-dark .mat-nested-tree-node {\n  color: white;\n}\n\n.vex-style-light {\n  --navigation-background: var(--background-foreground);\n  --sidenav-background: white;\n  --toolbar-background: var(--background-foreground);\n  --sidenav-color: var(--text-color);\n  --sidenav-item-background-hover: #f2f2f2;\n  --sidenav-item-background-active: #f7f7f7;\n  --sidenav-item-color: var(--text-color);\n  --sidenav-item-color-hover: var(--text-color);\n  --sidenav-item-color-active: var(--text-color);\n  --sidenav-item-dropdown-background: #f7f7f7;\n  --sidenav-item-dropdown-background-hover: #ebebeb;\n  --sidenav-item-dropdown-color-hover: var(--text-color);\n  --sidenav-item-dropdown-background-active: #e6e6e6;\n  --sidenav-item-dropdown-color-active: var(--text-color);\n  --sidenav-item-icon-color-active: rgb(var(--color-primary));\n  --sidenav-toolbar-background: white;\n  --sidenav-toolbar-background-rgb: 255, 255, 255;\n  --sidenav-section-divider-color: rgba(82, 63, 105, 0.06);\n}\n.vex-style-light .sidenav {\n  @apply border-r border-r-gray-200;\n}\n.vex-style-light .sidenav .vex-sidenav-user .vex-sidenav-user__subtitle,\n.vex-style-light .sidenav .vex-sidenav-user .vex-sidenav-user__dropdown-icon {\n  @apply text-contrast-black/50;\n}\n.vex-style-light .sidenav .vex-sidenav-user:hover {\n  @apply bg-gray-100 text-gray-900;\n}\n.vex-style-light .sidenav .vex-sidenav-search {\n  @apply bg-gray-100 text-gray-600;\n}\n.vex-style-light .sidenav .vex-sidenav-search:hover {\n  @apply bg-gray-200 text-gray-900;\n}\n.vex-style-light .vex-sidenav-user--open {\n  @apply bg-gray-100;\n}\n\n:root {\n  --padding-gutter: 1rem;\n  --padding: 1.5rem;\n  --padding-16: 1rem;\n  --padding-12: 0.75rem;\n  --padding-8: 0.5rem;\n  --padding-6: 0.375rem;\n  --padding-4: 0.25rem;\n  --color-primary: 99, 102, 241;\n  --color-primary-rgb: rgb(99, 102, 241);\n  --color-primary-contrast: 255, 255, 255;\n  --color-primary-contrast-rgb: rgb(255, 255, 255);\n  --color-accent: 255, 64, 129;\n  --color-accent-rgb: rgb(255, 64, 129);\n  --color-accent-contrast: 255, 255, 255;\n  --color-accent-contrast-rgb: rgb(255, 255, 255);\n  --color-warn: 244, 67, 54;\n  --color-warn-rgb: rgb(244, 67, 54);\n  --color-warn-contrast: 255, 255, 255;\n  --color-warn-contrast-rgb: rgb(255, 255, 255);\n  --font: theme(\"fontFamily.sans\");\n  --font-weight-medium: 500;\n  --trans-ease-in-out: all var(--trans-ease-in-out-duration) var(--trans-ease-in-out-timing-function);\n  --trans-ease-in-out-duration: 500ms;\n  --trans-ease-in-out-timing-function: cubic-bezier(0.35, 0, 0.25, 1);\n  --trans-ease-out: all var(--trans-ease-out-duration) var(--trans-ease-out-timing-function);\n  --trans-ease-out-duration: 400ms;\n  --trans-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\n  --trans-ease-in: all var(--trans-ease-in-duration) var(--trans-ease-in-timing-function);\n  --trans-ease-in-duration: 300ms;\n  --trans-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2);\n  --trans-shadow-duration: 280ms;\n  --trans-shadow-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n  --trans-shadow: box-shadow var(--trans-shadow-duration) var(--trans-shadow-timing-function);\n  --text-color: rgba(0, 0, 0, 0.87);\n  --text-color-light: white;\n  --text-secondary: rgba(0, 0, 0, 0.54);\n  --text-secondary-light: rgba(255, 255, 255, 0.7);\n  --text-hint: rgba(0, 0, 0, 0.38);\n  --text-hint-light: rgba(255, 255, 255, 0.5);\n  --foreground-divider: rgba(82, 63, 105, 0.06);\n  --background-base: rgb(245, 245, 248);\n  --background-foreground: white;\n  --background-foreground-rgb: 255, 255, 255;\n  --background-app-bar: #ebebee;\n  --background-hover: rgba(0, 0, 0, 0.04);\n  --elevation-default: var(--elevation-z6);\n  --elevation-z0: none;\n  --elevation-z1: 0px 2px 1px -1px rgba(82, 63, 104, 0.06), 0px 1px 1px 0px rgba(82, 63, 104, 0.042), 0px 1px 3px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z2: 0px 3px 1px -2px rgba(82, 63, 104, 0.06), 0px 2px 2px 0px rgba(82, 63, 104, 0.042), 0px 1px 5px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z3: 0px 3px 3px -2px rgba(82, 63, 104, 0.06), 0px 3px 4px 0px rgba(82, 63, 104, 0.042), 0px 1px 8px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z4: 0px 2px 4px -1px rgba(82, 63, 104, 0.06), 0px 4px 5px 0px rgba(82, 63, 104, 0.042), 0px 1px 10px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z5: 0px 3px 5px -1px rgba(82, 63, 104, 0.06), 0px 5px 8px 0px rgba(82, 63, 104, 0.042), 0px 1px 14px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z6: 0px 3px 5px -1px rgba(82, 63, 104, 0.06), 0px 6px 10px 0px rgba(82, 63, 104, 0.042), 0px 1px 18px 0px rgba(82, 63, 104, 0.036);\n  --elevation-z7: 0px 4px 5px -2px rgba(82, 63, 104, 0.06), 0px 7px 10px 1px rgba(82, 63, 104, 0.042), 0px 2px 16px 1px rgba(82, 63, 104, 0.036);\n  --elevation-z8: 0px 5px 5px -3px rgba(82, 63, 104, 0.06), 0px 8px 10px 1px rgba(82, 63, 104, 0.042), 0px 3px 14px 2px rgba(82, 63, 104, 0.036);\n  --elevation-z9: 0px 5px 6px -3px rgba(82, 63, 104, 0.06), 0px 9px 12px 1px rgba(82, 63, 104, 0.042), 0px 3px 16px 2px rgba(82, 63, 104, 0.036);\n  --elevation-z10: 0px 6px 6px -3px rgba(82, 63, 104, 0.06), 0px 10px 14px 1px rgba(82, 63, 104, 0.042), 0px 4px 18px 3px rgba(82, 63, 104, 0.036);\n  --elevation-z11: 0px 6px 7px -4px rgba(82, 63, 104, 0.06), 0px 11px 15px 1px rgba(82, 63, 104, 0.042), 0px 4px 20px 3px rgba(82, 63, 104, 0.036);\n  --elevation-z12: 0px 7px 8px -4px rgba(82, 63, 104, 0.06), 0px 12px 17px 2px rgba(82, 63, 104, 0.042), 0px 5px 22px 4px rgba(82, 63, 104, 0.036);\n  --elevation-z13: 0px 7px 8px -4px rgba(82, 63, 104, 0.06), 0px 13px 19px 2px rgba(82, 63, 104, 0.042), 0px 5px 24px 4px rgba(82, 63, 104, 0.036);\n  --elevation-z14: 0px 7px 9px -4px rgba(82, 63, 104, 0.06), 0px 14px 21px 2px rgba(82, 63, 104, 0.042), 0px 5px 26px 4px rgba(82, 63, 104, 0.036);\n  --elevation-z15: 0px 8px 9px -5px rgba(82, 63, 104, 0.06), 0px 15px 22px 2px rgba(82, 63, 104, 0.042), 0px 6px 28px 5px rgba(82, 63, 104, 0.036);\n  --elevation-z16: 0px 8px 10px -5px rgba(82, 63, 104, 0.06), 0px 16px 24px 2px rgba(82, 63, 104, 0.042), 0px 6px 30px 5px rgba(82, 63, 104, 0.036);\n  --elevation-z17: 0px 8px 11px -5px rgba(82, 63, 104, 0.06), 0px 17px 26px 2px rgba(82, 63, 104, 0.042), 0px 6px 32px 5px rgba(82, 63, 104, 0.036);\n  --elevation-z18: 0px 9px 11px -5px rgba(82, 63, 104, 0.06), 0px 18px 28px 2px rgba(82, 63, 104, 0.042), 0px 7px 34px 6px rgba(82, 63, 104, 0.036);\n  --elevation-z19: 0px 9px 12px -6px rgba(82, 63, 104, 0.06), 0px 19px 29px 2px rgba(82, 63, 104, 0.042), 0px 7px 36px 6px rgba(82, 63, 104, 0.036);\n  --elevation-z20: 0px 10px 13px -6px rgba(82, 63, 104, 0.06), 0px 20px 31px 3px rgba(82, 63, 104, 0.042), 0px 8px 38px 7px rgba(82, 63, 104, 0.036);\n  --sidenav-width: 280px;\n  --sidenav-collapsed-width: 72px;\n  --sidenav-background: #1a202e;\n  --sidenav-color: white;\n  --sidenav-toolbar-background: #171d29;\n  --sidenav-toolbar-background-rgb: 23, 29, 41;\n  --sidenav-section-divider-color: rgba(255, 255, 255, 0.12);\n  --sidenav-item-min-height: 48px;\n  --sidenav-item-padding-vertical: var(--padding-8);\n  --sidenav-item-padding-horizontal: var(--padding);\n  --sidenav-item-background-hover: #141924;\n  --sidenav-item-background-active: #141924;\n  --sidenav-item-font-weight: 500;\n  --sidenav-item-color: #A1A2B6;\n  --sidenav-item-color-hover: white;\n  --sidenav-item-color-active: white;\n  --sidenav-item-icon-color: #494B74;\n  --sidenav-item-icon-color-hover: rgb(var(--color-primary));\n  --sidenav-item-icon-color-active: rgb(var(--color-primary));\n  --sidenav-item-icon-gap: 16px;\n  --sidenav-item-icon-size: 24px;\n  --sidenav-item-dropdown-background: #141924;\n  --sidenav-item-dropdown-background-hover: #131721;\n  --sidenav-item-dropdown-color-hover: var(--sidenav-item-color-hover);\n  --sidenav-item-dropdown-background-active: var(--sidenav-item-dropdown-background-hover);\n  --sidenav-item-dropdown-color-active: var(--sidenav-item-color-active);\n  --sidenav-item-ripple-color: rgba(0, 0, 0, 0.1);\n  --sidenav-item-dropdown-gap: 12px;\n  --sidenav-subheading-color: #6b6e7f;\n  --toolbar-height: 64px;\n  --toolbar-background: white;\n  --toolbar-color: rgba(0, 0, 0, 0.87);\n  --toolbar-icon-color: rgb(var(--color-primary));\n  --secondary-toolbar-background: var(--background-foreground);\n  --secondary-toolbar-height: 54px;\n  --navigation-height: 64px;\n  --navigation-background: var(--background-foreground);\n  --navigation-color: var(--text-secondary);\n  --footer-height: 56px;\n  --footer-z-index: 100;\n  --footer-background: var(--background-foreground);\n  --footer-color: var(--text-color);\n  --footer-elevation: 0 -10px 30px 0 rgba(82, 63, 104, .06);\n  --page-layout-header-height: 200px;\n  --page-layout-toolbar-height: 64px;\n  --blink-scrollbar-width: 12px;\n  --default-icon-size: 24px;\n  --border-radius: 0.25rem;\n}\n@screen lg {\n  :root {\n    --padding-gutter: 1.5rem;\n  }\n}\n\n.mat-ripple {\n  overflow: hidden;\n  position: relative;\n}\n.mat-ripple:not(:empty) {\n  transform: translateZ(0);\n}\n\n.mat-ripple.mat-ripple-unbounded {\n  overflow: visible;\n}\n\n.mat-ripple-element {\n  position: absolute;\n  border-radius: 50%;\n  pointer-events: none;\n  transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n  transform: scale3d(0, 0, 0);\n}\n.cdk-high-contrast-active .mat-ripple-element {\n  display: none;\n}\n\n.cdk-visually-hidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px;\n  white-space: nowrap;\n  outline: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  left: 0;\n}\n[dir=rtl] .cdk-visually-hidden {\n  left: auto;\n  right: 0;\n}\n\n.cdk-overlay-container, .cdk-global-overlay-wrapper {\n  pointer-events: none;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n}\n\n.cdk-overlay-container {\n  position: fixed;\n  z-index: 1000;\n}\n.cdk-overlay-container:empty {\n  display: none;\n}\n\n.cdk-global-overlay-wrapper {\n  display: flex;\n  position: absolute;\n  z-index: 1000;\n}\n\n.cdk-overlay-pane {\n  position: absolute;\n  pointer-events: auto;\n  box-sizing: border-box;\n  z-index: 1000;\n  display: flex;\n  max-width: 100%;\n  max-height: 100%;\n}\n\n.cdk-overlay-backdrop {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n  pointer-events: auto;\n  -webkit-tap-highlight-color: transparent;\n  transition: opacity 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n  opacity: 0;\n}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 1;\n}\n.cdk-high-contrast-active .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0.6;\n}\n\n.cdk-overlay-dark-backdrop {\n  background: rgba(0, 0, 0, 0.32);\n}\n\n.cdk-overlay-transparent-backdrop {\n  transition: visibility 1ms linear, opacity 1ms linear;\n  visibility: hidden;\n  opacity: 1;\n}\n.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0;\n  visibility: visible;\n}\n\n.cdk-overlay-backdrop-noop-animation {\n  transition: none;\n}\n\n.cdk-overlay-connected-position-bounding-box {\n  position: absolute;\n  z-index: 1000;\n  display: flex;\n  flex-direction: column;\n  min-width: 1px;\n  min-height: 1px;\n}\n\n.cdk-global-scrollblock {\n  position: fixed;\n  width: 100%;\n  overflow-y: scroll;\n}\n\ntextarea.cdk-textarea-autosize {\n  resize: none;\n}\n\ntextarea.cdk-textarea-autosize-measuring {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: auto !important;\n  overflow: hidden !important;\n}\n\ntextarea.cdk-textarea-autosize-measuring-firefox {\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n  height: 0 !important;\n}\n\n@keyframes cdk-text-field-autofill-start { /*!*/ }\n@keyframes cdk-text-field-autofill-end { /*!*/ }\n.cdk-text-field-autofill-monitored:-webkit-autofill {\n  animation: cdk-text-field-autofill-start 0s 1ms;\n}\n\n.cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n  animation: cdk-text-field-autofill-end 0s 1ms;\n}\n\n.mat-focus-indicator {\n  position: relative;\n}\n.mat-focus-indicator::before {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  box-sizing: border-box;\n  pointer-events: none;\n  display: var(--mat-focus-indicator-display, none);\n  border: var(--mat-focus-indicator-border-width, 3px) var(--mat-focus-indicator-border-style, solid) var(--mat-focus-indicator-border-color, transparent);\n  border-radius: var(--mat-focus-indicator-border-radius, 4px);\n}\n.mat-focus-indicator:focus::before {\n  content: \"\";\n}\n\n.cdk-high-contrast-active {\n  --mat-focus-indicator-display: block;\n}\n\n.mat-mdc-focus-indicator {\n  position: relative;\n}\n.mat-mdc-focus-indicator::before {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n  box-sizing: border-box;\n  pointer-events: none;\n  display: var(--mat-mdc-focus-indicator-display, none);\n  border: var(--mat-mdc-focus-indicator-border-width, 3px) var(--mat-mdc-focus-indicator-border-style, solid) var(--mat-mdc-focus-indicator-border-color, transparent);\n  border-radius: var(--mat-mdc-focus-indicator-border-radius, 4px);\n}\n.mat-mdc-focus-indicator:focus::before {\n  content: \"\";\n}\n\n.cdk-high-contrast-active {\n  --mat-mdc-focus-indicator-display: block;\n}\n\n.mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n\n.mat-mdc-option {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.mat-mdc-option:hover:not(.mdc-list-item--disabled), .mat-mdc-option:focus:not(.mdc-list-item--disabled), .mat-mdc-option.mat-mdc-option-active, .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-primary .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n\n.mat-accent .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n\n.mat-warn .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n\n.mat-mdc-optgroup-label {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mat-pseudo-checkbox-full {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled {\n  color: #b0b0b0;\n}\n\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-primary-rgb);\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-primary-rgb);\n}\n.mat-primary .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-primary .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #fafafa;\n}\n\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-accent-rgb);\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-accent-rgb);\n}\n.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #fafafa;\n}\n\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-accent-rgb);\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-accent-rgb);\n}\n.mat-accent .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-accent .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #fafafa;\n}\n\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: var(--color-warn-rgb);\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: var(--color-warn-rgb);\n}\n.mat-warn .mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full::after,\n.mat-warn .mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full::after {\n  color: #fafafa;\n}\n\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-minimal::after,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-minimal::after {\n  color: #b0b0b0;\n}\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-full,\n.mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-full {\n  background: #b0b0b0;\n}\n\n.mat-app-background {\n  background-color: #fafafa;\n  color: black;\n}\n\n.mat-elevation-z0, .mat-mdc-elevation-specific.mat-elevation-z0 {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z1, .mat-mdc-elevation-specific.mat-elevation-z1 {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z2, .mat-mdc-elevation-specific.mat-elevation-z2 {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z3, .mat-mdc-elevation-specific.mat-elevation-z3 {\n  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2), 0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z4, .mat-mdc-elevation-specific.mat-elevation-z4 {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z5, .mat-mdc-elevation-specific.mat-elevation-z5 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z6, .mat-mdc-elevation-specific.mat-elevation-z6 {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z7, .mat-mdc-elevation-specific.mat-elevation-z7 {\n  box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z8, .mat-mdc-elevation-specific.mat-elevation-z8 {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z9, .mat-mdc-elevation-specific.mat-elevation-z9 {\n  box-shadow: 0px 5px 6px -3px rgba(0, 0, 0, 0.2), 0px 9px 12px 1px rgba(0, 0, 0, 0.14), 0px 3px 16px 2px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z10, .mat-mdc-elevation-specific.mat-elevation-z10 {\n  box-shadow: 0px 6px 6px -3px rgba(0, 0, 0, 0.2), 0px 10px 14px 1px rgba(0, 0, 0, 0.14), 0px 4px 18px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z11, .mat-mdc-elevation-specific.mat-elevation-z11 {\n  box-shadow: 0px 6px 7px -4px rgba(0, 0, 0, 0.2), 0px 11px 15px 1px rgba(0, 0, 0, 0.14), 0px 4px 20px 3px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z12, .mat-mdc-elevation-specific.mat-elevation-z12 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z13, .mat-mdc-elevation-specific.mat-elevation-z13 {\n  box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 13px 19px 2px rgba(0, 0, 0, 0.14), 0px 5px 24px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z14, .mat-mdc-elevation-specific.mat-elevation-z14 {\n  box-shadow: 0px 7px 9px -4px rgba(0, 0, 0, 0.2), 0px 14px 21px 2px rgba(0, 0, 0, 0.14), 0px 5px 26px 4px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z15, .mat-mdc-elevation-specific.mat-elevation-z15 {\n  box-shadow: 0px 8px 9px -5px rgba(0, 0, 0, 0.2), 0px 15px 22px 2px rgba(0, 0, 0, 0.14), 0px 6px 28px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z16, .mat-mdc-elevation-specific.mat-elevation-z16 {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z17, .mat-mdc-elevation-specific.mat-elevation-z17 {\n  box-shadow: 0px 8px 11px -5px rgba(0, 0, 0, 0.2), 0px 17px 26px 2px rgba(0, 0, 0, 0.14), 0px 6px 32px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z18, .mat-mdc-elevation-specific.mat-elevation-z18 {\n  box-shadow: 0px 9px 11px -5px rgba(0, 0, 0, 0.2), 0px 18px 28px 2px rgba(0, 0, 0, 0.14), 0px 7px 34px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z19, .mat-mdc-elevation-specific.mat-elevation-z19 {\n  box-shadow: 0px 9px 12px -6px rgba(0, 0, 0, 0.2), 0px 19px 29px 2px rgba(0, 0, 0, 0.14), 0px 7px 36px 6px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z20, .mat-mdc-elevation-specific.mat-elevation-z20 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 20px 31px 3px rgba(0, 0, 0, 0.14), 0px 8px 38px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z21, .mat-mdc-elevation-specific.mat-elevation-z21 {\n  box-shadow: 0px 10px 13px -6px rgba(0, 0, 0, 0.2), 0px 21px 33px 3px rgba(0, 0, 0, 0.14), 0px 8px 40px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z22, .mat-mdc-elevation-specific.mat-elevation-z22 {\n  box-shadow: 0px 10px 14px -6px rgba(0, 0, 0, 0.2), 0px 22px 35px 3px rgba(0, 0, 0, 0.14), 0px 8px 42px 7px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z23, .mat-mdc-elevation-specific.mat-elevation-z23 {\n  box-shadow: 0px 11px 14px -7px rgba(0, 0, 0, 0.2), 0px 23px 36px 3px rgba(0, 0, 0, 0.14), 0px 9px 44px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-elevation-z24, .mat-mdc-elevation-specific.mat-elevation-z24 {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-theme-loaded-marker {\n  display: none;\n}\n\n.mat-mdc-option {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body1-font-size, 15px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, -0.009em);\n}\n\n.mat-mdc-card {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  --mdc-elevated-card-container-color: #fff;\n}\n\n.mat-mdc-card-outlined {\n  box-shadow: 0px 0px 0px 0px rgba(0, 0, 0, 0.2), 0px 0px 0px 0px rgba(0, 0, 0, 0.14), 0px 0px 0px 0px rgba(0, 0, 0, 0.12);\n  --mdc-outlined-card-outline-color: #e0e0e0;\n}\n\n.mat-mdc-card-subtitle {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-mdc-card-title {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-headline6-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-headline6-font-size, 18px);\n  line-height: var(--mdc-typography-headline6-line-height, 26px);\n  font-weight: var(--mdc-typography-headline6-font-weight, 500);\n  letter-spacing: var(--mdc-typography-headline6-letter-spacing, -0.014em);\n  text-decoration: var(--mdc-typography-headline6-text-decoration, inherit);\n  text-transform: var(--mdc-typography-headline6-text-transform, none);\n}\n\n.mat-mdc-card-subtitle {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n.mat-mdc-progress-bar {\n  --mdc-linear-progress-active-indicator-color: var(--color-primary-rgb);\n}\n.mat-mdc-progress-bar .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-primary-rgb)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-primary-rgb);\n}\n.mat-mdc-progress-bar.mat-accent {\n  --mdc-linear-progress-active-indicator-color: var(--color-accent-rgb);\n}\n.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-accent-rgb)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-accent-rgb);\n}\n.mat-mdc-progress-bar.mat-warn {\n  --mdc-linear-progress-active-indicator-color: var(--color-warn-rgb);\n}\n.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-dots {\n  background-image: url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='var(--color-warn-rgb)'/%3E%3C/svg%3E\");\n}\n.mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar {\n  background-color: var(--color-warn-rgb);\n}\n.mat-mdc-tooltip {\n  --mdc-plain-tooltip-container-color: #616161;\n  --mdc-plain-tooltip-supporting-text-color: white;\n}\n\n.mat-mdc-tooltip {\n  --mdc-plain-tooltip-supporting-text-font: var(--font);\n  --mdc-plain-tooltip-supporting-text-size: 12px;\n  --mdc-plain-tooltip-supporting-text-weight: 400;\n  --mdc-plain-tooltip-supporting-text-tracking: 0;\n}\n\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input {\n  color: rgba(0, 0, 0, 0.87);\n}\n@media all {\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n@media all {\n  .mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.6);\n  }\n}\n.mdc-text-field .mdc-text-field__input {\n  caret-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field-character-counter,\n.mdc-text-field:not(.mdc-text-field--disabled) + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--leading {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--prefix {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field:not(.mdc-text-field--disabled) .mdc-text-field__affix--suffix {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mdc-text-field--filled .mdc-text-field__ripple::before,\n.mdc-text-field--filled .mdc-text-field__ripple::after {\n  background-color: var(--mdc-ripple-color, rgba(0, 0, 0, 0.87));\n}\n.mdc-text-field--filled:hover .mdc-text-field__ripple::before, .mdc-text-field--filled.mdc-ripple-surface--hover .mdc-text-field__ripple::before {\n  opacity: var(--mdc-ripple-hover-opacity, 0.04);\n}\n.mdc-text-field--filled.mdc-ripple-upgraded--background-focused .mdc-text-field__ripple::before, .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before {\n  opacity: var(--mdc-ripple-focus-opacity, 0.12);\n}\n.mdc-text-field--filled:not(.mdc-text-field--disabled) {\n  background-color: whitesmoke;\n}\n.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: rgba(0, 0, 0, 0.42);\n}\n.mdc-text-field--filled:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: rgba(0, 0, 0, 0.87);\n}\n.mdc-text-field--filled .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: rgba(0, 0, 0, 0.87);\n}\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon, .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon, .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.mdc-text-field--outlined .mdc-text-field__ripple::before,\n.mdc-text-field--outlined .mdc-text-field__ripple::after {\n  background-color: var(--mdc-ripple-color, transparent);\n}\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined, .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n.mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--color-primary-rgb);\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mdc-text-field--disabled .mdc-text-field__input {\n  color: rgba(0, 0, 0, 0.38);\n}\n@media all {\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n@media all {\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: rgba(0, 0, 0, 0.38);\n  }\n}\n.mdc-text-field--disabled .mdc-floating-label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled .mdc-text-field-character-counter,\n.mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled .mdc-text-field__icon--leading {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled .mdc-text-field__icon--trailing {\n  color: rgba(0, 0, 0, 0.3);\n}\n.mdc-text-field--disabled .mdc-text-field__affix--prefix {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled .mdc-text-field__affix--suffix {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mdc-text-field--disabled .mdc-line-ripple::before {\n  border-bottom-color: rgba(0, 0, 0, 0.06);\n}\n.mdc-text-field--disabled .mdc-notched-outline__leading,\n.mdc-text-field--disabled .mdc-notched-outline__notch,\n.mdc-text-field--disabled .mdc-notched-outline__trailing {\n  border-color: rgba(0, 0, 0, 0.06);\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__input::placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__input:-ms-input-placeholder {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-floating-label {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field-character-counter,\n  .mdc-text-field--disabled + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__icon--leading {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__icon--trailing {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__affix--prefix {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-text-field__affix--suffix {\n    color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-line-ripple::before {\n    border-bottom-color: GrayText;\n  }\n}\n@media screen and (forced-colors: active), (-ms-high-contrast: active) {\n  .mdc-text-field--disabled .mdc-notched-outline__leading,\n  .mdc-text-field--disabled .mdc-notched-outline__notch,\n  .mdc-text-field--disabled .mdc-notched-outline__trailing {\n    border-color: GrayText;\n  }\n}\n.mdc-text-field--disabled.mdc-text-field--filled {\n  background-color: #fafafa;\n}\n[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input, .mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n.mat-mdc-form-field-error {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n\n.mat-mdc-form-field-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n  opacity: 0.04;\n}\n\n.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n  opacity: 0.12;\n}\n\n.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-primary .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-primary-rgb), 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-accent .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-focused.mat-warn .mat-mdc-form-field-infix::after {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-form-field.mat-accent .mdc-text-field__input {\n  caret-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.mat-mdc-form-field.mat-accent:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-accent .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-accent .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-secondary, var(--color-accent-rgb));\n}\n\n.mat-mdc-form-field.mat-warn .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--focused:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-floating-label {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--invalid + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid .mdc-text-field__input {\n  caret-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__icon--trailing {\n  color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::before {\n  border-bottom-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-notched-outline .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-warn .mdc-text-field--invalid:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__leading,\n.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__notch,\n.mat-mdc-form-field.mat-warn .mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline__trailing {\n  border-color: var(--mdc-theme-error, var(--color-warn-rgb));\n}\n\n.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n  border-left: 1px solid transparent;\n}\n\n[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch {\n  border-left: none;\n  border-right: 1px solid transparent;\n}\n\n.mat-mdc-form-field-infix {\n  min-height: 56px;\n}\n\n.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 28px;\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -34.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n\n.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 24px;\n  padding-bottom: 8px;\n}\n\n.mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 16px;\n  padding-bottom: 16px;\n}\n\n.mdc-text-field__input {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n.mdc-text-field__affix {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-leading-icon, .mdc-text-field--outlined.mdc-text-field--with-leading-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n[dir=rtl] .mdc-text-field--outlined.mdc-text-field--with-trailing-icon, .mdc-text-field--outlined.mdc-text-field--with-trailing-icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.mdc-text-field--textarea .mdc-text-field__input {\n  line-height: 1.5rem;\n}\n[dir=rtl] .mdc-text-field--with-leading-icon.mdc-text-field--outlined, .mdc-text-field--with-leading-icon.mdc-text-field--outlined[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n[dir=rtl] .mdc-text-field--end-aligned .mdc-text-field__input, .mdc-text-field--end-aligned .mdc-text-field__input[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.mdc-floating-label {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n}\n\n[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker), .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n.mat-mdc-form-field-subscript-wrapper,\n.mat-mdc-form-field-bottom-align::before {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-caption-font-size, 12px);\n  line-height: var(--mdc-typography-caption-line-height, 20px);\n  font-weight: var(--mdc-typography-caption-font-weight, 400);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0);\n  text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-form-field,\n.mat-mdc-floating-label {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body1-font-size, 15px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, -0.009em);\n  text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above {\n  font-size: calc(15px * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n}\n.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  font-size: 15px;\n}\n\n.mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n\n.mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--disabled .mdc-list-item__start,\n.mdc-list-item--disabled .mdc-list-item__content,\n.mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n\n.mdc-list-item--selected .mdc-list-item__primary-text,\n.mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n\n.mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-divider::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-select-value {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-mdc-select-placeholder {\n  color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-mdc-select-disabled .mat-mdc-select-value {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-select-arrow {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-mdc-form-field.mat-focused.mat-primary .mat-mdc-select-arrow {\n  color: rgba(var(--color-primary-rgb), 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-accent .mat-mdc-select-arrow {\n  color: rgba(var(--color-accent-rgb), 0.87);\n}\n.mat-mdc-form-field.mat-focused.mat-warn .mat-mdc-select-arrow {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow {\n  color: rgba(var(--color-warn-rgb), 0.87);\n}\n.mat-mdc-form-field .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-select-panel {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  /* @alternate */\n  line-height: 24px;\n}\n\n.mat-mdc-select {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body1-font-size, 15px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, -0.009em);\n  text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n\n.mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--disabled .mdc-list-item__start,\n.mdc-list-item--disabled .mdc-list-item__content,\n.mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n\n.mdc-list-item--selected .mdc-list-item__primary-text,\n.mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n\n.mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-divider::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-autocomplete-panel {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  /* @alternate */\n  line-height: 24px;\n}\n\n.mat-mdc-dialog-container {\n  --mdc-dialog-container-color: white;\n  --mdc-dialog-with-divider-divider-color: rgba(0, 0, 0, 0.12);\n  --mdc-dialog-subhead-color: rgba(0, 0, 0, 0.87);\n  --mdc-dialog-supporting-text-color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-mdc-dialog-container {\n  --mdc-dialog-subhead-font: var(--font);\n  --mdc-dialog-subhead-line-height: 26px;\n  --mdc-dialog-subhead-size: 18px;\n  --mdc-dialog-subhead-weight: 500;\n  --mdc-dialog-subhead-tracking: -0.014em;\n  --mdc-dialog-supporting-text-font: var(--font);\n  --mdc-dialog-supporting-text-line-height: 24px;\n  --mdc-dialog-supporting-text-size: 15px;\n  --mdc-dialog-supporting-text-weight: 400;\n  --mdc-dialog-supporting-text-tracking: -0.009em;\n}\n\n.mat-mdc-standard-chip {\n  --mdc-chip-elevated-container-color: #e0e0e0;\n  --mdc-chip-elevated-disabled-container-color: #e0e0e0;\n  --mdc-chip-label-text-color: #212121;\n  --mdc-chip-disabled-label-text-color: #212121;\n  --mdc-chip-with-icon-icon-color: #212121;\n  --mdc-chip-with-icon-disabled-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: #212121;\n  --mdc-chip-with-trailing-icon-trailing-icon-color: #212121;\n  --mdc-chip-with-icon-selected-icon-color: #212121;\n}\n.mat-mdc-standard-chip.mat-primary.mat-mdc-chip-selected, .mat-mdc-standard-chip.mat-primary.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-primary-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-primary-rgb);\n  --mdc-chip-label-text-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-primary-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-primary-contrast-rgb);\n}\n.mat-mdc-standard-chip.mat-accent.mat-mdc-chip-selected, .mat-mdc-standard-chip.mat-accent.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-accent-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-accent-rgb);\n  --mdc-chip-label-text-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-accent-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-accent-contrast-rgb);\n}\n.mat-mdc-standard-chip.mat-warn.mat-mdc-chip-selected, .mat-mdc-standard-chip.mat-warn.mat-mdc-chip-highlighted {\n  --mdc-chip-elevated-container-color: var(--color-warn-rgb);\n  --mdc-chip-elevated-disabled-container-color: var(--color-warn-rgb);\n  --mdc-chip-label-text-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-disabled-label-text-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-disabled-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-trailing-icon-disabled-trailing-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-trailing-icon-trailing-icon-color: var(--color-warn-contrast-rgb);\n  --mdc-chip-with-icon-selected-icon-color: var(--color-warn-contrast-rgb);\n}\n\n.mat-mdc-chip-focus-overlay {\n  background: black;\n}\n\n.mat-mdc-chip {\n  height: 32px;\n}\n\n.mat-mdc-standard-chip {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mat-mdc-slide-toggle {\n  --mdc-switch-disabled-selected-handle-color: #424242;\n  --mdc-switch-disabled-unselected-handle-color: #424242;\n  --mdc-switch-disabled-selected-track-color: #424242;\n  --mdc-switch-disabled-unselected-track-color: #424242;\n  --mdc-switch-unselected-focus-state-layer-color: #424242;\n  --mdc-switch-unselected-pressed-state-layer-color: #424242;\n  --mdc-switch-unselected-hover-state-layer-color: #424242;\n  --mdc-switch-unselected-focus-track-color: #e0e0e0;\n  --mdc-switch-unselected-hover-track-color: #e0e0e0;\n  --mdc-switch-unselected-pressed-track-color: #e0e0e0;\n  --mdc-switch-unselected-track-color: #e0e0e0;\n  --mdc-switch-unselected-focus-handle-color: #212121;\n  --mdc-switch-unselected-hover-handle-color: #212121;\n  --mdc-switch-unselected-pressed-handle-color: #212121;\n  --mdc-switch-handle-surface-color: var(--mdc-theme-surface, #fff);\n  --mdc-switch-unselected-handle-color: #616161;\n  --mdc-switch-selected-icon-color: #fff;\n  --mdc-switch-disabled-selected-icon-color: #fff;\n  --mdc-switch-disabled-unselected-icon-color: #fff;\n  --mdc-switch-unselected-icon-color: #fff;\n}\n.mat-mdc-slide-toggle .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.mat-mdc-slide-toggle .mdc-switch--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-mdc-slide-toggle {\n  --mdc-switch-state-layer-size: 48px;\n}\n\n.mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-radio-button .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.mat-mdc-radio-button.mat-primary {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-primary-rgb);\n}\n.mat-mdc-radio-button.mat-primary .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-mdc-radio-button.mat-accent {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-accent-rgb);\n}\n.mat-mdc-radio-button.mat-accent .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-mdc-radio-button.mat-warn {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-warn-rgb);\n}\n.mat-mdc-radio-button.mat-warn .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-radio-button .mdc-radio {\n  padding: calc((40px - 20px) / 2);\n}\n.mat-mdc-radio-button .mdc-radio .mdc-radio__background::before {\n  top: calc(-1 * (40px - 20px) / 2);\n  left: calc(-1 * (40px - 20px) / 2);\n  width: 40px;\n  height: 40px;\n}\n.mat-mdc-radio-button .mdc-radio .mdc-radio__native-control {\n  top: calc((40px - 40px) / 2);\n  right: calc((40px - 40px) / 2);\n  left: calc((40px - 40px) / 2);\n  width: 40px;\n  height: 40px;\n}\n\n.mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-slider {\n  --mdc-slider-label-container-color: black;\n  --mdc-slider-label-label-text-color: white;\n  --mdc-slider-disabled-handle-color: #000;\n  --mdc-slider-disabled-active-track-color: #000;\n  --mdc-slider-disabled-inactive-track-color: #000;\n  --mdc-slider-with-tick-marks-disabled-container-color: #000;\n  --mat-mdc-slider-value-indicator-opacity: 0.6;\n}\n.mat-mdc-slider.mat-primary {\n  --mdc-slider-handle-color: var(--color-primary-rgb);\n  --mdc-slider-focus-handle-color: var(--color-primary-rgb);\n  --mdc-slider-hover-handle-color: var(--color-primary-rgb);\n  --mdc-slider-active-track-color: var(--color-primary-rgb);\n  --mdc-slider-inactive-track-color: var(--color-primary-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-primary-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-primary-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-primary-rgb), 0.2);\n}\n.mat-mdc-slider.mat-accent {\n  --mdc-slider-handle-color: var(--color-accent-rgb);\n  --mdc-slider-focus-handle-color: var(--color-accent-rgb);\n  --mdc-slider-hover-handle-color: var(--color-accent-rgb);\n  --mdc-slider-active-track-color: var(--color-accent-rgb);\n  --mdc-slider-inactive-track-color: var(--color-accent-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-accent-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-accent-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-accent-rgb), 0.2);\n}\n.mat-mdc-slider.mat-warn {\n  --mdc-slider-handle-color: var(--color-warn-rgb);\n  --mdc-slider-focus-handle-color: var(--color-warn-rgb);\n  --mdc-slider-hover-handle-color: var(--color-warn-rgb);\n  --mdc-slider-active-track-color: var(--color-warn-rgb);\n  --mdc-slider-inactive-track-color: var(--color-warn-rgb);\n  --mdc-slider-with-tick-marks-active-container-color: #000;\n  --mdc-slider-with-tick-marks-inactive-container-color: var(--color-warn-rgb);\n  --mat-mdc-slider-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-slider-hover-ripple-color: rgba(var(--color-warn-rgb), 0.05);\n  --mat-mdc-slider-focus-ripple-color: rgba(var(--color-warn-rgb), 0.2);\n}\n\n.mat-mdc-slider {\n  --mdc-slider-label-label-text-font: var(--font);\n  --mdc-slider-label-label-text-size: 14px;\n  --mdc-slider-label-label-text-line-height: 24px;\n  --mdc-slider-label-label-text-tracking: -0.006em;\n  --mdc-slider-label-label-text-weight: 500;\n}\n\n.mdc-menu-surface {\n  box-shadow: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);\n  background-color: var(--mdc-theme-surface, #fff);\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item__primary-text {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-item__secondary-text {\n  color: var(--mdc-theme-text-secondary-on-background, rgba(0, 0, 0, 0.54));\n}\n\n.mdc-list-item__overline-text {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  background-color: transparent;\n}\n\n.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-text-icon-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item__end {\n  color: var(--mdc-theme-text-hint-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mdc-list-item--disabled .mdc-list-item__start,\n.mdc-list-item--disabled .mdc-list-item__content,\n.mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 0.38;\n}\n\n.mdc-list-item--disabled .mdc-list-item__primary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__secondary-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled .mdc-list-item__overline-text {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-icon .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n.mdc-list-item--disabled.mdc-list-item--with-trailing-meta .mdc-list-item__end {\n  color: var(--mdc-theme-on-surface, #000);\n}\n\n.mdc-list-item--selected .mdc-list-item__primary-text,\n.mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n.mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--mdc-theme-primary, var(--color-primary-rgb));\n}\n\n.mdc-deprecated-list-group__subheader {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mdc-list-divider::after {\n  border-bottom-color: white;\n}\n\n.mdc-list-divider {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-menu-item[disabled],\n.mat-mdc-menu-item[disabled] .mat-mdc-menu-submenu-icon,\n.mat-mdc-menu-item[disabled] .mat-icon-no-color {\n  color: var(--mdc-theme-text-disabled-on-background, rgba(0, 0, 0, 0.38));\n}\n\n.mat-mdc-menu-item .mat-icon-no-color,\n.mat-mdc-menu-submenu-icon {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n\n.mat-mdc-menu-item:hover:not([disabled]),\n.mat-mdc-menu-item.cdk-program-focused:not([disabled]),\n.mat-mdc-menu-item.cdk-keyboard-focused:not([disabled]),\n.mat-mdc-menu-item-highlighted:not([disabled]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n.mat-mdc-menu-content {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle1-font-size, 16px);\n  line-height: var(--mdc-typography-subtitle1-line-height, 28px);\n  font-weight: var(--mdc-typography-subtitle1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-subtitle1-letter-spacing, -0.011em);\n  text-decoration: var(--mdc-typography-subtitle1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle1-text-transform, none);\n  /* @alternate */\n  line-height: 24px;\n}\n.mat-mdc-menu-content,\n.mat-mdc-menu-content .mat-mdc-menu-item .mdc-list-item__primary-text {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body1-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body1-font-size, 15px);\n  line-height: var(--mdc-typography-body1-line-height, 24px);\n  font-weight: var(--mdc-typography-body1-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body1-letter-spacing, -0.009em);\n  text-decoration: var(--mdc-typography-body1-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body1-text-transform, none);\n}\n\n.mat-mdc-list-base {\n  --mdc-list-list-item-label-text-color: black;\n  --mdc-list-list-item-supporting-text-color: rgba(0, 0, 0, 0.54);\n  --mdc-list-list-item-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-supporting-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-selected-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-disabled-label-text-color: black;\n  --mdc-list-list-item-disabled-leading-icon-color: black;\n  --mdc-list-list-item-disabled-trailing-icon-color: black;\n  --mdc-list-list-item-hover-label-text-color: black;\n  --mdc-list-list-item-hover-leading-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-hover-trailing-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-list-list-item-focus-label-text-color: black;\n  --mdc-list-list-item-hover-state-layer-color: black;\n  --mdc-list-list-item-hover-state-layer-opacity: 0.04;\n  --mdc-list-list-item-focus-state-layer-color: black;\n  --mdc-list-list-item-focus-state-layer-opacity: 0.12;\n}\n\n.mat-mdc-list-option .mdc-list-item__start, .mat-mdc-list-option .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-list-option .mdc-list-item__start, .mat-mdc-list-option .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-icon-color: var(--color-primary-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-primary-rgb);\n}\n.mat-mdc-list-option .mdc-list-item__start .mdc-radio--disabled + label, .mat-mdc-list-option .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-list-option.mat-accent .mdc-list-item__start, .mat-mdc-list-option.mat-accent .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-list-option.mat-accent .mdc-list-item__start, .mat-mdc-list-option.mat-accent .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-icon-color: var(--color-accent-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-accent-rgb);\n}\n.mat-mdc-list-option.mat-accent .mdc-list-item__start .mdc-radio--disabled + label, .mat-mdc-list-option.mat-accent .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-list-option.mat-warn .mdc-list-item__start, .mat-mdc-list-option.mat-warn .mdc-list-item__end {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-list-option.mat-warn .mdc-list-item__start, .mat-mdc-list-option.mat-warn .mdc-list-item__end {\n  --mdc-radio-disabled-selected-icon-color: #000;\n  --mdc-radio-disabled-unselected-icon-color: #000;\n  --mdc-radio-unselected-focus-icon-color: #212121;\n  --mdc-radio-unselected-hover-icon-color: #212121;\n  --mdc-radio-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-radio-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-icon-color: var(--color-warn-rgb);\n  --mdc-radio-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mat-mdc-radio-ripple-color: #000;\n  --mat-mdc-radio-checked-ripple-color: var(--color-warn-rgb);\n}\n.mat-mdc-list-option.mat-warn .mdc-list-item__start .mdc-radio--disabled + label, .mat-mdc-list-option.mat-warn .mdc-list-item__end .mdc-radio--disabled + label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected .mdc-list-item__primary-text,\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated .mdc-list-item__primary-text {\n  color: var(--color-primary-rgb);\n}\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--selected.mdc-list-item--with-leading-icon .mdc-list-item__start,\n.mat-mdc-list-base.mat-mdc-list-base .mdc-list-item--activated.mdc-list-item--with-leading-icon .mdc-list-item__start {\n  color: var(--color-primary-rgb);\n}\n\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__start,\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__content,\n.mat-mdc-list-base .mdc-list-item--disabled .mdc-list-item__end {\n  opacity: 1;\n}\n\n.mat-mdc-list-base {\n  --mdc-list-list-item-one-line-container-height: 48px;\n  --mdc-list-list-item-two-line-container-height: 64px;\n  --mdc-list-list-item-three-line-container-height: 88px;\n}\n\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line, .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line, .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line {\n  height: 56px;\n}\n.mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines, .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines, .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines {\n  height: 72px;\n}\n\n.mat-mdc-list-base {\n  --mdc-list-list-item-label-text-font: var(--font);\n  --mdc-list-list-item-label-text-line-height: 24px;\n  --mdc-list-list-item-label-text-size: 15px;\n  --mdc-list-list-item-label-text-tracking: -0.009em;\n  --mdc-list-list-item-label-text-weight: 400;\n  --mdc-list-list-item-supporting-text-font: var(--font);\n  --mdc-list-list-item-supporting-text-line-height: 20px;\n  --mdc-list-list-item-supporting-text-size: 14px;\n  --mdc-list-list-item-supporting-text-tracking: -0.006em;\n  --mdc-list-list-item-supporting-text-weight: 400;\n  --mdc-list-list-item-trailing-supporting-text-font: var(--font);\n  --mdc-list-list-item-trailing-supporting-text-line-height: 20px;\n  --mdc-list-list-item-trailing-supporting-text-size: 12px;\n  --mdc-list-list-item-trailing-supporting-text-tracking: 0;\n  --mdc-list-list-item-trailing-supporting-text-weight: 400;\n}\n\n.mdc-list-group__subheader {\n  font: 400 16px / 28px var(--font);\n  letter-spacing: -0.011em;\n}\n\n.mat-mdc-paginator {\n  background: white;\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mat-mdc-paginator-icon {\n  fill: rgba(0, 0, 0, 0.54);\n}\n\n.mat-mdc-paginator-decrement,\n.mat-mdc-paginator-increment {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n  border-right: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-mdc-paginator-first,\n.mat-mdc-paginator-last {\n  border-top: 2px solid rgba(0, 0, 0, 0.54);\n}\n\n.mat-mdc-icon-button[disabled] .mat-mdc-paginator-decrement,\n.mat-mdc-icon-button[disabled] .mat-mdc-paginator-increment,\n.mat-mdc-icon-button[disabled] .mat-mdc-paginator-first,\n.mat-mdc-icon-button[disabled] .mat-mdc-paginator-last {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.mat-mdc-icon-button[disabled] .mat-mdc-paginator-icon {\n  fill: rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-paginator .mat-mdc-form-field-infix {\n  min-height: 40px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 20px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n  display: none;\n}\n\n.mat-mdc-paginator-container {\n  min-height: 56px;\n}\n\n.mat-mdc-paginator {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-caption-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-caption-font-size, 12px);\n  line-height: var(--mdc-typography-caption-line-height, 20px);\n  font-weight: var(--mdc-typography-caption-font-weight, 400);\n  letter-spacing: var(--mdc-typography-caption-letter-spacing, 0);\n  text-decoration: var(--mdc-typography-caption-text-decoration, inherit);\n  text-transform: var(--mdc-typography-caption-text-transform, none);\n}\n\n.mat-mdc-paginator .mat-mdc-select-value {\n  font-size: 12px;\n}\n\n.mat-mdc-tab, .mat-mdc-tab-link {\n  background-color: transparent;\n}\n.mat-mdc-tab .mdc-tab__text-label, .mat-mdc-tab-link .mdc-tab__text-label {\n  color: rgba(0, 0, 0, 0.6);\n}\n.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,\n.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element, .mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,\n.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-primary-rgb);\n}\n.mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-primary-rgb));\n}\n.mdc-tab__ripple::before,\n.mat-mdc-tab .mat-ripple-element,\n.mat-mdc-tab-header-pagination .mat-ripple-element,\n.mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-primary-rgb);\n}\n\n.mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-accent-rgb);\n}\n.mat-mdc-tab-group.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-group.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-accent-rgb));\n}\n.mat-mdc-tab-group.mat-accent .mdc-tab__ripple::before,\n.mat-mdc-tab-group.mat-accent .mat-mdc-tab .mat-ripple-element,\n.mat-mdc-tab-group.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,\n.mat-mdc-tab-group.mat-accent .mat-mdc-tab-link .mat-ripple-element, .mat-mdc-tab-nav-bar.mat-accent .mdc-tab__ripple::before,\n.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab .mat-ripple-element,\n.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-header-pagination .mat-ripple-element,\n.mat-mdc-tab-nav-bar.mat-accent .mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-accent-rgb);\n}\n.mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label, .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled).mdc-tab--active .mdc-tab__text-label {\n  color: var(--color-warn-rgb);\n}\n.mat-mdc-tab-group.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-group.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline, .mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link:not(.mat-mdc-tab-disabled) .mdc-tab-indicator__content--underline {\n  border-color: var(--mdc-tab-indicator-active-indicator-color, var(--color-warn-rgb));\n}\n.mat-mdc-tab-group.mat-warn .mdc-tab__ripple::before,\n.mat-mdc-tab-group.mat-warn .mat-mdc-tab .mat-ripple-element,\n.mat-mdc-tab-group.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,\n.mat-mdc-tab-group.mat-warn .mat-mdc-tab-link .mat-ripple-element, .mat-mdc-tab-nav-bar.mat-warn .mdc-tab__ripple::before,\n.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab .mat-ripple-element,\n.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-header-pagination .mat-ripple-element,\n.mat-mdc-tab-nav-bar.mat-warn .mat-mdc-tab-link .mat-ripple-element {\n  background-color: var(--color-warn-rgb);\n}\n\n.mat-mdc-tab-group.mat-background-primary, .mat-mdc-tab-nav-bar.mat-background-primary {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-primary-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-accent, .mat-mdc-tab-nav-bar.mat-background-accent {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-accent-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n.mat-mdc-tab-group.mat-background-warn, .mat-mdc-tab-nav-bar.mat-background-warn {\n  --mat-mdc-tab-header-with-background-background-color: var(--color-warn-rgb);\n  --mat-mdc-tab-header-with-background-foreground-color: #000;\n}\n\n.mat-mdc-tab-header-pagination-chevron {\n  border-color: var(--mdc-theme-on-surface, #000);\n}\n\n.mat-mdc-tab-header .mdc-tab {\n  height: 48px;\n}\n\n.mdc-tab {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 14px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-checkbox .mdc-form-field {\n  color: var(--mdc-theme-text-primary-on-background, rgba(0, 0, 0, 0.87));\n}\n.mat-mdc-checkbox .mat-ripple-element {\n  background-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-checkbox .mdc-checkbox__ripple {\n  background: #000;\n}\n.mat-mdc-checkbox.mat-primary {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-primary-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-checkbox.mat-primary .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-primary-rgb);\n  opacity: 0.1;\n}\n.mat-mdc-checkbox.mat-primary .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-primary-rgb);\n}\n.mat-mdc-checkbox.mat-accent {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-accent-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-checkbox.mat-accent .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-accent-rgb);\n  opacity: 0.1;\n}\n.mat-mdc-checkbox.mat-accent .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-accent-rgb);\n}\n.mat-mdc-checkbox.mat-warn {\n  --mdc-checkbox-selected-checkmark-color: #000;\n  --mdc-checkbox-selected-focus-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-hover-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-selected-pressed-icon-color: var(--color-warn-rgb);\n  --mdc-checkbox-unselected-focus-icon-color: #212121;\n  --mdc-checkbox-unselected-hover-icon-color: #212121;\n  --mdc-checkbox-disabled-selected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-disabled-unselected-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-checkbox-unselected-icon-color: rgba(0, 0, 0, 0.54);\n  --mdc-checkbox-unselected-pressed-icon-color: rgba(0, 0, 0, 0.54);\n}\n.mat-mdc-checkbox.mat-warn .mdc-checkbox--selected ~ .mat-mdc-checkbox-ripple .mat-ripple-element {\n  background-color: var(--color-warn-rgb);\n  opacity: 0.1;\n}\n.mat-mdc-checkbox.mat-warn .mdc-checkbox--selected ~ .mdc-checkbox__ripple {\n  background: var(--color-warn-rgb);\n}\n\n.mat-mdc-checkbox-disabled label {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-checkbox .mdc-checkbox {\n  padding: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 40px) - 40px) / 2);\n}\n.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background {\n  top: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 40px) - 18px) / 2);\n}\n.mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control {\n  top: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  right: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  left: calc((40px - var(--mdc-checkbox-touch-target-size, 40px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 40px);\n  height: var(--mdc-checkbox-touch-target-size, 40px);\n}\n\n@media all and (-ms-high-contrast: none) {\n  .mdc-checkbox .mdc-checkbox__focus-ring {\n    display: none;\n  }\n}\n\n.mdc-form-field {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n.mat-mdc-button.mat-unthemed {\n  --mdc-text-button-label-text-color: #000;\n}\n.mat-mdc-button.mat-primary {\n  --mdc-text-button-label-text-color: var(--color-primary-rgb);\n}\n.mat-mdc-button.mat-accent {\n  --mdc-text-button-label-text-color: var(--color-accent-rgb);\n}\n.mat-mdc-button.mat-warn {\n  --mdc-text-button-label-text-color: var(--color-warn-rgb);\n}\n.mat-mdc-button[disabled][disabled] {\n  --mdc-text-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-text-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-unelevated-button.mat-unthemed {\n  --mdc-filled-button-container-color: #fff;\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-primary {\n  --mdc-filled-button-container-color: var(--color-primary-rgb);\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-accent {\n  --mdc-filled-button-container-color: var(--color-accent-rgb);\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button.mat-warn {\n  --mdc-filled-button-container-color: var(--color-warn-rgb);\n  --mdc-filled-button-label-text-color: #000;\n}\n.mat-mdc-unelevated-button[disabled][disabled] {\n  --mdc-filled-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-filled-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-filled-button-label-text-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-raised-button.mat-unthemed {\n  --mdc-protected-button-container-color: #fff;\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-primary {\n  --mdc-protected-button-container-color: var(--color-primary-rgb);\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-accent {\n  --mdc-protected-button-container-color: var(--color-accent-rgb);\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button.mat-warn {\n  --mdc-protected-button-container-color: var(--color-warn-rgb);\n  --mdc-protected-button-label-text-color: #000;\n}\n.mat-mdc-raised-button[disabled][disabled] {\n  --mdc-protected-button-disabled-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-protected-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-protected-button-container-elevation: 0;\n}\n\n.mat-mdc-outlined-button {\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n}\n.mat-mdc-outlined-button.mat-unthemed {\n  --mdc-outlined-button-label-text-color: #000;\n}\n.mat-mdc-outlined-button.mat-primary {\n  --mdc-outlined-button-label-text-color: var(--color-primary-rgb);\n}\n.mat-mdc-outlined-button.mat-accent {\n  --mdc-outlined-button-label-text-color: var(--color-accent-rgb);\n}\n.mat-mdc-outlined-button.mat-warn {\n  --mdc-outlined-button-label-text-color: var(--color-warn-rgb);\n}\n.mat-mdc-outlined-button[disabled][disabled] {\n  --mdc-outlined-button-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-disabled-label-text-color: rgba(0, 0, 0, 0.38);\n  --mdc-outlined-button-outline-color: rgba(0, 0, 0, 0.12);\n  --mdc-outlined-button-disabled-outline-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-mdc-button, .mat-mdc-outlined-button {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-button:hover .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.04;\n}\n.mat-mdc-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-button:active .mat-mdc-button-persistent-ripple::before, .mat-mdc-outlined-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-button.mat-primary, .mat-mdc-outlined-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-primary-rgb), 0.1);\n}\n.mat-mdc-button.mat-accent, .mat-mdc-outlined-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-accent-rgb), 0.1);\n}\n.mat-mdc-button.mat-warn, .mat-mdc-outlined-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-warn-rgb), 0.1);\n}\n\n.mat-mdc-raised-button, .mat-mdc-unelevated-button {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button:hover .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.04;\n}\n.mat-mdc-raised-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-raised-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-raised-button:active .mat-mdc-button-persistent-ripple::before, .mat-mdc-unelevated-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-raised-button.mat-primary, .mat-mdc-unelevated-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-accent, .mat-mdc-unelevated-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-raised-button.mat-warn, .mat-mdc-unelevated-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n\n.mat-mdc-button.mat-mdc-button-base,\n.mat-mdc-raised-button.mat-mdc-button-base,\n.mat-mdc-unelevated-button.mat-mdc-button-base,\n.mat-mdc-outlined-button.mat-mdc-button-base {\n  height: 36px;\n}\n\n.mdc-button {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 14px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n\n.mat-mdc-icon-button {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-icon-button:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.04;\n}\n.mat-mdc-icon-button.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-icon-button.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-icon-button:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-icon-button.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: var(--color-primary-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-primary-rgb), 0.1);\n}\n.mat-mdc-icon-button.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: var(--color-accent-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-accent-rgb), 0.1);\n}\n.mat-mdc-icon-button.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: var(--color-warn-rgb);\n  --mat-mdc-button-ripple-color: rgba(var(--color-warn-rgb), 0.1);\n}\n.mat-mdc-icon-button.mat-primary {\n  --mdc-icon-button-icon-color: var(--color-primary-rgb);\n}\n.mat-mdc-icon-button.mat-accent {\n  --mdc-icon-button-icon-color: var(--color-accent-rgb);\n}\n.mat-mdc-icon-button.mat-warn {\n  --mdc-icon-button-icon-color: var(--color-warn-rgb);\n}\n.mat-mdc-icon-button[disabled][disabled] {\n  --mdc-icon-button-icon-color: rgba(0, 0, 0, 0.38);\n  --mdc-icon-button-disabled-icon-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-mdc-icon-button.mat-mdc-button-base {\n  width: 48px;\n  height: 48px;\n  padding: 12px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__focus-ring {\n  max-height: 48px;\n  max-width: 48px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__ripple {\n  width: 40px;\n  height: 40px;\n  margin-top: 4px;\n  margin-bottom: 4px;\n  margin-right: 4px;\n  margin-left: 4px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__touch {\n  position: absolute;\n  top: 50%;\n  height: 48px;\n  /* @noflip */ /*rtl:ignore*/\n  left: 50%;\n  width: 48px;\n  transform: translate(-50%, -50%);\n}\n\n.mat-mdc-fab, .mat-mdc-mini-fab {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab:hover .mat-mdc-button-persistent-ripple::before, .mat-mdc-mini-fab:hover .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.04;\n}\n.mat-mdc-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-mini-fab.cdk-program-focused .mat-mdc-button-persistent-ripple::before, .mat-mdc-mini-fab.cdk-keyboard-focused .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-fab:active .mat-mdc-button-persistent-ripple::before, .mat-mdc-mini-fab:active .mat-mdc-button-persistent-ripple::before {\n  opacity: 0.12;\n}\n.mat-mdc-fab.mat-primary, .mat-mdc-mini-fab.mat-primary {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-accent, .mat-mdc-mini-fab.mat-accent {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-warn, .mat-mdc-mini-fab.mat-warn {\n  --mat-mdc-button-persistent-ripple-color: #000;\n  --mat-mdc-button-ripple-color: rgba(0, 0, 0, 0.1);\n}\n.mat-mdc-fab.mat-unthemed, .mat-mdc-mini-fab.mat-unthemed {\n  --mdc-fab-container-color: #fff;\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-primary, .mat-mdc-mini-fab.mat-primary {\n  --mdc-fab-container-color: var(--color-primary-rgb);\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-accent, .mat-mdc-mini-fab.mat-accent {\n  --mdc-fab-container-color: var(--color-accent-rgb);\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab.mat-warn, .mat-mdc-mini-fab.mat-warn {\n  --mdc-fab-container-color: var(--color-warn-rgb);\n  --mdc-fab-icon-color: #000;\n  --mat-mdc-fab-color: #000;\n}\n.mat-mdc-fab[disabled][disabled], .mat-mdc-mini-fab[disabled][disabled] {\n  --mdc-fab-container-color: rgba(0, 0, 0, 0.12);\n  --mdc-fab-icon-color: rgba(0, 0, 0, 0.38);\n  --mat-mdc-fab-color: rgba(0, 0, 0, 0.38);\n}\n\n.mdc-fab--extended {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-button-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-button-font-size, 14px);\n  line-height: var(--mdc-typography-button-line-height, 14px);\n  font-weight: var(--mdc-typography-button-font-weight, 500);\n  letter-spacing: var(--mdc-typography-button-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-button-text-decoration, none);\n  text-transform: var(--mdc-typography-button-text-transform, none);\n}\n.mat-mdc-snack-bar-container {\n  --mat-mdc-snack-bar-button-color: var(--color-accent-rgb);\n  --mdc-snackbar-container-color: #333333;\n  --mdc-snackbar-supporting-text-color: rgba(255, 255, 255, 0.87);\n}\n\n.mat-mdc-snack-bar-container {\n  --mdc-snackbar-supporting-text-font: var(--font);\n  --mdc-snackbar-supporting-text-line-height: 20px;\n  --mdc-snackbar-supporting-text-size: 14px;\n  --mdc-snackbar-supporting-text-weight: 400;\n}\n\n.mdc-data-table {\n  background-color: var(--mdc-theme-surface, #fff);\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.mdc-data-table__row {\n  background-color: inherit;\n}\n\n.mdc-data-table__header-cell {\n  background-color: var(--mdc-theme-surface, #fff);\n}\n\n.mdc-data-table__row--selected {\n  background-color: rgba(var(--color-primary-rgb), 0.04);\n}\n\n.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__leading,\n.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__notch,\n.mdc-data-table__pagination-rows-per-page-select--outlined:not(.mdc-select--disabled) .mdc-notched-outline__trailing {\n  border-color: rgba(0, 0, 0, 0.12);\n}\n.mdc-data-table__cell,\n.mdc-data-table__header-cell {\n  border-bottom-color: rgba(0, 0, 0, 0.12);\n}\n\n.mdc-data-table__pagination {\n  border-top-color: rgba(0, 0, 0, 0.12);\n}\n\n.mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n\n.mdc-data-table__header-cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n.mdc-data-table__pagination-total,\n.mdc-data-table__pagination-rows-per-page-label,\n.mdc-data-table__cell {\n  color: rgba(0, 0, 0, 0.87);\n}\n\n[dir=rtl] .mdc-data-table__pagination-button .mdc-button__icon, .mdc-data-table__pagination-button .mdc-button__icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.mat-mdc-table {\n  background: white;\n}\n\n.mat-mdc-table .mdc-data-table__row {\n  height: 52px;\n}\n.mat-mdc-table .mdc-data-table__pagination {\n  min-height: 52px;\n}\n.mat-mdc-table .mdc-data-table__header-row {\n  height: 56px;\n}\n\n.mdc-data-table__content {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__cell {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-body2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-body2-font-size, 14px);\n  line-height: var(--mdc-typography-body2-line-height, 20px);\n  font-weight: var(--mdc-typography-body2-font-weight, 400);\n  letter-spacing: var(--mdc-typography-body2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-body2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-body2-text-transform, none);\n}\n\n.mdc-data-table__header-cell {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  font-family: var(--mdc-typography-subtitle2-font-family, var(--mdc-typography-font-family, var(--font)));\n  font-size: var(--mdc-typography-subtitle2-font-size, 14px);\n  line-height: var(--mdc-typography-subtitle2-line-height, 24px);\n  font-weight: var(--mdc-typography-subtitle2-font-weight, 500);\n  letter-spacing: var(--mdc-typography-subtitle2-letter-spacing, -0.006em);\n  text-decoration: var(--mdc-typography-subtitle2-text-decoration, inherit);\n  text-transform: var(--mdc-typography-subtitle2-text-transform, none);\n}\n\n[dir=rtl] .mdc-data-table__pagination-button .mdc-button__icon, .mdc-data-table__pagination-button .mdc-button__icon[dir=rtl] {\n  /*rtl:begin:ignore*/\n  /*rtl:end:ignore*/\n}\n\n.mat-mdc-progress-spinner {\n  --mdc-circular-progress-active-indicator-color: var(--color-primary-rgb);\n}\n.mat-mdc-progress-spinner.mat-accent {\n  --mdc-circular-progress-active-indicator-color: var(--color-accent-rgb);\n}\n.mat-mdc-progress-spinner.mat-warn {\n  --mdc-circular-progress-active-indicator-color: var(--color-warn-rgb);\n}\n\n.mat-badge {\n  position: relative;\n}\n\n.mat-badge.mat-badge {\n  overflow: visible;\n}\n\n.mat-badge-hidden .mat-badge-content {\n  display: none;\n}\n\n.mat-badge-content {\n  position: absolute;\n  text-align: center;\n  display: inline-block;\n  border-radius: 50%;\n  transition: transform 200ms ease-in-out;\n  transform: scale(0.6);\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  pointer-events: none;\n}\n\n.ng-animate-disabled .mat-badge-content,\n.mat-badge-content._mat-animation-noopable {\n  transition: none;\n}\n\n.mat-badge-content.mat-badge-active {\n  transform: none;\n}\n\n.mat-badge-small .mat-badge-content {\n  width: 16px;\n  height: 16px;\n  line-height: 16px;\n}\n.mat-badge-small.mat-badge-above .mat-badge-content {\n  top: -8px;\n}\n.mat-badge-small.mat-badge-below .mat-badge-content {\n  bottom: -8px;\n}\n.mat-badge-small.mat-badge-before .mat-badge-content {\n  left: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -16px;\n}\n.mat-badge-small.mat-badge-after .mat-badge-content {\n  right: -16px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -16px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -8px;\n}\n.mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -8px;\n}\n[dir=rtl] .mat-badge-small.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -8px;\n}\n\n.mat-badge-medium .mat-badge-content {\n  width: 22px;\n  height: 22px;\n  line-height: 22px;\n}\n.mat-badge-medium.mat-badge-above .mat-badge-content {\n  top: -11px;\n}\n.mat-badge-medium.mat-badge-below .mat-badge-content {\n  bottom: -11px;\n}\n.mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -22px;\n}\n.mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: -22px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -22px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -11px;\n}\n.mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -11px;\n}\n[dir=rtl] .mat-badge-medium.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -11px;\n}\n\n.mat-badge-large .mat-badge-content {\n  width: 28px;\n  height: 28px;\n  line-height: 28px;\n}\n.mat-badge-large.mat-badge-above .mat-badge-content {\n  top: -14px;\n}\n.mat-badge-large.mat-badge-below .mat-badge-content {\n  bottom: -14px;\n}\n.mat-badge-large.mat-badge-before .mat-badge-content {\n  left: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -28px;\n}\n.mat-badge-large.mat-badge-after .mat-badge-content {\n  right: -28px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -28px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-before .mat-badge-content {\n  left: auto;\n  right: -14px;\n}\n.mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: -14px;\n}\n[dir=rtl] .mat-badge-large.mat-badge-overlap.mat-badge-after .mat-badge-content {\n  right: auto;\n  left: -14px;\n}\n\n.mat-badge-content {\n  color: var(--color-primary-contrast-rgb);\n  background: var(--color-primary-rgb);\n}\n.cdk-high-contrast-active .mat-badge-content {\n  outline: solid 1px;\n  border-radius: 0;\n}\n\n.mat-badge-accent .mat-badge-content {\n  background: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n\n.mat-badge-warn .mat-badge-content {\n  color: var(--color-warn-contrast-rgb);\n  background: var(--color-warn-rgb);\n}\n\n.mat-badge-disabled .mat-badge-content {\n  background: #b9b9b9;\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-badge-content {\n  font-weight: 600;\n  font-size: 12px;\n  font-family: var(--font);\n}\n\n.mat-badge-small .mat-badge-content {\n  font-size: 9px;\n}\n\n.mat-badge-large .mat-badge-content {\n  font-size: 24px;\n}\n\n.mat-bottom-sheet-container {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n  background: white;\n  color: black;\n}\n\n.mat-bottom-sheet-container {\n  font: 400 14px / 20px var(--font);\n  letter-spacing: -0.006em;\n}\n\n.mat-button-toggle-standalone:not([class*=mat-elevation-z]),\n.mat-button-toggle-group:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),\n.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]) {\n  box-shadow: none;\n}\n\n.mat-button-toggle {\n  color: rgba(0, 0, 0, 0.38);\n}\n.mat-button-toggle .mat-button-toggle-focus-overlay {\n  background-color: rgba(0, 0, 0, 0.12);\n}\n\n.mat-button-toggle-appearance-standard {\n  color: black;\n  background: white;\n}\n.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay {\n  background-color: black;\n}\n\n.mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: solid 1px #f5f3f6;\n}\n\n[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: solid 1px #f5f3f6;\n}\n\n.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle + .mat-button-toggle {\n  border-left: none;\n  border-right: none;\n  border-top: solid 1px #f5f3f6;\n}\n\n.mat-button-toggle-checked {\n  background-color: #e0e0e0;\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-button-toggle-checked.mat-button-toggle-appearance-standard {\n  color: black;\n}\n\n.mat-button-toggle-disabled {\n  color: rgba(0, 0, 0, 0.26);\n  background-color: #eeeeee;\n}\n.mat-button-toggle-disabled.mat-button-toggle-appearance-standard {\n  background: white;\n}\n.mat-button-toggle-disabled.mat-button-toggle-checked {\n  background-color: #bdbdbd;\n}\n\n.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n.mat-button-toggle-group-appearance-standard {\n  border: solid 1px #f5f3f6;\n}\n\n.mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 48px;\n}\n\n.mat-button-toggle {\n  font-family: var(--font);\n}\n\n.mat-calendar-arrow {\n  fill: rgba(0, 0, 0, 0.54);\n}\n\n.mat-datepicker-toggle,\n.mat-datepicker-content .mat-calendar-next-button,\n.mat-datepicker-content .mat-calendar-previous-button {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-table-header-divider::after {\n  background: rgba(82, 63, 105, 0.06);\n}\n\n.mat-calendar-table-header,\n.mat-calendar-body-label {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-calendar-body-cell-content,\n.mat-date-range-input-separator {\n  color: black;\n  border-color: transparent;\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-form-field-disabled .mat-date-range-input-separator {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-in-preview {\n  color: rgba(82, 63, 105, 0.12);\n}\n\n.mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  border-color: rgba(0, 0, 0, 0.18);\n}\n\n.mat-calendar-body-in-range::before {\n  background: var(--color-primary-rgb);\n}\n\n.mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n\n.mat-calendar-body-comparison-bridge-start::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-primary-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-comparison-bridge-end::before,\n[dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-primary-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n\n.mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n\n.mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n\n.mat-calendar-body-selected {\n  background-color: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n\n.mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n\n.mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-primary-contrast-rgb);\n}\n\n.cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-primary-rgb);\n}\n\n@media (hover: hover) {\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-primary-rgb);\n  }\n}\n.mat-datepicker-content {\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n  background-color: white;\n  color: black;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range::before {\n  background: var(--color-accent-rgb);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-accent-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-accent [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-accent-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-accent .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-selected {\n  background-color: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n.mat-datepicker-content.mat-accent .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-accent-contrast-rgb);\n}\n.mat-datepicker-content.mat-accent .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-accent .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-accent-rgb);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-accent .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-accent-rgb);\n  }\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range::before {\n  background: var(--color-warn-rgb);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range::before {\n  background: rgba(249, 171, 0, 0.2);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-start::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-end::before {\n  background: linear-gradient(to right, var(--color-warn-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-bridge-end::before,\n.mat-datepicker-content.mat-warn [dir=rtl] .mat-calendar-body-comparison-bridge-start::before {\n  background: linear-gradient(to left, var(--color-warn-rgb) 50%, rgba(249, 171, 0, 0.2) 50%);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n  background: #a8dab5;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n.mat-datepicker-content.mat-warn .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n  background: #46a35e;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-selected {\n  background-color: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-disabled > .mat-calendar-body-selected {\n  opacity: 0.2;\n}\n.mat-datepicker-content.mat-warn .mat-calendar-body-today.mat-calendar-body-selected {\n  box-shadow: inset 0 0 0 1px var(--color-warn-contrast-rgb);\n}\n.mat-datepicker-content.mat-warn .cdk-keyboard-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical),\n.mat-datepicker-content.mat-warn .cdk-program-focused .mat-calendar-body-active > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n  background-color: var(--color-warn-rgb);\n}\n@media (hover: hover) {\n  .mat-datepicker-content.mat-warn .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    background-color: var(--color-warn-rgb);\n  }\n}\n\n.mat-datepicker-content-touch {\n  box-shadow: 0px 11px 15px -7px rgba(0, 0, 0, 0.2), 0px 24px 38px 3px rgba(0, 0, 0, 0.14), 0px 9px 46px 8px rgba(0, 0, 0, 0.12);\n}\n\n.mat-datepicker-toggle-active {\n  color: var(--color-primary-rgb);\n}\n.mat-datepicker-toggle-active.mat-accent {\n  color: var(--color-accent-rgb);\n}\n.mat-datepicker-toggle-active.mat-warn {\n  color: var(--color-warn-rgb);\n}\n\n.mat-date-range-input-inner[disabled] {\n  color: rgba(0, 0, 0, 0.38);\n}\n\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__focus-ring {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__ripple {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring {\n  max-height: 40px;\n  max-width: 40px;\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__touch {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n  /* @noflip */ /*rtl:ignore*/\n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.mat-calendar-controls .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target {\n  display: none;\n}\n\n.mat-calendar {\n  font-family: var(--font);\n}\n\n.mat-calendar-body {\n  font-size: 13px;\n}\n\n.mat-calendar-body-label,\n.mat-calendar-period-button {\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-calendar-table-header th {\n  font-size: 11px;\n  font-weight: 400;\n}\n\n.mat-divider {\n  border-top-color: rgba(82, 63, 105, 0.06);\n}\n\n.mat-divider-vertical {\n  border-right-color: rgba(82, 63, 105, 0.06);\n}\n\n.mat-expansion-panel {\n  background: white;\n  color: black;\n}\n.mat-expansion-panel:not([class*=mat-elevation-z]) {\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n}\n\n.mat-action-row {\n  border-top-color: rgba(82, 63, 105, 0.06);\n}\n\n.mat-expansion-panel .mat-expansion-panel-header.cdk-keyboard-focused:not([aria-disabled=true]), .mat-expansion-panel .mat-expansion-panel-header.cdk-program-focused:not([aria-disabled=true]), .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header:hover:not([aria-disabled=true]) {\n  background: rgba(0, 0, 0, 0.04);\n}\n\n@media (hover: none) {\n  .mat-expansion-panel:not(.mat-expanded):not([aria-disabled=true]) .mat-expansion-panel-header:hover {\n    background: white;\n  }\n}\n.mat-expansion-panel-header-title {\n  color: black;\n}\n\n.mat-expansion-panel-header-description,\n.mat-expansion-indicator::after {\n  color: rgba(0, 0, 0, 0.54);\n}\n\n.mat-expansion-panel-header[aria-disabled=true] {\n  color: rgba(0, 0, 0, 0.26);\n}\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-title,\n.mat-expansion-panel-header[aria-disabled=true] .mat-expansion-panel-header-description {\n  color: inherit;\n}\n\n.mat-expansion-panel-header {\n  height: 48px;\n}\n.mat-expansion-panel-header.mat-expanded {\n  height: 64px;\n}\n\n.mat-expansion-panel-header {\n  font-family: var(--font);\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.mat-expansion-panel-content {\n  font: 400 14px / 20px var(--font);\n  letter-spacing: -0.006em;\n}\n\n.mat-grid-tile-header,\n.mat-grid-tile-footer {\n  font-size: 14px;\n}\n.mat-grid-tile-header .mat-line,\n.mat-grid-tile-footer .mat-line {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: block;\n  box-sizing: border-box;\n}\n.mat-grid-tile-header .mat-line:nth-child(n+2),\n.mat-grid-tile-footer .mat-line:nth-child(n+2) {\n  font-size: 12px;\n}\n\n.mat-icon.mat-primary {\n  color: var(--color-primary-rgb);\n}\n.mat-icon.mat-accent {\n  color: var(--color-accent-rgb);\n}\n.mat-icon.mat-warn {\n  color: var(--color-warn-rgb);\n}\n\n.mat-drawer-container {\n  background-color: #fafafa;\n  color: black;\n}\n\n.mat-drawer {\n  background-color: white;\n  color: black;\n}\n.mat-drawer.mat-drawer-push {\n  background-color: white;\n}\n.mat-drawer:not(.mat-drawer-side) {\n  box-shadow: 0px 8px 10px -5px rgba(0, 0, 0, 0.2), 0px 16px 24px 2px rgba(0, 0, 0, 0.14), 0px 6px 30px 5px rgba(0, 0, 0, 0.12);\n}\n\n.mat-drawer-side {\n  border-right: solid 1px rgba(82, 63, 105, 0.06);\n}\n.mat-drawer-side.mat-drawer-end {\n  border-left: solid 1px rgba(82, 63, 105, 0.06);\n  border-right: none;\n}\n\n[dir=rtl] .mat-drawer-side {\n  border-left: solid 1px rgba(82, 63, 105, 0.06);\n  border-right: none;\n}\n[dir=rtl] .mat-drawer-side.mat-drawer-end {\n  border-left: none;\n  border-right: solid 1px rgba(82, 63, 105, 0.06);\n}\n\n.mat-drawer-backdrop.mat-drawer-shown {\n  background-color: rgba(0, 0, 0, 0.6);\n}\n\n.mat-step-header.cdk-keyboard-focused, .mat-step-header.cdk-program-focused, .mat-step-header:hover:not([aria-disabled]), .mat-step-header:hover[aria-disabled=false] {\n  background-color: rgba(0, 0, 0, 0.04);\n}\n.mat-step-header:hover[aria-disabled=true] {\n  cursor: default;\n}\n@media (hover: none) {\n  .mat-step-header:hover {\n    background: none;\n  }\n}\n.mat-step-header .mat-step-label,\n.mat-step-header .mat-step-optional {\n  color: rgba(0, 0, 0, 0.54);\n}\n.mat-step-header .mat-step-icon {\n  background-color: rgba(0, 0, 0, 0.54);\n  color: var(--color-primary-contrast-rgb);\n}\n.mat-step-header .mat-step-icon-selected,\n.mat-step-header .mat-step-icon-state-done,\n.mat-step-header .mat-step-icon-state-edit {\n  background-color: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n.mat-step-header.mat-accent .mat-step-icon {\n  color: var(--color-accent-contrast-rgb);\n}\n.mat-step-header.mat-accent .mat-step-icon-selected,\n.mat-step-header.mat-accent .mat-step-icon-state-done,\n.mat-step-header.mat-accent .mat-step-icon-state-edit {\n  background-color: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.mat-step-header.mat-warn .mat-step-icon {\n  color: var(--color-warn-contrast-rgb);\n}\n.mat-step-header.mat-warn .mat-step-icon-selected,\n.mat-step-header.mat-warn .mat-step-icon-state-done,\n.mat-step-header.mat-warn .mat-step-icon-state-edit {\n  background-color: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.mat-step-header .mat-step-icon-state-error {\n  background-color: transparent;\n  color: var(--color-warn-rgb);\n}\n.mat-step-header .mat-step-label.mat-step-label-active {\n  color: black;\n}\n.mat-step-header .mat-step-label.mat-step-label-error {\n  color: var(--color-warn-rgb);\n}\n\n.mat-stepper-horizontal, .mat-stepper-vertical {\n  background-color: white;\n}\n\n.mat-stepper-vertical-line::before {\n  border-left-color: rgba(82, 63, 105, 0.06);\n}\n\n.mat-horizontal-stepper-header::before,\n.mat-horizontal-stepper-header::after,\n.mat-stepper-horizontal-line {\n  border-top-color: rgba(82, 63, 105, 0.06);\n}\n\n.mat-horizontal-stepper-header {\n  height: 72px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.mat-vertical-stepper-header {\n  padding: 24px 24px;\n}\n\n.mat-stepper-vertical-line::before {\n  top: -16px;\n  bottom: -16px;\n}\n\n.mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 36px;\n}\n\n.mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 36px;\n}\n\n.mat-stepper-vertical, .mat-stepper-horizontal {\n  font-family: var(--font);\n}\n\n.mat-step-label {\n  font-size: 14px;\n  font-weight: 400;\n}\n\n.mat-step-sub-label-error {\n  font-weight: normal;\n}\n\n.mat-step-label-error {\n  font-size: 15px;\n}\n\n.mat-step-label-selected {\n  font-size: 15px;\n  font-weight: 400;\n}\n\n.mat-sort-header-arrow {\n  color: #757575;\n}\n\n.mat-toolbar {\n  background: #ebebee;\n  color: black;\n}\n.mat-toolbar.mat-primary {\n  background: var(--color-primary-rgb);\n  color: var(--color-primary-contrast-rgb);\n}\n.mat-toolbar.mat-accent {\n  background: var(--color-accent-rgb);\n  color: var(--color-accent-contrast-rgb);\n}\n.mat-toolbar.mat-warn {\n  background: var(--color-warn-rgb);\n  color: var(--color-warn-contrast-rgb);\n}\n.mat-toolbar .mat-form-field-underline,\n.mat-toolbar .mat-form-field-ripple,\n.mat-toolbar .mat-focused .mat-form-field-ripple {\n  background-color: currentColor;\n}\n.mat-toolbar .mat-form-field-label,\n.mat-toolbar .mat-focused .mat-form-field-label,\n.mat-toolbar .mat-select-value,\n.mat-toolbar .mat-select-arrow,\n.mat-toolbar .mat-form-field.mat-focused .mat-select-arrow {\n  color: inherit;\n}\n.mat-toolbar .mat-input-element {\n  caret-color: currentColor;\n}\n\n.mat-toolbar-multiple-rows {\n  min-height: 64px;\n}\n\n.mat-toolbar-row, .mat-toolbar-single-row {\n  height: 64px;\n}\n\n@media (max-width: 599px) {\n  .mat-toolbar-multiple-rows {\n    min-height: 56px;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 56px;\n  }\n}\n.mat-toolbar,\n.mat-toolbar h1,\n.mat-toolbar h2,\n.mat-toolbar h3,\n.mat-toolbar h4,\n.mat-toolbar h5,\n.mat-toolbar h6 {\n  font: 500 18px / 26px var(--font);\n  letter-spacing: -0.014em;\n  margin: 0;\n}\n\n.mat-tree {\n  background: white;\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  color: black;\n}\n\n.mat-tree-node {\n  min-height: 48px;\n}\n\n.mat-tree {\n  font-family: var(--font);\n}\n\n.mat-tree-node,\n.mat-nested-tree-node {\n  font-weight: 400;\n  font-size: 14px;\n}\n\n.horizontal-layout {\n  --navigation-height: 0.00001px;\n  --toolbar-width: 100%;\n}\n@screen lg {\n  .horizontal-layout {\n    --toolbar-width: calc(100% - var(--sidenav-width));\n  }\n  .horizontal-layout.sidenav-collapsed {\n    --toolbar-width: calc(100% - var(--sidenav-collapsed-width));\n  }\n}\n.horizontal-layout .sidenav-container {\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\n  flex: 1;\n}\n.horizontal-layout.has-fixed-footer.scroll-disabled .content {\n  height: calc(100% - var(--toolbar-height) - var(--footer-height));\n}\n\n@screen lg {\n  body:not([dir=rtl]) .horizontal-layout.sidenav-collapsed .sidenav-content {\n    margin-left: var(--sidenav-collapsed-width) !important;\n    margin-right: 0 !important;\n  }\n  body:not([dir=rtl]) .horizontal-layout:not(.sidenav-collapsed) .sidenav-content {\n    margin-left: var(--sidenav-width) !important;\n    margin-right: 0 !important;\n  }\n  [dir=rtl] .horizontal-layout.sidenav-collapsed .sidenav-content {\n    margin-right: var(--sidenav-collapsed-width) !important;\n    margin-left: 0 !important;\n  }\n  [dir=rtl] .horizontal-layout:not(.sidenav-collapsed) .sidenav-content {\n    margin-right: var(--sidenav-width) !important;\n    margin-left: 0 !important;\n  }\n}\n/** SCROLLBARS */\nbody.is-blink ::-webkit-scrollbar {\n  background-color: rgba(0, 0, 0, 0);\n  height: var(--blink-scrollbar-width);\n  width: var(--blink-scrollbar-width);\n}\nbody.is-blink ::-webkit-scrollbar:hover {\n  background-color: rgba(0, 0, 0, 0.12);\n}\nbody.is-blink ::-webkit-scrollbar-thumb {\n  border: 2px solid transparent;\n  border-radius: var(--blink-scrollbar-width);\n  box-shadow: inset 0 0 0 12px rgba(0, 0, 0, 0.37);\n}\nbody.is-blink ::-webkit-scrollbar-thumb:active {\n  border-radius: var(--blink-scrollbar-width);\n  box-shadow: inset 0 0 0 12px rgba(0, 0, 0, 0.54);\n}\n\n/** SCROLLBLOCK */\n.vex-scrollblock {\n  position: fixed;\n  width: 100%;\n}\n\n/** GLOSSY DIALOG */\n.vex-dialog-glossy .mat-mdc-dialog-container {\n  @apply rounded;\n}\n\n.is-blink .vex-dialog-glossy .mat-mdc-dialog-container .mdc-dialog__surface {\n  backdrop-filter: saturate(180%) blur(20px);\n  @apply bg-foreground/60;\n}\n\n.vertical-layout {\n  --toolbar-width: 100%;\n}\n.vertical-layout vex-secondary-toolbar .h-14 {\n  display: none;\n}\n.vertical-layout vex-secondary-toolbar .fixed {\n  background: none;\n  border-top: none;\n  box-shadow: none;\n  margin-bottom: calc(var(--padding-16) * -1);\n  padding-top: var(--padding-12);\n  position: relative;\n  top: 0;\n}\n.vertical-layout.content-container > .sidenav-container > .sidenav-content > .content {\n  margin-left: auto;\n  margin-right: auto;\n}\n.vertical-layout.has-fixed-footer.scroll-disabled .content {\n  height: calc(100% - var(--toolbar-height) - var(--footer-height));\n}\n\n@media print {\n  html, body {\n    height: auto !important;\n    overflow: initial !important;\n  }\n  .vex-toolbar, .sidenav {\n    display: none !important;\n  }\n  .content {\n    margin-top: 0 !important;\n  }\n  .mat-drawer-container {\n    overflow: visible !important;\n  }\n  .mat-drawer-side {\n    border-right: none !important;\n  }\n  .sidenav-content {\n    margin-left: 0 !important;\n    @apply bg-foreground;\n  }\n  .vex-footer {\n    display: none !important;\n  }\n  .config-panel-toggle {\n    display: none !important;\n  }\n}\n/*\n  InterDynamicTracking takes the font size in points\n  or pixels and returns the compensating tracking in EM.\n  function InterDynamicTracking(fontSize) {\n    const a = -0.0223\n    const b = 0.185\n    const c = -0.1745;\n    // tracking = a + b * e ^ (c * fontSize)\n    return a + b * Math.pow(Math.E, c * fontSize)\n  }\n*/\n.display-4 {\n  font: 300 112px / 112px var(--font);\n  letter-spacing: -0.05em;\n}\n\n.display-3 {\n  font: 400 56px / 56px var(--font);\n  letter-spacing: -0.02em;\n}\n\n.display-2 {\n  font: 400 45px / 48px var(--font);\n  letter-spacing: -0.005em;\n}\n\n.display-1, h1 {\n  font: 400 34px / 40px var(--font);\n  letter-spacing: normal;\n}\n\n.headline, h2 {\n  font: 400 24px / 32px var(--font);\n  letter-spacing: -0.019em;\n}\n\n.title, h3 {\n  font: 500 18px / 26px var(--font);\n  letter-spacing: -0.014em;\n}\n\n.subheading-2, h4 {\n  font: 400 16px / 28px var(--font);\n  letter-spacing: -0.011em;\n}\n\n.subheading-1, h5 {\n  font: 500 14px / 24px var(--font);\n  letter-spacing: -0.006em;\n}\n\n.body-2, h6 {\n  font: 400 14px / 20px var(--font);\n  letter-spacing: -0.006em;\n}\n\n.body-1, p {\n  font: 400 15px / 24px var(--font);\n  letter-spacing: -0.009em;\n}\n\n.caption {\n  font: 400 12px / 20px var(--font);\n  letter-spacing: 0;\n}\n\n.text-xs {\n  letter-spacing: 0;\n}\n\n.text-sm {\n  letter-spacing: -0.009em;\n}\n\n.text-base {\n  letter-spacing: -0.011em;\n}\n\n.text-lg {\n  letter-spacing: -0.014em;\n}\n\n.text-2xl {\n  letter-spacing: -0.019em;\n}\n\n.text-3xl {\n  letter-spacing: -0.021em;\n}\n\n:root .mat-mdc-raised-button:not(:disabled):not(.mat-unthemed), :root .mat-mdc-unelevated-button:not(:disabled):not(.mat-unthemed), :root .mat-mdc-fab:not(:disabled):not(.mat-unthemed), :root .mat-mdc-mini-fab:not(:disabled):not(.mat-unthemed) {\n  @apply text-primary-contrast;\n}\n:root .mat-mdc-button, :root .mat-mdc-outlined-button, :root .mat-mdc-unelevated-button, :root .mat-mdc-raised-button {\n  @apply rounded-button min-w-[6rem];\n}\n:root .mat-button-toggle-group:not(.mat-button-toggle-vertical) {\n  @apply rounded-button;\n}\n:root .mat-button-toggle-group:not(.mat-button-toggle-vertical) .mat-button-toggle:first-child .mat-button-toggle-label-content {\n  @apply pl-4;\n}\n:root .mat-button-toggle-group:not(.mat-button-toggle-vertical) .mat-button-toggle:last-child .mat-button-toggle-label-content {\n  @apply pr-4;\n}\n:root .mat-button-toggle-button {\n  @apply font-medium;\n}\n:root .mat-mdc-icon-button .mat-icon {\n  @apply inline-flex items-center justify-center;\n}\n\n.mat-mdc-checkbox.mat-primary {\n  --mdc-checkbox-selected-checkmark-color: theme(\"textColor.primary-contrast\");\n}\n\n:root {\n  /** Reset default height placeholder */\n}\n:root .mat-mdc-dialog-container .mdc-dialog__surface {\n  @apply rounded-lg;\n}\n:root .mat-mdc-dialog-title {\n  @apply pt-3;\n}\n:root .mdc-dialog__title::before {\n  content: none;\n  height: auto;\n}\n\n.mdc-notched-outline__notch {\n  border-right: none;\n}\n\n:root .mat-mdc-menu-panel {\n  @apply rounded shadow;\n}\n:root .mat-mdc-menu-content {\n  @apply p-2;\n}\n:root .mat-mdc-menu-item {\n  @apply flex items-center rounded text-sm font-medium min-h-[40px] pl-2 pr-6 transition duration-100 ease-out;\n}\n:root .mat-mdc-menu-item:hover:not([disabled]) {\n  @apply bg-primary/10;\n}\n:root .mat-mdc-menu-item:hover:not([disabled]) .mat-icon {\n  @apply text-primary;\n}\n:root .mat-mdc-menu-item .mat-icon {\n  @apply transition duration-100 ease-out;\n  font-size: 1.25rem;\n  height: 1.25rem;\n  width: 1.25rem;\n}\n:root .mat-mdc-menu-item-submenu-trigger {\n  @apply pr-12;\n}\n\n.mat-mdc-menu-item .mat-icon-no-color {\n  color: currentColor;\n}\n\n.mat-mdc-icon-button .mat-mdc-button-wrapper > *,\n.mat-menu-item .mat-icon,\n.mat-button .mat-icon {\n  vertical-align: middle !important;\n}\n\n.mat-mdc-table .mat-mdc-cell,\n.mat-table .mat-mdc-header-cell {\n  box-sizing: content-box;\n  white-space: nowrap;\n}\n\n.mat-mdc-select-panel {\n  @apply text-base;\n}\n\n.mat-drawer-side {\n  border: 0;\n}\n\n:root .mat-mdc-select-panel {\n  @apply rounded shadow p-2;\n}\n:root .mat-mdc-option {\n  @apply rounded text-sm font-medium h-10 transition duration-100 ease-out;\n}\n:root .mat-mdc-option:hover, :root .mat-mdc-option.mat-active {\n  @apply bg-primary/10;\n}\n:root .mat-mdc-option:hover .mat-icon, :root .mat-mdc-option.mat-active .mat-icon {\n  @apply text-primary;\n}\n:root .mat-mdc-option .mat-icon {\n  @apply transition duration-100 ease-out;\n  font-size: 1.25rem;\n  height: 1.25rem;\n  width: 1.25rem;\n}\n:root .mat-mdc-option.mat-mdc-selected:not(.mat-mdc-option-multiple) {\n  @apply bg-primary/20;\n}\n:root .mat-mdc-menu-item-submenu-trigger {\n  @apply pr-12;\n}\n\n.mat-mdc-progress-bar .mdc-linear-progress__buffer-bar, .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar, .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar {\n  background: #e2e2e2;\n}\n\n.vex-style-dark .mat-mdc-progress-bar .mdc-linear-progress__buffer-bar, .vex-style-dark .mat-mdc-progress-bar.mat-accent .mdc-linear-progress__buffer-bar, .vex-style-dark .mat-mdc-progress-bar.mat-warn .mdc-linear-progress__buffer-bar {\n  background: rgba(255, 255, 255, 0.5);\n}\n\n.apexcharts-legend-text {\n  margin-left: 4px;\n  top: -1px;\n}\n\nbody .apexcharts-tooltip.light {\n  background: var(--background-foreground);\n}\n\n.vex-layout-ares {\n  --footer-background: var(--background-base);\n  --sidenav-background: var(--background-base);\n  --toolbar-background: var(--background-base);\n  --sidenav-color: var(--text-color);\n  --sidenav-section-divider-color: transparent;\n  --sidenav-item-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-background-active: var(--background-foreground);\n  --sidenav-item-color: var(--text-color);\n  --sidenav-item-color-hover: var(--text-color);\n  --sidenav-item-color-active: var(--text-color);\n  --sidenav-item-dropdown-color-active: var(--sidenav-item-color-active);\n  --sidenav-item-dropdown-background-active: var(--background-hover);\n  --sidenav-item-dropdown-background: var(--background-base);\n  --sidenav-item-dropdown-background-hover: var(--background-hover);\n  --secondary-toolbar-background: var(--background-base);\n  --sidenav-toolbar-background: var(--background-base);\n  --secondary-toolbar-height: 64px;\n}\n.vex-layout-ares .sidenav {\n  border: none;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .vex-sidenav-item {\n  width: unset;\n  @apply rounded-full py-2 mx-4;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .vex-sidenav-item.vex-sidenav-item--active {\n  @apply shadow;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .item-level-0 > .vex-sidenav-item {\n  @apply my-1;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .item-level-1 .vex-sidenav-item.vex-sidenav-item--active {\n  @apply shadow-none font-medium;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .item-level-1 .vex-sidenav-item.vex-sidenav-item--active .vex-sidenav-item__label {\n  @apply text-black;\n}\n.vex-layout-ares .sidenav vex-sidenav-item .item-level-1 .vex-sidenav-item:hover .vex-sidenav-item__label {\n  @apply text-black;\n}\n.vex-layout-ares .sidenav-collapsed .sidenav vex-sidenav-item .vex-sidenav-item {\n  @apply mx-0;\n}\n.vex-layout-ares vex-secondary-toolbar {\n  @apply rounded-b overflow-hidden;\n}\n.vex-layout-ares vex-secondary-toolbar .secondary-toolbar {\n  @apply shadow-none border-t-0 -mb-gutter;\n}\n.vex-layout-ares vex-footer {\n  @apply rounded-t overflow-hidden;\n}\n.vex-layout-ares .vex-page-layout-header {\n  background: var(--background-base);\n  color: var(--text-color);\n}\n.vex-layout-ares .vex-page-layout-header vex-breadcrumbs .text-hint {\n  color: var(--text-hint) !important;\n}\n.vex-layout-ares.vex-style-default {\n  --sidenav-item-background-active: theme(\"backgroundColor.primary\");\n  --sidenav-item-color-active: theme(\"textColor.primary-contrast\");\n  --sidenav-item-dropdown-color-active: var(--sidenav-item-color);\n  --sidenav-item-dropdown-color-hover: var(--text-color);\n  --sidenav-item-icon-color-active: theme(\"textColor.primary-contrast\");\n}\n\n.vex-layout-hermes {\n  --toolbar-height: 100px;\n  --secondary-toolbar-background: var(--background-base);\n  --secondary-toolbar-height: 64px;\n}\n.vex-layout-hermes.vex-style-light {\n  --toolbar-background: var(--background-base);\n}\n.vex-layout-hermes.vex-style-default {\n  --navigation-background: #1a202e;\n  --toolbar-background: #232b3e;\n  --navigation-color: white;\n  --toolbar-color: white;\n}\n.vex-layout-hermes.vex-style-dark {\n  --toolbar-background: var(--background-base);\n}\n@screen lg {\n  .vex-layout-hermes .sidenav {\n    @apply hidden;\n  }\n}\n.vex-layout-hermes vex-secondary-toolbar .secondary-toolbar {\n  @apply shadow-none -mb-gutter border-t-0;\n}\n\n.vex-layout-ikaros {\n  --navigation-height: 0.00001px;\n}\n.vex-layout-ikaros.vex-style-default {\n  --toolbar-background: #1a202e;\n  --navigation-color: white;\n  --toolbar-color: white;\n}\n\n.vex-layout-poseidon {\n  --sidenav-item-min-height: 40px;\n  --sidenav-item-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-background-active: rgba(var(--color-primary), 0.2);\n  --sidenav-item-dropdown-background: var(--sidenav-background);\n  --sidenav-item-dropdown-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-dropdown-background-active: rgba(var(--color-primary), 0.2);\n  --sidenav-item-padding-vertical: var(--padding-8);\n  --sidenav-item-padding-horizontal: var(--padding-12);\n}\n.vex-layout-poseidon .vex-sidenav-item {\n  @apply mx-3 mb-1 rounded;\n}\n.vex-layout-poseidon .vex-sidenav-toolbar__divider {\n  margin: 0 var(--sidenav-item-padding-horizontal);\n}\n.vex-layout-poseidon.vex-style-light {\n  --sidenav-item-color: rgba(0, 0, 0, 1);\n  --sidenav-item-color-hover: rgba(0, 0, 0, 1);\n  --sidenav-item-dropdown-color-hover: rgba(0, 0, 0, 1);\n  --sidenav-item-dropdown-color-active: rgba(0, 0, 0, 1);\n}\n.vex-layout-poseidon.vex-style-default {\n  --sidenav-background: #0a1929;\n  --sidenav-toolbar-background: var(--sidenav-background);\n  --sidenav-item-color: rgba(255, 255, 255, 0.8);\n  --sidenav-item-color-hover: rgba(255, 255, 255, 1);\n  --sidenav-item-ripple-color: rgb(255, 255, 255, 0.06);\n}\n.vex-layout-poseidon.vex-style-dark {\n  --sidenav-toolbar-background: theme(\"backgroundColor.foreground\");\n  --sidenav-background: theme(\"backgroundColor.foreground\");\n  --sidenav-item-color: rgba(255, 255, 255, 0.8);\n  --sidenav-item-color-hover: #FFFFFF;\n  --sidenav-item-ripple-color: rgb(255, 255, 255, 0.06);\n}\n\n/*\n  You can override any CSS Variable or style here\n  Example:\n\n  :root {\n   --sidenav-background: #333333;\n  }\n\n  All possible variables can be found in @vex/styles/core or by simply inspecting the element you want to change\n  in Chrome/Firefox DevTools\n*/\n/**\n  Uncomment the below code and adjust the values to fit your colors, the application will automatically adjust\n */\n.dense-2 .mat-mdc-form-field-infix {\n  min-height: 48px;\n}\n.dense-2 .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 24px;\n}\n.dense-2 .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -30.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.dense-2 .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n.dense-2 .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n.dense-2 .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 12px;\n  padding-bottom: 12px;\n}\n.dense-2 .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n  display: none;\n}\n.dense-2 .mat-mdc-checkbox .mdc-checkbox {\n  padding: calc((var(--mdc-checkbox-ripple-size, 32px) - 18px) / 2);\n  margin: calc((var(--mdc-checkbox-touch-target-size, 32px) - 32px) / 2);\n}\n.dense-2 .mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__background {\n  top: calc((var(--mdc-checkbox-ripple-size, 32px) - 18px) / 2);\n  left: calc((var(--mdc-checkbox-ripple-size, 32px) - 18px) / 2);\n}\n.dense-2 .mat-mdc-checkbox .mdc-checkbox .mdc-checkbox__native-control {\n  top: calc((32px - var(--mdc-checkbox-touch-target-size, 32px)) / 2);\n  right: calc((32px - var(--mdc-checkbox-touch-target-size, 32px)) / 2);\n  left: calc((32px - var(--mdc-checkbox-touch-target-size, 32px)) / 2);\n  width: var(--mdc-checkbox-touch-target-size, 32px);\n  height: var(--mdc-checkbox-touch-target-size, 32px);\n}\n.dense-2 .mat-mdc-checkbox-touch-target {\n  display: none;\n}\n.dense-2 .mat-mdc-chip {\n  height: 24px;\n}\n.dense-2 .mat-mdc-chip .mdc-evolution-chip__action-touch {\n  display: none;\n}\n.dense-2 .mat-mdc-slide-toggle {\n  --mdc-switch-state-layer-size: 40px;\n}\n.dense-2 .mat-mdc-radio-button .mdc-radio {\n  padding: calc((32px - 20px) / 2);\n  margin: 0;\n}\n.dense-2 .mat-mdc-radio-button .mdc-radio .mdc-radio__background::before {\n  top: calc(-1 * (32px - 20px) / 2);\n  left: calc(-1 * (32px - 20px) / 2);\n  width: 32px;\n  height: 32px;\n}\n.dense-2 .mat-mdc-radio-button .mdc-radio .mdc-radio__native-control {\n  top: calc((32px - 32px) / 2);\n  right: calc((32px - 32px) / 2);\n  left: calc((32px - 32px) / 2);\n  width: 32px;\n  height: 32px;\n}\n.dense-2 .mat-mdc-radio-touch-target {\n  display: none;\n}\n.dense-2 .mat-mdc-list-base {\n  --mdc-list-list-item-one-line-container-height: 40px;\n  --mdc-list-list-item-two-line-container-height: 56px;\n  --mdc-list-list-item-three-line-container-height: 80px;\n}\n.dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-one-line, .dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-one-line, .dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-one-line {\n  height: 48px;\n}\n.dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-avatar.mdc-list-item--with-two-lines, .dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-checkbox.mdc-list-item--with-two-lines, .dense-2 .mat-mdc-list-item.mdc-list-item--with-leading-icon.mdc-list-item--with-two-lines {\n  height: 64px;\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-form-field-infix {\n  min-height: 40px;\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n  top: 20px;\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n  --mat-mdc-form-field-label-transform: translateY(\n          -26.75px)\n          scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n  transform: var(--mat-mdc-form-field-label-transform);\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.dense-2 .mat-mdc-paginator .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea) .mat-mdc-form-field-infix {\n  padding-top: 8px;\n  padding-bottom: 8px;\n}\n.dense-2 .mat-mdc-paginator .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n  display: none;\n}\n.dense-2 .mat-mdc-paginator-container {\n  min-height: 48px;\n}\n.dense-2 .mat-mdc-tab-header .mdc-tab {\n  height: 40px;\n}\n.dense-2 .mat-mdc-button.mat-mdc-button-base,\n.dense-2 .mat-mdc-raised-button.mat-mdc-button-base,\n.dense-2 .mat-mdc-unelevated-button.mat-mdc-button-base,\n.dense-2 .mat-mdc-outlined-button.mat-mdc-button-base {\n  height: 28px;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.dense-2 .mat-mdc-button.mat-mdc-button-base .mdc-button__touch,\n.dense-2 .mat-mdc-raised-button.mat-mdc-button-base .mdc-button__touch,\n.dense-2 .mat-mdc-unelevated-button.mat-mdc-button-base .mdc-button__touch,\n.dense-2 .mat-mdc-outlined-button.mat-mdc-button-base .mdc-button__touch {\n  height: 100%;\n}\n.dense-2 .mat-mdc-button.mat-mdc-button-base .mat-mdc-button-touch-target,\n.dense-2 .mat-mdc-raised-button.mat-mdc-button-base .mat-mdc-button-touch-target,\n.dense-2 .mat-mdc-unelevated-button.mat-mdc-button-base .mat-mdc-button-touch-target,\n.dense-2 .mat-mdc-outlined-button.mat-mdc-button-base .mat-mdc-button-touch-target {\n  display: none;\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base {\n  width: 40px;\n  height: 40px;\n  padding: 8px;\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__focus-ring {\n  max-height: 40px;\n  max-width: 40px;\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__ripple {\n  width: 40px;\n  height: 40px;\n  margin-top: 0px;\n  margin-bottom: 0px;\n  margin-right: 0px;\n  margin-left: 0px;\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base.mdc-icon-button--reduced-size .mdc-icon-button__focus-ring {\n  max-height: 40px;\n  max-width: 40px;\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base .mdc-icon-button__touch {\n  position: absolute;\n  top: 50%;\n  height: 40px;\n  /* @noflip */ /*rtl:ignore*/\n  left: 50%;\n  width: 40px;\n  transform: translate(-50%, -50%);\n}\n.dense-2 .mat-mdc-icon-button.mat-mdc-button-base .mat-mdc-button-touch-target {\n  display: none;\n}\n.dense-2 .mat-mdc-table .mdc-data-table__row {\n  height: 44px;\n}\n.dense-2 .mat-mdc-table .mdc-data-table__pagination {\n  min-height: 44px;\n}\n.dense-2 .mat-mdc-table .mdc-data-table__header-row {\n  height: 48px;\n}\n.dense-2 .mat-expansion-panel-header {\n  height: 40px;\n}\n.dense-2 .mat-expansion-panel-header.mat-expanded {\n  height: 56px;\n}\n.dense-2 .mat-horizontal-stepper-header {\n  height: 64px;\n}\n.dense-2 .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n.dense-2 .mat-vertical-stepper-header {\n  padding: 20px 24px;\n}\n.dense-2 .mat-stepper-vertical-line::before {\n  top: -12px;\n  bottom: -12px;\n}\n.dense-2 .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::after, .dense-2 .mat-stepper-label-position-bottom .mat-horizontal-stepper-header::before {\n  top: 32px;\n}\n.dense-2 .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n  top: 32px;\n}\n.dense-2 .mat-toolbar-multiple-rows {\n  min-height: 56px;\n}\n.dense-2 .mat-toolbar-row, .dense-2 .mat-toolbar-single-row {\n  height: 56px;\n}\n@media (max-width: 599px) {\n  .dense-2 .mat-toolbar-multiple-rows {\n    min-height: 48px;\n  }\n  .dense-2 .mat-toolbar-row, .dense-2 .mat-toolbar-single-row {\n    height: 48px;\n  }\n}\n.dense-2 .mat-tree-node {\n  min-height: 40px;\n}\n.dense-2 .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n  line-height: 40px;\n}","@use '@angular/material' as mat;\n@import \"../../var\";\n\n.vex-style-dark {\n  @include mat.all-component-colors($vex-dark-theme);\n\n  // Foreground\n  --background-app-bar: #{map-get(map-get($vex-dark-theme, background), app-bar)};\n\n  // Background\n  --footer-background: var(--background-foreground);\n  --navigation-background: #{map-get(map-get($vex-dark-theme, background), card)};\n  --toolbar-background: #{map-get(map-get($vex-dark-theme, background), card)};\n  --background-base: #{map-get(map-get($vex-dark-theme, background), background)};\n\n  // Colors\n  --background-foreground: #{map-get(map-get($vex-dark-theme, background), card)};\n  --background-foreground-rgb: #{red(map-get(map-get($vex-dark-theme, background), card))}, #{green(map-get(map-get($vex-dark-theme, background), card))}, #{blue(map-get(map-get($vex-dark-theme, background), card))};\n  --footer-color: var(--text-color);\n  --navigation-color: var(--text-color);\n  --text-color: #{$light-primary-text};\n  --toolbar-color: #{$light-primary-text};\n  --text-color-light: #{$dark-primary-text};\n\n  // Toolbar\n  --foreground-divider: #{map-get(map-get($vex-dark-theme, foreground), divider)};\n  --text-hint: #{$light-disabled-text};\n\n  // Navigation\n  --text-hint-light: #{$dark-disabled-text};\n  --background-hover: #{map-get(map-get($vex-dark-theme, background), hover)};\n\n  // Secondary Toolbar\n  --text-secondary: #{$light-secondary-text};\n\n  // Footer\n  --text-secondary-light: #{$dark-secondary-text};\n  --secondary-toolbar-background: var(--background-foreground);\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '../theming/theming';\n\n// Colors for the ripple elements.\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $foreground-base: map.get($foreground, base);\n  $color-opacity: 0.1;\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (meta.type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $color-opacity;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: theming.get-color-config($theme);\n    @if $color != null {\n      @include color($color);\n    }\n  }\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/list/evolution-mixins' as mdc-list-mixins;\n@use '@material/typography' as mdc-typography;\n@use '@material/ripple' as mdc-ripple;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-option {\n      // Since this will usually be rendered in an overlay,\n      // we have explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n\n      &:hover:not(.mdc-list-item--disabled),\n      &:focus:not(.mdc-list-item--disabled),\n      &.mat-mdc-option-active,\n\n      // In multiple mode there is a checkbox to show that the option is selected.\n      &.mdc-list-item--selected:not(.mat-mdc-option-multiple):not(.mdc-list-item--disabled) {\n        $color: mdc-theme-color.$on-surface;\n        background: rgba($color, mdc-ripple.states-opacity($color, hover));\n      }\n    }\n\n    .mat-primary {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(primary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-accent {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(secondary,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n\n    .mat-warn {\n      .mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) {\n        @include mdc-list-mixins.list-primary-text-ink-color(error,\n          $query: mdc-helpers.$mdc-theme-styles-query);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    // MDC uses the `subtitle1` level for list items, but\n    // the spec shows `body1` as the correct level.\n    .mat-mdc-option {\n      @include mdc-typography.typography(body1,\n        $query: mdc-helpers.$mdc-typography-styles-query,\n        // Exclude these properties, because they cause some build\n        // issues internally and they aren't used for anything.\n        $exclude-props: (text-decoration, text-transform)\n      );\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use './gss';\n\n/// When true, add an additional property/value declaration before declarations\n/// that use advanced features such as custom properties or CSS functions. This\n/// adds fallback support for older browsers such as IE11 that do not support\n/// these features at the cost of additional CSS. Set this variable to false to\n/// disable generating fallback declarations.\n$enable-fallback-declarations: true !default;\n\n/// Writes a CSS property/value declaration. This mixin is used throughout the\n/// theme package for consistency for dynamically setting CSS property values.\n///\n/// This mixin may optionally take a fallback value. For advanced features such\n/// as custom properties or CSS functions like min and max, a fallback value is\n/// recommended to support older browsers.\n///\n/// @param {String} $property - The CSS property of the declaration.\n/// @param {*} $value - The value of the CSS declaration. The value should be\n///     resolved by other theme functions first (i.e. custom property Maps and\n///     Material theme keys are not supported in this mixin). If the value is\n///     null, no declarations will be emitted.\n/// @param {*} $fallback - An optional fallback value for older browsers. If\n///     provided, a second property/value declaration will be added before the\n///     main property/value declaration.\n/// @param {Map} $gss - An optional Map of GSS annotations to add.\n/// @param {Bool} $important - If true, add `!important` to the declaration.\n@mixin declaration(\n  $property,\n  $value,\n  $fallback-value: null,\n  $gss: (),\n  $important: false\n) {\n  // Normally setting a null value to a property will not emit CSS, so mixins\n  // wouldn't need to check this. However, Sass will throw an error if the\n  // interpolated property is a custom property.\n  @if $value != null {\n    $important-rule: if($important, ' !important', '');\n\n    @if $fallback-value and $enable-fallback-declarations {\n      @include gss.annotate($gss);\n      #{$property}: #{$fallback-value} #{$important-rule};\n\n      // Add @alternate to annotations.\n      $gss: map.merge(\n        $gss,\n        (\n          alternate: true,\n        )\n      );\n    }\n\n    @include gss.annotate($gss);\n    #{$property}: #{$value}#{$important-rule};\n  }\n}\n\n/// Unpacks shorthand values for CSS properties (i.e. lists of 1-3 values).\n/// If a list of 4 values is given, it is returned as-is.\n///\n/// Examples:\n///\n/// unpack-value(4px) => 4px 4px 4px 4px\n/// unpack-value(4px 2px) => 4px 2px 4px 2px\n/// unpack-value(4px 2px 2px) => 4px 2px 2px 2px\n/// unpack-value(4px 2px 0 2px) => 4px 2px 0 2px\n///\n/// @param {Number | Map | List} $value - List of 1 to 4 value numbers.\n/// @return {List} a List of 4 value numbers.\n@function unpack-value($value) {\n  @if meta.type-of($value) == 'map' or list.length($value) == 1 {\n    @return $value $value $value $value;\n  } @else if list.length($value) == 4 {\n    @return $value;\n  } @else if list.length($value) == 3 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 3)\n      list.nth($value, 2);\n  } @else if list.length($value) == 2 {\n    @return list.nth($value, 1) list.nth($value, 2) list.nth($value, 1)\n      list.nth($value, 2);\n  }\n\n  @error \"Invalid CSS property value: '#{$value}' is more than 4 values\";\n}\n","//\n// Copyright 2022 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Internal stylesheet for material list component. Selector '.mdc-*' should\n// only be used in this project.\n\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/ripple/ripple';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './evolution-variables' as variables;\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n\n$ripple-target: variables.$ripple-target;\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _high-contrast-mode($query: $query);\n  .mdc-list {\n    @include _static-list-base($query: $query);\n  }\n\n  .mdc-list-item__wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      display: block;\n    }\n  }\n\n  .mdc-list-item {\n    @include item-base($query: $query);\n    @include _list-item-baseline-height($query: $query);\n    @include one-line-item-start-alignment(center, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include three-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include one-line-item-end-alignment(center, $query: $query);\n    @include two-line-item-end-alignment(center, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      align-items: stretch;\n      cursor: pointer;\n    }\n\n    // Reset mouse cursor for disabled and non-interactive items.\n    &.mdc-list-item--disabled,\n    &.mdc-list-item--non-interactive {\n      @include feature-targeting.targets($feat-structure) {\n        cursor: auto;\n      }\n    }\n\n    // TODO(b/254711887): Likely need to update this to adhere to a HCM focus\n    // ring spec.\n    // For components using aria-activedescendant, the focus pseudoclass is\n    // never applied and use `.mdc-ripple-upgraded--background-focused` instead.\n    &:not(.mdc-list-item--selected):focus::before,\n    &.mdc-ripple-upgraded--background-focused::before {\n      @include dom-mixins.transparent-border($query: $query);\n    }\n\n    &.mdc-list-item--selected::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $border-style: double,\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--selected:focus::before {\n      @include dom-mixins.transparent-border(\n        $border-width: 3px,\n        $query: $query\n      );\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // Override anchor tag styles for the use-case of a list being used for navigation\n  a.mdc-list-item {\n    @include feature-targeting.targets($feat-structure) {\n      color: inherit;\n      text-decoration: none;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  .mdc-list-item__start {\n    @include feature-targeting.targets($feat-structure) {\n      fill: currentColor;\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-structure) {\n      flex-shrink: 0;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-list-item__content {\n    @include typography.overflow-ellipsis($query);\n    @include feature-targeting.targets($feat-structure) {\n      align-self: center;\n      flex: 1;\n      pointer-events: none;\n    }\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: stretch;\n      }\n    }\n\n    // Disable interaction on label elements that may automatically\n    // toggle corresponding checkbox / radio input.\n    &[for] {\n      @include feature-targeting.targets($feat-structure) {\n        pointer-events: none;\n      }\n    }\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines &,\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.overflow-ellipsis($query);\n    @include typography.text-baseline(\n      $top: 20px,\n      $display: block,\n      $query: $query\n    );\n\n    .mdc-list-item--with-three-lines & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: normal;\n        line-height: 20px;\n      }\n    }\n\n    .mdc-list-item--with-overline & {\n      @include feature-targeting.targets($feat-structure) {\n        white-space: nowrap;\n        line-height: auto;\n      }\n    }\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.overflow-ellipsis($query);\n\n    .mdc-list-item--with-two-lines & {\n      @include typography.text-baseline(\n        $top: 24px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n\n    .mdc-list-item--with-three-lines & {\n      @include typography.text-baseline(\n        $top: 28px,\n        $bottom: 20px,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        border-radius: 50%;\n      }\n    }\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-spacing(\n      $leading: 16px,\n      $trailing: 32px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-spacing(16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 8px,\n      $query: $query\n    );\n    @include item-start-spacing($leading: 0, $trailing: 16px, $query: $query);\n    @include _two-line-item-text-baseline($query: $query);\n    @include _one-line-item-taller-density(\n      variables.$one-line-item-density-scale,\n      $query: $query\n    );\n    @include _two-line-item-tall-density(\n      variables.$two-line-item-density-scale,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    $leading: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-start-spacing($leading, $trailing, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-spacing(16px, $query: $query);\n    @include two-line-item-start-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n    @include _two-line-item-text-baseline($query: $query);\n    @include _tall-list-item-baseline-height($query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-spacing(16px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    @include two-line-item-end-alignment(flex-start, $query: $query);\n    @include three-line-item-end-alignment(flex-start, $query: $query);\n    @include item-end-spacing($leading: 28px, $trailing: 16px, $query: $query);\n    @include _multi-line-item-end-text-baseline($query: $query);\n\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    $leading: absorb-overflow(32px, $actual: 40px, $available: 24px);\n    $trailing: absorb-overflow(16px, $actual: 40px, $available: 24px);\n    $top: absorb-overflow(16px, $actual: 40px, $available: 24px);\n\n    @include item-end-spacing($leading, $trailing, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: $top,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-spacing(16px, $query: $query);\n    @include three-line-item-end-alignment(\n      $alignment: flex-start,\n      $offset: 16px,\n      $query: $query\n    );\n  }\n\n  .mdc-list-item--with-overline {\n    @include _two-line-item-primary-text-baseline(20px, 0px, $query: $query);\n    @include _three-line-item-primary-baseline(20px, 0px, $query: $query);\n  }\n\n  // This must be specified last to ensure that RTL padding takes priority over\n  // LTR padding in the cascade.\n  .mdc-list-item {\n    @include item-spacing(16px, $query: $query);\n  }\n\n  //\n  // Grouping\n  //\n  .mdc-list-group {\n    @include feature-targeting.targets($feat-structure) {\n      // Cancel top/bottom padding on individual lists within group\n      .mdc-deprecated-list {\n        padding: 0;\n      }\n    }\n  }\n  .mdc-list-group__subheader {\n    @include _list-group-subheader-margin($query: $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n\n      // Allows the use of padding to specify leading and trailing insets\n      // independently.\n      background-clip: content-box;\n    }\n  }\n\n  // The base inset variant corresponds to the item's padding.\n  .mdc-list-divider,\n  .mdc-list-divider--with-leading-text,\n  .mdc-list-divider--with-leading-icon,\n  .mdc-list-divider--with-leading-image,\n  .mdc-list-divider--with-leading-thumbnail,\n  .mdc-list-divider--with-leading-avatar,\n  .mdc-list-divider--with-leading-checkbox,\n  .mdc-list-divider--with-leading-switch,\n  .mdc-list-divider--with-leading-radio {\n    @include divider-leading-inset(16px, $query: $query);\n    @include divider-trailing-inset(16px, $query: $query);\n  }\n\n  .mdc-list-divider--with-leading-video {\n    @include divider-leading-inset(0px, $query: $query);\n  }\n\n  // This is needed to ensure that default padding isn't applied in RTL locales.\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        padding: 0;\n      }\n    }\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include with-ripple($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  //\n  // Items\n  //\n\n  @include list-primary-text-ink-color(text-primary-on-background, $query);\n  @include list-secondary-text-ink-color(text-secondary-on-background, $query);\n  @include list-overline-text-ink-color(text-hint-on-background, $query);\n  @include list-icon-fill-color(transparent, $query);\n  @include list-icon-ink-color(text-icon-on-background, $query);\n  @include list-meta-text-ink-color(text-hint-on-background, $query);\n  @include list-disabled-opacity(variables.$content-disabled-opacity, $query);\n  @include list-disabled-ink-color(variables.$content-disabled-color, $query);\n  @include list-selected-ink-color(variables.$content-selected-color, $query);\n\n  @include group-subheader-ink-color(text-primary-on-background, $query);\n\n  @include _high-contrast-mode-border-color($query);\n\n  .mdc-list {\n    @include _typography-list-base($query: $query);\n  }\n\n  .mdc-list-item__primary-text {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  .mdc-list-item__secondary-text {\n    @include typography.typography(body2, $query);\n  }\n\n  .mdc-list-item__overline-text {\n    @include typography.typography(overline, $query);\n  }\n\n  .mdc-list-item--with-leading-avatar {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-icon {\n    @include item-start-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-thumbnail {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-image {\n    @include item-start-size(56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-video {\n    @include item-start-size($width: 100px, $height: 56px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-checkbox {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-radio {\n    @include item-start-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-leading-switch {\n    @include item-start-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-icon {\n    @include item-end-size(24px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include typography.typography(caption, $query);\n    }\n  }\n\n  .mdc-list-item--with-trailing-checkbox {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-radio {\n    @include item-end-size(40px, $query: $query);\n  }\n\n  .mdc-list-item--with-trailing-switch {\n    @include item-end-size($width: 36px, $height: 20px, $query: $query);\n  }\n\n  .mdc-list-group__subheader {\n    @include typography.typography(subtitle1, $query);\n  }\n\n  //\n  // Dividers\n  //\n\n  $divider-color: if(\n    theme-color.tone(theme-color.$background) == 'dark',\n    variables.$divider-color-on-dark-bg,\n    variables.$divider-color-on-light-bg\n  );\n\n  @include divider-color($divider-color, $query: $query);\n  @include divider-height(1px, $query: $query);\n  @include static-styles($query: $query);\n} // end of without-ripple\n\n@mixin with-ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  :not(.mdc-list-item--disabled).mdc-list-item {\n    @include _item-interactive-ripple($query);\n  }\n}\n\n///\n/// Adjusts an offset (i.e., margin) to accomodate contents that are larger than\n/// the space allocated by the specification.\n///\n/// For instance, the specification provides 24x24dp for a checkbox with a 16dp\n/// margin. However, checkboxes are actually 40x40dp. To ensure that the\n/// checkbox is positioned correctly, the margin is reduced by 8dp to reflect\n/// that the margin is already \"baked into\" the checkbox.\n///\n/// Concretely, 40dp - 24dp = 16dp. Assuming that the control is symmetrical,\n/// half of the overflow (8dp) is on the leading side and half on the trailing\n/// side. Therefore, the leading and trailing margins are reduced by 8dp.\n///\n/// Note: this might be more useful if it's added into the leading/trailing\n/// margin mixins as a parameter.\n///\n@function absorb-overflow($offset, $actual, $available, $symmetric: true) {\n  @if $actual <= $available {\n    @return $offset;\n  }\n  $overflow: $actual - $available;\n  @return $offset - math.div($overflow, if($symmetric, 2, 1));\n}\n\n@mixin one-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin two-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n@mixin three-line-item-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    @include feature-targeting.targets($feat-structure) {\n      height: $height;\n    }\n  }\n}\n\n@mixin list-item-height($height) {\n  &.mdc-list-item--with-one-line,\n  &.mdc-list-item--with-two-lines,\n  &.mdc-list-item--with-three-lines {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin item-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, $leading, $trailing);\n  }\n}\n\n@mixin one-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-start-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin one-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-one-line {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin two-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin three-line-item-end-alignment(\n  $alignment,\n  $offset: 0,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-structure) {\n        align-self: $alignment;\n        margin-top: $offset;\n      }\n    }\n  }\n}\n\n@mixin item-start-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, 0, auto);\n    }\n\n    .mdc-list-item__start {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-end-spacing(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    // Extra specificity needed to override default customizations.\n    &.mdc-list-item {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, 0);\n    }\n\n    .mdc-list-item__end {\n      @include rtl.reflexive-property(margin, $leading, $trailing);\n    }\n  }\n}\n\n@mixin item-start-size(\n  $width,\n  $height: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__start {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin item-end-size($width, $height: $width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-list-item__end {\n      @include theme.property(width, $width);\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin list-item-selected-container-color($color) {\n  &.mdc-list-item.mdc-list-item--selected {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin list-primary-text-typography($typography-theme) {\n  .mdc-list-item__primary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-primary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__primary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__secondary-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-secondary-text-typography($typography-theme) {\n  .mdc-list-item__secondary-text {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n@mixin list-overline-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__overline-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin list-icon-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--with-leading-icon .mdc-list-item__start,\n  .mdc-list-item--with-trailing-icon .mdc-list-item__end {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin list-selected-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-primary-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $leading-only: true, $query: $query);\n  }\n}\n\n@mixin list-selected-meta-text-ink-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--selected,\n  .mdc-list-item--activated {\n    @include list-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    @include list-primary-text-ink-color($color, $query);\n    @include list-secondary-text-ink-color($color, $query);\n    @include list-overline-text-ink-color($color, $query);\n    @include _item-icon-ink-color($color, $query: $query);\n    @include item-meta-text-ink-color($color, $query);\n  }\n}\n\n@mixin list-disabled-opacity($opacity, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin group-subheader-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-deprecated-list-group__subheader {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n///\n/// Sets shape radius (rounded) to single line list variant.\n///\n/// @param {Number | List<Number>} $radius Radius size in `px` or percentage. It can be 4 value corner or single radius.\n///     Set to `50%` for rounded shape.\n/// @param {Boolean} $rtl-reflexive Set to true to flip border radius in RTL context. Defaults to `false`.\n/// @param {Number} $density-scale Density scale of single line list. Set this only when custom density is applied.\n///     Defaults to `$mdc-deprecated-list-single-line-density-scale`.\n///\n/// @access public\n///\n@mixin one-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$one-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-one-line {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$one-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$one-line-item-taller-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin two-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$two-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-two-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$two-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch,\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include shape-mixins.radius(\n        $radius,\n        $rtl-reflexive,\n        $component-height:\n          density-functions.prop-value(\n            $density-config: variables.$two-line-item-tall-density-config,\n            $density-scale: $density-scale,\n            $property-name: height\n          ),\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin three-line-list-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: variables.$three-line-item-density-scale,\n  $query: feature-targeting.all()\n) {\n  .mdc-list-item--with-three-lines {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height:\n        density-functions.prop-value(\n          $density-config: variables.$three-line-item-density-config,\n          $density-scale: $density-scale,\n          $property-name: height\n        ),\n      $query: $query\n    );\n  }\n}\n\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n@mixin divider-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-list-divider {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n  }\n}\n\n@mixin divider-leading-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-leading-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, $inset, auto);\n    }\n  }\n}\n\n@mixin divider-trailing-inset($inset, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-list-divider--with-trailing-inset {\n    @include feature-targeting.targets($feat-structure) {\n      // We rely on auto to avoid clobbering the opposite padding.\n      @include rtl.reflexive-property(padding, auto, $inset);\n    }\n  }\n}\n\n// The public density mixins apply the appropriate density styles regardless of\n// the item's start contents.\n@mixin one-line-item-density(\n  $density-scale,\n  $exclude-variants: false,\n  $query: feature-targeting.all()\n) {\n  @include _one-line-item-density($density-scale, $query: $query);\n\n  @if not $exclude-variants {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-icon,\n    &.mdc-list-item--with-leading-thumbnail,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-radio,\n    &.mdc-list-item--with-leading-switch {\n      @include _one-line-item-tall-density($density-scale, $query: $query);\n    }\n\n    &.mdc-list-item--with-leading-image,\n    &.mdc-list-item--with-leading-video {\n      @include _one-line-item-taller-density($density-scale, $query: $query);\n    }\n  }\n}\n\n@mixin two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  @include _two-line-item-density($density-scale, $query: $query);\n\n  &.mdc-list-item--with-leading-avatar,\n  &.mdc-list-item--with-leading-icon,\n  &.mdc-list-item--with-leading-thumbnail,\n  &.mdc-list-item--with-leading-checkbox,\n  &.mdc-list-item--with-leading-radio,\n  &.mdc-list-item--with-leading-switch,\n  &.mdc-list-item--with-leading-image,\n  &.mdc-list-item--with-leading-video {\n    @include _two-line-item-tall-density($density-scale, $query: $query);\n  }\n}\n\n@mixin three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  @include _three-line-item-density($density-scale, $query: $query);\n}\n\n//\n// Private\n//\n\n// Mixins that apply baseline height for one-, two-, and three- line item\n// container heights. This mixin calls the density mixins so that the styles\n// can be overwritten by future density mixin calls.\n@mixin _list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _two-line-item-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n\n  @include _three-line-item-density(\n    variables.$three-line-item-density-scale,\n    $query: $query\n  );\n}\n\n@mixin _tall-list-item-baseline-height($query: feature-targeting.all()) {\n  @include _one-line-item-tall-density(\n    variables.$one-line-item-density-scale,\n    $query: $query\n  );\n  @include _two-line-item-tall-density(\n    variables.$two-line-item-density-scale,\n    $query: $query\n  );\n}\n\n// The private density mixins allow density properties to be overridden\n// individually to avoid increasing specificity.\n\n@mixin _one-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _one-line-item-taller-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$one-line-item-taller-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include one-line-item-height($height, $query: $query);\n}\n\n@mixin _two-line-item-density($density-scale, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n\n  @if ($density-scale and $density-scale != 0) {\n    &.mdc-list-item--with-two-lines {\n      .mdc-list-item__content {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n      }\n      .mdc-list-item__primary-text,\n      .mdc-list-item__secondary-text {\n        margin-top: 0px;\n        margin-bottom: 0px;\n        line-height: 1.4;\n        &::before,\n        &::after {\n          display: none;\n        }\n      }\n    }\n  }\n}\n\n@mixin _two-line-item-tall-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$two-line-item-tall-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include two-line-item-height($height, $query: $query);\n}\n\n@mixin _three-line-item-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$three-line-item-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include three-line-item-height($height, $query: $query);\n}\n\n// Split the list-base mixin into two sub-mixins, one holding the\n// structural/static styles (static-list-base) and the other holding styles\n// that are themable (typography-list-base). However, the existing list-base\n// mixin need to be preserved as Angular calls this mixin for autocomplete\n// base styling.\n@mixin _typography-list-base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n  @include typography.typography(subtitle1, $query);\n  @include feature-targeting.targets($feat-typography) {\n    // According to the mocks and stickersheet, the line-height is\n    // adjusted to 24px for text content, same as for body1.\n    /* @alternate */\n    line-height: map.get(map.get(typography.$styles, body1), line-height);\n  }\n}\n\n@mixin _static-list-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n    padding: 8px 0;\n    list-style-type: none;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin list-base($query: feature-targeting.all()) {\n  @include _typography-list-base($query: $query);\n  @include _static-list-base($query: $query);\n}\n\n@mixin item-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: relative;\n    align-items: center;\n    justify-content: flex-start;\n    overflow: hidden;\n    padding: 0;\n\n    &:focus // lint-disable-focus-psuedo-selector\n    {\n      outline: none;\n    }\n  }\n}\n\n@mixin _item-interactive-ripple($query: feature-targeting.all()) {\n  @include ripple.surface(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple.radius-bounded(\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states(\n    theme-color.prop-value(on-surface),\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-activated(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n  @include ripple-theme.states-selected(\n    primary,\n    false,\n    $ripple-target: variables.$ripple-target,\n    $query: $query\n  );\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin _two-line-item-text-baseline($query: feature-targeting.all()) {\n  @include _two-line-item-primary-text-baseline(32px, 20px, $query: $query);\n  @include _two-line-item-overline-text-baseline(28px, 20px, $query: $query);\n  @include _two-line-item-meta-text-baseline($top: 32px, $query: $query);\n}\n\n@mixin _two-line-item-primary-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-primary-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__primary-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-overline-text-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _three-line-item-overline-baseline(\n  $top,\n  $bottom,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__overline-text {\n      @include typography.text-baseline(\n        $top: $top,\n        $bottom: $bottom,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _multi-line-item-end-text-baseline($query: feature-targeting.all()) {\n  &.mdc-list-item--with-two-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n\n  &.mdc-list-item--with-three-lines {\n    .mdc-list-item__end {\n      @include typography.text-baseline(\n        $display: block,\n        $top: 28px,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _two-line-item-meta-text-baseline(\n  $top,\n  $query: feature-targeting.all()\n) {\n  &.mdc-list-item--with-two-lines {\n    &.mdc-list-item--with-trailing-meta {\n      .mdc-list-item__end {\n        @include typography.text-baseline(\n          $display: block,\n          $top: $top,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin item-meta-text-ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-trailing-meta {\n    .mdc-list-item__end {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _item-icon-ink-color(\n  $color,\n  $leading-only: false,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-list-item--with-leading-icon {\n    .mdc-list-item__start {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n\n  @if (not $leading-only) {\n    &.mdc-list-item--with-trailing-icon {\n      .mdc-list-item__end {\n        @include feature-targeting.targets($feat-color) {\n          @include theme.property(color, $color);\n        }\n      }\n    }\n  }\n}\n\n@mixin _high-contrast-mode-border-color($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  .mdc-list-divider::after {\n    @include feature-targeting.targets($feat-color) {\n      // Color ensures border is shown, but will be overridden by the browser.\n      @include theme.property(border-bottom-color, white);\n    }\n  }\n}\n\n@mixin _high-contrast-mode($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include dom-mixins.forced-colors-mode {\n    .mdc-list-divider::after {\n      @include feature-targeting.targets($feat-structure) {\n        content: '';\n        display: block;\n        border-bottom-width: 1px;\n        border-bottom-style: solid;\n      }\n    }\n  }\n}\n\n@mixin _list-group-subheader-margin($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $mdc-list-subheader-virtual-height: 3rem;\n  $mdc-list-subheader-leading: map.get(\n    map.get(typography.$styles, body1),\n    line-height\n  );\n  $mdc-list-subheader-margin: calc(\n    (#{$mdc-list-subheader-virtual-height} - #{$mdc-list-subheader-leading}) / 2\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: $mdc-list-subheader-margin variables.$side-padding;\n  }\n}\n","@use '@material/theme/theme' as mdc-theme;\n\n@use '../theming/theming';\n@use '../typography/typography';\n@use '../mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-optgroup-label {\n      // Since this will usually be rendered in an overlay,\n      // we have to explicitly set the default color.\n      @include mdc-theme.prop(color, text-primary-on-background);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../../theming/theming';\n\n@mixin _psuedo-checkbox-styles-with-color($text-color, $background) {\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $text-color;\n    }\n\n    // Full (checkbox) appearance inverts colors of text and background.\n    &.mat-pseudo-checkbox-full {\n      &::after {\n        color: $background;\n      }\n\n      background: $text-color;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $background: theming.get-color-from-palette(map.get($config, background), background);\n  $secondary-text: theming.get-color-from-palette(map.get($config, foreground), secondary-text);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox-full {\n    color: $secondary-text;\n    &.mat-pseudo-checkbox-disabled {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-primary {\n    @include _psuedo-checkbox-styles-with-color($primary, $background);\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  @include _psuedo-checkbox-styles-with-color($accent, $background);\n  .mat-accent {\n    @include _psuedo-checkbox-styles-with-color($accent, $background);\n  }\n\n  .mat-warn {\n    @include _psuedo-checkbox-styles-with-color($warn, $background);\n  }\n\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-disabled.mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-minimal::after {\n      color: $disabled-color;\n    }\n\n    &.mat-pseudo-checkbox-full {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin _density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include _density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'theming/theming';\n@use './style/private';\n@use './ripple/ripple-theme';\n@use './option/option-theme';\n@use './option/optgroup-theme';\n@use './selection/pseudo-checkbox/pseudo-checkbox-theme';\n@use './style/elevation';\n@use './typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include ripple-theme.color($config);\n  @include option-theme.color($config);\n  @include optgroup-theme.color($config);\n  @include pseudo-checkbox-theme.color($config);\n\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map.get($config, background);\n    $foreground: map.get($config, foreground);\n\n    background-color: theming.get-color-from-palette($background, background);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    $selector: elevation.$prefix + $zValue;\n    // We need the `mat-mdc-elevation-specific`, because some MDC mixins\n    // come with elevation baked in and we don't have a way of removing it.\n    .#{$selector}, .mat-mdc-elevation-specific.#{$selector} {\n      @include private.private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n\n  @include option-theme.typography($config);\n  @include optgroup-theme.typography($config);\n  @include pseudo-checkbox-theme.typography($config);\n  // TODO(mmalerba): add typography mixin for this.\n  // @include ripple-theme.typography($config);\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include option-theme.density($density-scale);\n  @include optgroup-theme.density($density-scale);\n  // TODO(mmalerba): add density mixins for these.\n  // @include ripple-theme.density($density-scale);\n  // @include pseudo-checkbox-theme.density($density-scale);\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-core') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '@material/card/elevated-card-theme' as mdc-elevated-card-theme;\n@use '@material/card/outlined-card-theme' as mdc-outlined-card-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n\n    .mat-mdc-card {\n      // MDC's theme has `container-elevation` and `container-shadow-color` tokens, but we can't\n      // use them because they output under a `.mdc-card` selector whereas the rest of the theme\n      // isn't under any selector. Even if the mixin is pulled out of the selector, it throws a\n      // different error.\n      @include private.private-theme-elevation(1, $config);\n      @include mdc-elevated-card-theme.theme((\n        container-color: $surface,\n      ));\n    }\n\n    .mat-mdc-card-outlined {\n      @include private.private-theme-elevation(0, $config);\n      @include mdc-outlined-card-theme.theme((\n        outline-color: if(\n          meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n          color.mix($on-surface, $surface, 12%),\n          $on-surface\n        )\n      ));\n    }\n\n    // Card subtitles are an Angular Material construct (not MDC), so we explicitly set their\n    // color to secondary text here.\n    .mat-mdc-card-subtitle {\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    // Card subtitles and titles are an Angular Material construct (not MDC), so we explicitly\n    // set their typographic styles here.\n    .mat-mdc-card-title {\n      @include mdc-typography.typography(headline6);\n    }\n\n    .mat-mdc-card-subtitle {\n      @include mdc-typography.typography(subtitle2);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/linear-progress/linear-progress-theme' as mdc-linear-progress-theme;\n@use 'sass:color';\n@use 'sass:meta';\n\n\n@mixin _palette-styles($color) {\n  $color-value: mdc-theme-color.prop-value($color);\n\n  // We can't set the `track-color` using `theme`, because it isn't possible for it to use a CSS\n  // variable since MDC's buffer animation works by constructing an SVG string from this color.\n  @include mdc-linear-progress-theme.theme-styles((\n    // TODO(crisbeto): the buffer color should come from somewhere in MDC, however at the time of\n    // writing, their buffer color is hardcoded to #e6e6e6 which both doesn't account for theming\n    // and doesn't match the Material design spec. For now we approximate the buffer background by\n    // applying an opacity to the color of the bar.\n    track-color: if(\n      meta.type-of($color-value) == color,\n      color.adjust($color-value, $alpha: -0.75),\n      $color-value\n    ),\n  ));\n\n  @include mdc-linear-progress-theme.theme((\n    active-indicator-color: $color-value,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-progress-bar {\n      @include _palette-styles(primary);\n\n      &.mat-accent {\n        @include _palette-styles(secondary);\n      }\n\n      &.mat-warn {\n        @include _palette-styles(error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/keys';\n\n$baseline-buffer-color: #e6e6e6 !default;\n$height: 4px;\n\n$custom-property-prefix: 'linear-progress';\n\n// TODO(b/254889918): Support all linear progress tokens.\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  track-color: $baseline-buffer-color,\n  track-height: 4px,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include bar-color(map.get($theme, active-indicator-color));\n  @include buffer-color(map.get($theme, track-color));\n  @include track-height(map.get($theme, track-height));\n  // TODO(b/155129310): Add styles for 4-color linear progress once this variant\n  // is supported.\n}\n\n@mixin bar-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__bar-inner {\n    @include feature-targeting.targets($feat-color) {\n      // Border is used rather than background-color to ensure that the\n      // bar is visible in Windows High Contrast Mode.\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin buffer-color($color, $query: feature-targeting.all()) {\n  // We need to escape the '#' character as \"%23\" for SVG because '#' is a reserved character in URIs.\n  $color-value-for-css: theme-color.prop-value($color);\n  $color-value-for-svg: str-replace_(\n    string.unquote('#{$color-value-for-css}'),\n    '#',\n    '%23'\n  );\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-linear-progress__buffer-dots {\n    @include feature-targeting.targets($feat-color) {\n      // stylelint-disable function-url-quotes -- SVG data URI\n      // SVG is optimized for data URI (https://codepen.io/tigt/post/optimizing-svgs-in-data-uris)\n      @include theme.property(\n        background-image,\n        url(\"data:image/svg+xml,%3Csvg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' enable-background='new 0 0 5 2' xml:space='preserve' viewBox='0 0 5 2' preserveAspectRatio='none slice'%3E%3Ccircle cx='1' cy='1' r='1' fill='color-value-for-svg'/%3E%3C/svg%3E\"),\n        $replace: (color-value-for-svg: $color-value-for-svg)\n      );\n      // stylelint-enable function-url-quotes\n    }\n  }\n\n  .mdc-linear-progress__buffer-bar {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color-value-for-css);\n    }\n  }\n}\n\n@mixin track-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-linear-progress {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $height);\n    }\n\n    &__bar-inner {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(border-top-width, $height);\n      }\n    }\n\n    &__buffer-dots {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(\n          background-size,\n          10px height,\n          $replace: (height: $height)\n        );\n      }\n    }\n  }\n}\n\n// Based on https://css-tricks.com/snippets/sass/str-replace-function/\n@function str-replace_($string, $search, $replace) {\n  $index: string.index($string, $search);\n\n  @if $index {\n    $head: string.slice($string, 1, $index - 1);\n    $tail: str-replace_(\n      string.slice($string, $index + string.length($search)),\n      $search,\n      $replace\n    );\n\n    @return $head + $replace + $tail;\n  }\n\n  @return $string;\n}\n","@use 'sass:map';\n@use '@material/tooltip/plain-tooltip-theme';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '../core/theming/theming';\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-tooltip {\n      @include plain-tooltip-theme.theme((\n        container-color: map.get(palette.$light-theme-background-palette, tooltip),\n        supporting-text-color: mdc-theme-color.prop-value(text-primary-on-dark)\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-tooltip {\n      @include plain-tooltip-theme.theme((\n        supporting-text-font: mdc-typography.get-font(caption),\n        supporting-text-size: mdc-typography.get-size(caption),\n        supporting-text-weight: mdc-typography.get-weight(caption),\n        supporting-text-tracking: mdc-typography.get-tracking(caption),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:map';\n@use '@material/animation/animation';\n@use '@material/theme/css';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/line-ripple/mixins' as line-ripple-mixins;\n@use '@material/notched-outline/mixins' as notched-outline-mixins;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n@use 'helper-text/mixins' as helper-text-mixins;\n@use 'character-counter/mixins' as character-counter-mixins;\n@use 'icon/mixins' as icon-mixins;\n@use 'icon/variables' as icon-variables;\n@use './variables';\n@use '@material/rtl/rtl';\n\n$_density-config: map.merge(\n  variables.$density-config,\n  (\n    minimum: math.min(variables.$minimum-height, 36px),\n  )\n);\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include ripple($query);\n  @include without-ripple($query);\n  @include helper-text-mixins.helper-text-core-styles($query);\n  @include character-counter-mixins.character-counter-core-styles($query);\n  @include icon-mixins.icon-core-styles($query);\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Baseline\n  // postcss-bem-linter: define text-field\n  .mdc-text-field {\n    @include _base($query);\n  }\n\n  .mdc-text-field__input {\n    @include _input($query);\n\n    @include placeholder-selector_ {\n      @include _input-placeholder($query);\n    }\n\n    // Always show placeholder for text fields that has no\n    // label and show only on focused state when label is present.\n    .mdc-text-field--no-label &,\n    .mdc-text-field--focused & {\n      @include placeholder-selector_ {\n        @include _input-placeholder-visible($query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix {\n    @include _affix($query: $query);\n\n    .mdc-text-field--label-floating &,\n    .mdc-text-field--no-label & {\n      @include _affix-visible($query: $query);\n    }\n\n    // Safari only\n    @supports (-webkit-hyphens: none) {\n      .mdc-text-field--outlined & {\n        @include _centered-affix-safari-support($query: $query);\n      }\n    }\n  }\n\n  .mdc-text-field__affix--prefix {\n    @include _prefix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _prefix-end-aligned($query: $query);\n    }\n  }\n\n  .mdc-text-field__affix--suffix {\n    @include _suffix($query: $query);\n\n    .mdc-text-field--end-aligned & {\n      @include _suffix-end-aligned($query: $query);\n    }\n  }\n\n  // Variants\n\n  .mdc-text-field--filled {\n    @include _filled($query);\n\n    &.mdc-text-field--no-label {\n      @include _filled-no-label($query);\n    }\n  }\n\n  .mdc-text-field--outlined {\n    @include outlined_($query);\n\n    .mdc-notched-outline {\n      @include _outlined-notched-outline($query);\n    }\n  }\n\n  // Other Variations\n\n  .mdc-text-field--textarea {\n    @include textarea_($query);\n\n    .mdc-text-field__input {\n      @include _textarea-input($query);\n    }\n\n    &.mdc-text-field--filled {\n      @include _textarea-filled($query);\n\n      .mdc-text-field__input {\n        @include _textarea-filled-input($query);\n      }\n\n      &.mdc-text-field--no-label {\n        .mdc-text-field__input {\n          @include _textarea-filled-no-label-input($query);\n        }\n      }\n    }\n\n    &.mdc-text-field--outlined {\n      @include _textarea-outlined($query);\n\n      .mdc-text-field__input {\n        @include _textarea-outlined-input($query);\n      }\n\n      .mdc-floating-label {\n        @include _textarea-outlined-floating-label($query);\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        @include _textarea-input-with-internal-counter($query);\n      }\n\n      .mdc-text-field-character-counter {\n        @include _textarea-internal-counter($query);\n      }\n    }\n  }\n\n  // Resizer element does not need to be under mdc-text-field--textarea, that\n  // just adds specificity\n  .mdc-text-field__resizer {\n    @include _textarea-resizer($query);\n\n    .mdc-text-field--filled & {\n      @include _textarea-filled-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-filled-resizer-children($query);\n      }\n    }\n\n    .mdc-text-field--outlined & {\n      @include _textarea-outlined-resizer($query);\n\n      .mdc-text-field__input,\n      .mdc-text-field-character-counter {\n        @include _textarea-outlined-resizer-children($query);\n      }\n    }\n  }\n\n  .mdc-text-field--with-leading-icon {\n    @include _padding-horizontal-with-leading-icon($query);\n\n    &.mdc-text-field--filled {\n      @include with-leading-icon_($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include outlined-with-leading-icon_($query);\n    }\n  }\n\n  .mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-trailing-icon($query);\n\n    &.mdc-text-field--filled {\n      @include _with-trailing-icon($query);\n    }\n\n    &.mdc-text-field--outlined {\n      @include _outlined-with-trailing-icon($query);\n    }\n  }\n\n  .mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n    @include _padding-horizontal-with-both-icons($query);\n\n    &.mdc-text-field--filled {\n      @include _with-leading-and-trailing-icon($query);\n    }\n  }\n\n  // postcss-bem-linter: define text-field-helper-text\n  .mdc-text-field-helper-line {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      justify-content: space-between;\n      box-sizing: border-box;\n    }\n\n    .mdc-text-field + & {\n      @include feature-targeting.targets($feat-structure) {\n        padding-right: variables.$helper-line-padding;\n        padding-left: variables.$helper-line-padding;\n      }\n    }\n  }\n  // postcss-bem-linter: end\n\n  // mdc-form-field tweaks to align text field label correctly\n  // stylelint-disable selector-max-type --\n  // TODO: document why this disable is neccessary\n  .mdc-form-field > .mdc-text-field + label {\n    @include feature-targeting.targets($feat-structure) {\n      align-self: flex-start;\n    }\n  }\n  // stylelint-enable selector-max-type\n\n  // States\n  .mdc-text-field--focused {\n    @include focused_($query);\n\n    &.mdc-text-field--outlined {\n      @include _focused-outlined($query);\n\n      &.mdc-text-field--textarea {\n        @include _focused-outlined-textarea($query);\n      }\n    }\n  }\n\n  .mdc-text-field--invalid {\n    @include invalid_($query);\n  }\n\n  .mdc-text-field--disabled {\n    @include disabled_($query);\n\n    &.mdc-text-field--filled {\n      @include _disabled-filled($query);\n    }\n\n    .mdc-text-field__input {\n      @include _disabled-input($query);\n    }\n  }\n\n  .mdc-text-field--end-aligned {\n    @include end-aligned_($query);\n  }\n\n  .mdc-text-field--ltr-text {\n    @include _ltr-text($query);\n\n    &.mdc-text-field--end-aligned {\n      @include _ltr-text-end-aligned($query);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other text field styles. It is recommended that most users use `mdc-text-field-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-text-field--filled {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n///\n/// Sets density scale for default text field variant.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n///\n@mixin density(\n  $density-scale,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height(\n    $height,\n    $minimum-height-for-filled-label: $minimum-height-for-filled-label,\n    $query: $query\n  );\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field (Excluding outlined text field with leading icon).\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for outlined text field with leading icon.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-with-leading-icon-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include outlined-with-leading-icon-height($height, $query: $query);\n  // TODO(b/151839219): resize icons and adjust label position\n  // @if $density-scale < 0 {\n  //   @include icon-mixins.size(icon-variables.$dense-icon-size);\n  // }\n}\n\n///\n/// Sets density scale for filled textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin filled-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $textfield-height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $no-label-margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $no-label-margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-filled-no-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and filled). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--filled {\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    @if $density-scale >= -1 {\n      $keyframe-suffix: text-field-filled-#{$density-scale};\n      $label-top: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-label-density-config,\n        $density-scale: math.div($density-scale, 2),\n        $property-name: top,\n      );\n\n      // Adjust the floating position and animation/keyframes of the floating\n      // label by the new position of the resting label\n      $label-top-difference: variables.$textarea-outlined-label-top -\n        $label-top;\n\n      // Floating label position\n      @include floating-label-mixins.float-position(\n        variables.$textarea-filled-label-position-y - $label-top-difference,\n        $query: $query\n      );\n\n      // Floating label animation\n      @include floating-label-mixins.shake-animation(\n        $keyframe-suffix,\n        $query: $query\n      );\n      @at-root {\n        @include floating-label-mixins.shake-keyframes(\n          $keyframe-suffix,\n          variables.$textarea-filled-label-position-y - $label-top-difference,\n          0%,\n          $query: $query\n        );\n      }\n\n      // Resting label position\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          top: $label-top;\n        }\n      }\n\n      $margin-bottom: density-functions.prop-value(\n        $density-config: variables.$textarea-filled-density-config,\n        $density-scale: $density-scale,\n        $property-name: margin-bottom,\n      );\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-bottom: $margin-bottom;\n        }\n      }\n    } @else {\n      // The textarea is too dense to show a floating label\n      .mdc-floating-label {\n        @include feature-targeting.targets($feat-structure) {\n          display: none;\n        }\n      }\n\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--no-label {\n      .mdc-text-field__input {\n        @include feature-targeting.targets($feat-structure) {\n          margin-top: $no-label-margin-top;\n          margin-bottom: $no-label-margin-bottom;\n        }\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for outlined textarea.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`. Default is `0`.\n///\n@mixin outlined-textarea-density(\n  $density-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $keyframe-suffix: text-field-outlined-#{$density-scale};\n  $label-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-label-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: top,\n  );\n  $textfield-height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n  $margin-top: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-top,\n  );\n  $margin-bottom: density-functions.prop-value(\n    $density-config: variables.$textarea-outlined-density-config,\n    $density-scale: math.div($density-scale, 2),\n    $property-name: margin-bottom,\n  );\n\n  // Textarea mixins require two modifier classes since two are used internally\n  // for styles (textarea and outlined). An extra class is added for the public\n  // mixin so that only a single public class is needed for specificity.\n  &.mdc-text-field--outlined {\n    // Adjust the floating position and animation/keyframes of the floating\n    // label by the new position of the resting label\n    $label-top-difference: variables.$textarea-outlined-label-top - $label-top;\n\n    // Floating label position\n    @include notched-outline-mixins.floating-label-float-position-absolute(\n      variables.$textarea-outlined-label-position-y - $label-top-difference,\n      $query: $query\n    );\n\n    // Floating label animation\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n    @at-root {\n      @include floating-label-mixins.shake-keyframes(\n        $keyframe-suffix,\n        variables.$textarea-outlined-label-position-y - $label-top-difference,\n        0%,\n        $query: $query\n      );\n    }\n\n    // Resting label position\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        top: $label-top;\n      }\n    }\n\n    .mdc-text-field__resizer {\n      @include feature-targeting.targets($feat-structure) {\n        min-height: $textfield-height;\n      }\n    }\n\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: $margin-top;\n        margin-bottom: $margin-bottom;\n      }\n    }\n\n    &.mdc-text-field--with-internal-counter {\n      .mdc-text-field__input {\n        // Space between textarea and internal counter should not be affected\n        @include _textarea-input-with-internal-counter($query);\n      }\n    }\n  }\n}\n\n///\n/// Sets the minimum number of rows for a textarea a textarea may be resized to.\n///\n/// For IE11 this mixin can be used instead of the rows attribute.\n///\n/// @param {Number} $rows - The minimum number of rows for a textarea.\n/// @param {Number} $line-height - The line-height of the textarea.\n///\n@mixin textarea-min-rows(\n  $rows,\n  $line-height: variables.$textarea-line-height,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      min-height: $rows * $line-height;\n    }\n  }\n}\n\n///\n/// Sets height of default text field variant.\n///\n/// @param {Number} $height\n/// @param {Number} $minimum-height-for-filled-label Sets the minimum height for\n///     filled textfields at which to allow floating labels.\n/// @access public\n///\n@mixin height(\n  $height,\n  $minimum-height-for-filled-label: variables.$minimum-height-for-filled-label,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n\n  // We can only hide the label (when there's not enough vertical space for it)\n  // if we know the container height at compilation time.\n  // That's not the case when $height is a custom property.\n  @if not custom-properties.is-custom-prop($height) {\n    @if $height < $minimum-height-for-filled-label {\n      @include _filled-no-label($query: $query);\n    }\n  }\n}\n\n///\n/// Sets height of outlined text field variant (Excluding outlined text field with leading icon).\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-height(\n  $height,\n  $keyframe-suffix: text-field-outlined-#{$height},\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      $query: $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets height of outlined text field with leading icon variant.\n///\n/// @param {Number} $height\n/// @param {String} $keyframe-suffix - Optional suffix to use for generated\n///     floating label keyframes\n/// @access public\n///\n@mixin outlined-with-leading-icon-height(\n  $height,\n  $keyframe-suffix: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // This extra specificity is needed because textfield applies the below mixin\n  // already to two selectors (outlined + with-leading-icon). To override\n  // them with a new label position and animation, another selector is needed.\n  &.mdc-text-field--outlined {\n    @include _outlined-with-leading-icon-floating-label-position-animation(\n      $height,\n      $keyframe-suffix,\n      $query\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n// Mixin that sets the floating label position and animations for a given height.\n// This mixin is separate to allow outlined-with-leading-icon-height() to\n// provide greater specificity over the default mixin that adds styles for\n// outlined with leading icons.\n@mixin _outlined-with-leading-icon-floating-label-position-animation(\n  $height,\n  $keyframe-suffix: text-field-outlined-with-leading-icon-#{$height},\n  $query: feature-targeting.all()\n) {\n  $positionY: variables.get-outlined-label-position-y($height);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    $positionY,\n    variables.$outlined-with-leading-icon-label-position-x,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    $keyframe-suffix,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix,\n      $positionY,\n      variables.$outlined-with-leading-icon-label-position-x,\n      $query: $query\n    );\n  }\n\n  $keyframe-suffix-rtl: #{$keyframe-suffix}-rtl;\n  @include rtl.rtl {\n    @include floating-label-mixins.shake-animation(\n      $keyframe-suffix,\n      $query: $query\n    );\n  }\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      $keyframe-suffix-rtl,\n      $positionY,\n      -(variables.$outlined-with-leading-icon-label-position-x),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets shape radius of default text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of default text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @if (meta.type-of($radius) == 'list') and\n    (list.length($radius) > 2) and\n    (list.nth($radius, 3) != 0 or list.nth($radius, 4) != 0)\n  {\n    @error \"mdc-textfield: Invalid radius #{$radius}. Only top-left and top-right corners may be customized.\";\n  }\n\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  $masked-radius: shape-functions.mask-radius($radius, 1 1 0 0);\n\n  $fallback: if(\n    custom-properties.is-custom-prop($radius),\n    custom-properties.get-fallback($radius),\n    null\n  );\n\n  @if meta.type-of($fallback) == 'list' {\n    $fallback: css.unpack-value($fallback);\n    $first: list.nth($masked-radius, 1);\n    $second: list.nth($masked-radius, 2);\n    $third: list.nth($masked-radius, 3);\n    $fourth: list.nth($masked-radius, 4);\n    $masked-radius: (\n      if(\n        custom-properties.is-custom-prop($first),\n        custom-properties.set-fallback($first, list.nth($fallback, 1)),\n        $first\n      ),\n      if(\n        custom-properties.is-custom-prop($second),\n        custom-properties.set-fallback($second, list.nth($fallback, 2)),\n        $second\n      ),\n      if(\n        custom-properties.is-custom-prop($third),\n        custom-properties.set-fallback($third, list.nth($fallback, 3)),\n        $third\n      ),\n      if(\n        custom-properties.is-custom-prop($fourth),\n        custom-properties.set-fallback($fourth, list.nth($fallback, 4)),\n        $fourth\n      )\n    );\n  }\n\n  @include shape-mixins.radius(\n    $masked-radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n}\n\n@mixin textarea-shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.shape-radius(\n    $radius,\n    $rtl-reflexive,\n    $query: $query\n  );\n}\n\n///\n/// Customizes the color of the text entered into an enabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the entered text in a disabled text field.\n/// @param {Color} $color - The desired input text color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in an enabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the placeholder in a disabled text field.\n/// @param {Color} $color - The desired placeholder text color.\n///\n@mixin disabled-placeholder-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include placeholder-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when enabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the background color of the text field or textarea when disabled.\n/// @param {Color} $color - The desired background color.\n///\n@mixin disabled-fill-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include fill-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the disabled text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin disabled-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the hover text field bottom line color for the filled variant.\n/// @param {Color} $color - The desired bottom line color.\n///\n@mixin hover-bottom-line-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-bottom-line-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the default line ripple of the text field.\n/// @param {Color} $color - The desired line ripple color.\n///\n@mixin line-ripple-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include line-ripple-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in an enabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin label-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the text color of the label in a disabled text field.\n/// @param {Color} $color - The desired label text color.\n///\n@mixin disabled-label-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include label-ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the border color of the outlined text field or textarea.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is hovered.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin hover-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include hover-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is focused.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin focused-outline-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include focused-outline-color_($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the outline border color when the text field or textarea is disabled.\n/// @param {Color} $color - The desired outline border color.\n///\n@mixin disabled-outline-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the caret color of the text field or textarea.\n/// @param {Color} $color - The desired caret color.\n///\n@mixin caret-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(caret-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the color of the prefix text for an enabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin prefix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the prefix text for a disabled text field.\n/// @param {Color} $color - The desired prefix text color.\n///\n@mixin disabled-prefix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _prefix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for an enabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin suffix-color($color, $query: feature-targeting.all()) {\n  @include if-enabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Customizes the color of the suffix text for a disabled text field.\n/// @param {Color} $color - The desired suffix text color.\n///\n@mixin disabled-suffix-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _suffix-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets shape radius of outlined text field variant.\n///\n/// @param {Number} $radius Shape radius value in `px` or in percentage.\n/// @param {Number} $text-field-height Height of outlined text field variant. Required only when `$radius` is in\n///     percentage unit and if text field has custom height. Defaults to `variables.$height`.\n/// @param {Boolean} $rtl-reflexive Set to true to flip shape radius in RTL context. Defaults to `false`.\n///\n@mixin outline-shape-radius(\n  $radius,\n  $density-scale: variables.$density-scale,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $height: density-functions.prop-value(\n    $density-config: $_density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-notched-outline {\n    @include notched-outline-mixins.shape-radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $height\n  );\n  $unpacked-radius: shape-functions.unpack-radius($resolved-radius);\n  $top-left-radius: list.nth($unpacked-radius, 1);\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-radius: list.nth($unpacked-radius, 2);\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n\n  @if (\n    $top-left-is-custom-prop or\n      $top-right-is-custom-prop or\n      $top-left-radius-px >\n      notched-outline-variables.$leading-width\n  ) {\n    // The horizontal padding only needs to be overriden from the base padding\n    // if the radius is a custom property, or if the top-left radius is a value\n    // that is large than that default notched outline's leading width.\n    @include _outline-shape-radius-horizontal-padding(\n      $top-left-radius,\n      $top-right-radius,\n      $query: $query\n    );\n\n    + .mdc-text-field-helper-line {\n      @include _outline-shape-radius-horizontal-padding(\n        $top-left-radius,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n\n    // Ensure that leading/trailing icon padding is overriden. Even if the\n    // top left/right isn't a custom property or the leading isn't larger, we\n    // still need to override. The above left/right padding rules have more\n    // specificty than the original leading/trailing icon rules, so we need to\n    // re-apply them.\n    // Additionally, if the top left/right radii _are_ custom properties, we\n    // should use those instead.\n\n    &.mdc-text-field--with-leading-icon {\n      @if ($top-right-is-custom-prop) {\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-left: 0;\n        }\n        @include _apply-outline-shape-padding(\n          padding-right,\n          $top-right-radius,\n          $query: $query\n        );\n\n        @include rtl.rtl {\n          @include _apply-outline-shape-padding(\n            padding-left,\n            $top-right-radius,\n            $query: $query\n          );\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-right: 0;\n          }\n        }\n      } @else {\n        @include _padding-horizontal-with-leading-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-trailing-icon {\n      @if (\n        $top-left-is-custom-prop or\n          $top-left-radius-px >\n          notched-outline-variables.$leading-width\n      ) {\n        @include _apply-outline-shape-padding(\n          padding-left,\n          $top-left-radius,\n          $add-label-padding: true,\n          $query: $query\n        );\n        @include feature-targeting.targets($feat-structure) {\n          @include rtl.ignore-next-line();\n          padding-right: 0;\n        }\n\n        @include rtl.rtl {\n          @include feature-targeting.targets($feat-structure) {\n            @include rtl.ignore-next-line();\n            padding-left: 0;\n          }\n          @include _apply-outline-shape-padding(\n            padding-right,\n            $top-left-radius,\n            $add-label-padding: true,\n            $query: $query\n          );\n        }\n      } @else {\n        @include _padding-horizontal-with-trailing-icon($query);\n      }\n    }\n\n    &.mdc-text-field--with-leading-icon.mdc-text-field--with-trailing-icon {\n      @include _padding-horizontal-with-both-icons($query);\n    }\n  }\n}\n\n@mixin _outline-shape-radius-horizontal-padding(\n  $top-left-radius,\n  $top-right-radius,\n  $query: feature-targeting.all()\n) {\n  @include _apply-outline-shape-padding(\n    padding-left,\n    $top-left-radius,\n    $add-label-padding: true,\n    $query: $query\n  );\n  @include _apply-outline-shape-padding(\n    padding-right,\n    $top-right-radius,\n    $query: $query\n  );\n\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n  $top-right-is-custom-prop: custom-properties.is-custom-prop(\n    $top-right-radius\n  );\n  $top-right-radius-px: $top-right-radius;\n  @if ($top-right-is-custom-prop) {\n    $top-right-radius-px: custom-properties.get-fallback($top-right-radius);\n  }\n\n  @if (\n    (\n        $top-left-is-custom-prop and\n          $top-right-is-custom-prop and not\n          custom-properties.are-equal($top-left-radius, $top-right-radius)\n      ) or\n      $top-left-radius-px !=\n      $top-right-radius-px\n  ) {\n    // Normally base horizontal padding doesn't need RTL, but if the values\n    // are different or they are two different custom properties, they need to\n    // be reversed.\n    @include rtl.rtl {\n      @include _apply-outline-shape-padding(\n        padding-right,\n        $top-left-radius,\n        $add-label-padding: true,\n        $query: $query\n      );\n      @include _apply-outline-shape-padding(\n        padding-left,\n        $top-right-radius,\n        $query: $query\n      );\n    }\n  }\n}\n\n@mixin _apply-outline-shape-padding(\n  $property,\n  $padding,\n  $add-label-padding: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $padding-is-custom-prop: custom-properties.is-custom-prop($padding);\n  $padding-px: $padding;\n  @if ($padding-is-custom-prop) {\n    $padding-px: custom-properties.get-fallback($padding);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    // The shape should only change the padding if the radius becomes greater\n    // than the default padding. That means we need to add more padding.\n    @if ($padding-px > variables.$padding-horizontal) {\n      // Set a px value if it's greater. This is either the only value (if\n      // we're given an exact value), or an IE11 fallback if we're given a\n      // custom property and the fallback value is greater than the padding.\n      $value: $padding-px;\n      @if ($add-label-padding) {\n        // If this is for the top-left leading, add the notched outline padding\n        // to keep it aligned with the label\n        $value: $padding-px + notched-outline-variables.$padding;\n      }\n\n      @include rtl.ignore-next-line();\n      #{$property}: $value;\n      @if ($padding-is-custom-prop) {\n        // Add an alternate GSS tag b/c this was an IE11 fallback and we're\n        // going to add another property with the var() value\n        /* @alternate */\n      }\n    }\n    @if ($padding-is-custom-prop) {\n      // If it's a custom property, always add it since the value may change\n      // to be greater than the padding at runtime, even if the fallback is\n      // not currently greater than the default padding.\n      $value: custom-properties.create-var($padding);\n      @if ($add-label-padding) {\n        $value: calc(#{$value} + #{notched-outline-variables.$padding});\n      }\n\n      // Interpolation is a workaround for sass/sass#3259.\n      @supports (top: max(#{0%})) {\n        // A max() function makes this runtime dynamic. The padding will be\n        // whichever is greater: the default horizontal padding, or the calculated\n        // custom property plus extra padding.\n        @include rtl.ignore-next-line();\n        #{$property}: max(#{variables.$padding-horizontal}, #{$value});\n      }\n    }\n  }\n}\n\n///\n/// Sets the CSS transition for the floating label's 'float' animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin floating-label-float-transition(\n  $duration-ms,\n  $timing-function: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-floating-label {\n    @include floating-label-mixins.float-transition(\n      $duration-ms,\n      $timing-function,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets custom font size of the input.\n///\n/// @param {number} $font-size - Overrides the font size.\n///\n@mixin input-font-size($font-size, $query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-typography) {\n      font-size: $font-size;\n    }\n  }\n}\n\n///\n/// Sets custom font family of the input.\n///\n/// @param {String} $font-family - Selected font family.\n///\n@mixin input-font-family($font-family, $query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-typography) {\n      font-family: $font-family;\n    }\n  }\n}\n\n// Private mixins\n\n// Base shared styles\n@mixin _base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Shape\n  @include shape-radius(variables.$shape-radius, $query: $query);\n\n  // Colors\n  @include label-color(variables.$label, $query: $query);\n  @include ink-color(variables.$ink-color, $query: $query);\n  @include placeholder-color(variables.$placeholder-ink-color, $query: $query);\n  @include caret-color(primary, $query: $query);\n  @include helper-text-mixins.helper-text-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color(\n    variables.$helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color(\n    variables.$icon-color,\n    $query: $query\n  );\n  @include prefix-color(variables.$affix-color, $query: $query);\n  @include suffix-color(variables.$affix-color, $query: $query);\n\n  // Floating Label\n  @include floating-label_($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    // display and align-items are necessary to make the text field participate\n    // in baseline alignment, even though some variants are 'centered'. Those\n    // variants should use the _baseline-center-aligned() mixin\n    display: inline-flex;\n    align-items: baseline;\n    padding: 0 variables.$padding-horizontal;\n    position: relative;\n    box-sizing: border-box;\n    overflow: hidden;\n    /* @alternate */\n    will-change: opacity, transform, color;\n  }\n}\n\n// This mixin adds styles to visually center the text within the text field.\n// Sibling text will align to the baseline and appear centered next to the\n// text field.\n@mixin _baseline-center-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // In order for a flexbox container to participate in baseline alignment,\n    // it follows these rules to determine where its baseline is:\n    // https://www.w3.org/TR/css-flexbox-1/#flex-baselines\n    //\n    // In order to avoid leading icons 'controlling' the baseline (since they\n    // are the first child), flexbox will generate a baseline from any child\n    // flex items that participate in baseline alignment.\n    //\n    // Icons are set to \"align-self: center\", while all other children are\n    // aligned to baseline. The next problem is deciding which child is\n    // used to determine the baseline.\n    //\n    // According to spec, the item with the largest distance between its\n    // baseline and the edge of the cross axis is placed flush with that edge,\n    // making it the baseline of the container.\n    // https://www.w3.org/TR/css-flexbox-1/#baseline-participation\n    //\n    // For the filled variant, the pseudo ::before strut is the 'largest'\n    // child since the input has a height of 28px and the strut is 40px. We\n    // can emulate center alignment and force the baseline to use the input\n    // text by making the input the full height of the container and removing\n    // the baseline strut.\n\n    // IE11 does not respect this, and makes the leading icon (if present) the\n    // baseline. This is a gap with IE11 that we have accepted.\n    .mdc-text-field__input {\n      height: 100%;\n    }\n  }\n}\n\n@mixin _padding-horizontal-with-leading-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, 0, variables.$padding-horizontal);\n  }\n}\n\n@mixin _padding-horizontal-with-trailing-icon($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(padding, variables.$padding-horizontal, 0);\n  }\n}\n\n@mixin _padding-horizontal-with-both-icons($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    padding-left: 0;\n    @include rtl.ignore-next-line();\n    padding-right: 0;\n  }\n}\n\n@mixin floating-label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: 50%;\n      transform: translateY(-50%);\n      pointer-events: none;\n    }\n  }\n}\n\n// Filled\n\n@mixin _filled($query: feature-targeting.all()) {\n  // Text Field intentionally omits press ripple, so each state needs to be specified individually.\n  @include ripple-theme.states-base-color(\n    variables.$ink-color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-hover-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, hover),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include ripple-theme.states-focus-opacity(\n    ripple-theme.states-opacity(variables.$ink-color, focus),\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n\n  @include height(variables.$height, $query: $query);\n  @include typography.baseline-top(\n    variables.$filled-baseline-top,\n    $query: $query\n  );\n  @include fill-color(variables.$background, $query: $query);\n  @include bottom-line-color(variables.$bottom-line-idle, $query: $query);\n  @include hover-bottom-line-color(\n    variables.$bottom-line-hover,\n    $query: $query\n  );\n  @include line-ripple-color_(primary, $query: $query);\n  @include _filled-floating-label($query);\n}\n\n@mixin _filled-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, variables.$label-offset);\n    }\n  }\n\n  @include floating-label-mixins.float-position(\n    variables.$label-position-y,\n    $query: $query\n  );\n}\n\n// Filled variant with no label. This variant centers the text elements and\n// hides the label and is used with there is explicitly no label provided or\n// when the height of the text field is too small for a label to be allowed.\n@mixin _filled-no-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _baseline-center-aligned($query);\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-floating-label {\n      display: none;\n    }\n\n    &::before {\n      // Remove baseline-top strut\n      display: none;\n    }\n  }\n\n  // Safari only\n  @supports (-webkit-hyphens: none) {\n    .mdc-text-field__affix {\n      @include _centered-affix-safari-support($query: $query);\n    }\n  }\n}\n\n// Outlined\n\n@mixin outlined_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include outlined-height(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined,\n    $query: $query\n  );\n  @include _baseline-center-aligned($query: $query);\n  @include outline-color(variables.$outlined-idle-border, $query: $query);\n  @include hover-outline-color(\n    variables.$outlined-hover-border,\n    $query: $query\n  );\n  @include focused-outline-color(primary, $query: $query);\n  @include outline-shape-radius(variables.$shape-radius, $query: $query);\n  @include notched-outline-mixins.notch-offset(\n    notched-outline-variables.$border-width,\n    $query: $query\n  );\n  @include ripple-theme.states-base-color(\n    transparent,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n  @include _outlined-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    overflow: visible;\n  }\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // TODO(b/154349735): Investigate the neccessity of these styles\n      display: flex;\n      // stylelint-disable-next-line declaration-no-important --\n      // FF adds unwanted border in HC mode on windows.\n      border: none !important;\n      background-color: transparent;\n    }\n  }\n}\n\n@mixin _outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, notched-outline-variables.$padding);\n    }\n  }\n}\n\n@mixin _outlined-notched-outline($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Force the outline to appear \"above\" the textfield elements, even though\n    // it is absolutely positioned and comes before the input in the DOM. This\n    // is primarily for the textarea scrollbar and resize elements, which may\n    // clip with with outline border.\n    z-index: 1;\n  }\n}\n\n// States\n\n@mixin disabled_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ink-color_(variables.$disabled-ink-color, $query: $query);\n  @include placeholder-color_(\n    variables.$disabled-placeholder-ink-color,\n    $query: $query\n  );\n  @include label-ink-color_(variables.$disabled-label-color, $query: $query);\n  @include helper-text-mixins.helper-text-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include character-counter-mixins.character-counter-color_(\n    variables.$disabled-helper-text-color,\n    $query: $query\n  );\n  @include icon-mixins.leading-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include icon-mixins.trailing-icon-color_(\n    variables.$disabled-icon,\n    $query: $query\n  );\n  @include _prefix-color(variables.$disabled-affix-color, $query: $query);\n  @include _suffix-color(variables.$disabled-affix-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color_(variables.$disabled-border, $query: $query);\n  @include notched-outline-mixins.color(\n    variables.$outlined-disabled-border,\n    $query: $query\n  );\n\n  @include dom.forced-colors-mode {\n    @include placeholder-color_(GrayText, $query: $query);\n    @include label-ink-color_(GrayText, $query: $query);\n    @include helper-text-mixins.helper-text-color_(GrayText, $query: $query);\n    @include character-counter-mixins.character-counter-color_(\n      GrayText,\n      $query: $query\n    );\n    @include icon-mixins.leading-icon-color_(GrayText, $query: $query);\n    @include icon-mixins.trailing-icon-color_(GrayText, $query: $query);\n    @include _prefix-color(GrayText, $query: $query);\n    @include _suffix-color(GrayText, $query: $query);\n\n    // Mixins that are ok to include since they target variant-specific elements\n    @include bottom-line-color_(GrayText, $query: $query);\n    @include notched-outline-mixins.color(GrayText, $query: $query);\n  }\n\n  @include dom.forced-colors-mode($exclude-ie11: true) {\n    .mdc-text-field__input {\n      @include feature-targeting.targets($feat-structure) {\n        background-color: Window;\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        z-index: 1;\n      }\n    }\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    pointer-events: none;\n  }\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n    }\n  }\n}\n\n@mixin _disabled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // disabled inputs should still allow users to interact with them to select\n    // text and scroll for textareas\n    pointer-events: auto;\n  }\n}\n\n@mixin _disabled-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include fill-color_(variables.$disabled-background, $query: $query);\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      // prevent ripple from displaying on hover when some interactible\n      // elements like input and resize handles are hovered\n      display: none;\n    }\n  }\n}\n\n@mixin invalid_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include hover-bottom-line-color(variables.$error, $query: $query);\n  @include line-ripple-color(variables.$error, $query: $query);\n  @include label-color(variables.$error, $query: $query);\n  @include helper-text-mixins.helper-text-validation-color(\n    variables.$error,\n    $query: $query\n  );\n  @include caret-color(variables.$error, $query: $query);\n  @include icon-mixins.trailing-icon-color(variables.$error, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include bottom-line-color(variables.$error, $query: $query);\n  @include outline-color(variables.$error, $query: $query);\n  @include hover-outline-color(variables.$error, $query: $query);\n  @include focused-outline-color(variables.$error, $query: $query);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin focused_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include label-color(variables.$focused-label-color, $query: $query);\n\n  // Mixins that are ok to include since they target variant-specific elements\n  @include notched-outline-mixins.stroke-width(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n\n  + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text:not(.mdc-text-field-helper-text--validation-msg) {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin _focused-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(\n    variables.$outlined-stroke-width,\n    $query: $query\n  );\n}\n\n@mixin _focused-outlined-textarea($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n}\n\n// Icons\n\n@mixin with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($icon-padding, $query: $query);\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $icon-padding);\n    }\n  }\n\n  $truncation: $icon-padding + variables.$padding-horizontal;\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-trailing-icon($query: feature-targeting.all()) {\n  $truncation: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right +\n    variables.$label-offset;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin _with-leading-and-trailing-icon($query: feature-targeting.all()) {\n  $leading-icon: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $trailing-icon: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  $truncation: $leading-icon + $trailing-icon;\n\n  .mdc-floating-label {\n    @include _truncate-floating-label-max-width($truncation, $query: $query);\n  }\n\n  .mdc-floating-label--float-above {\n    @include _truncate-floating-label-floated-max-width(\n      $truncation,\n      $query: $query\n    );\n  }\n}\n\n@mixin outlined-with-leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  $icon-padding: icon-variables.$leading-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$leading-icon-padding-right;\n  $left-spacing: $icon-padding - notched-outline-variables.$leading-width;\n\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(left, $left-spacing);\n    }\n  }\n\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n\n  // Floating label position and animation\n  @include _outlined-with-leading-icon-floating-label-position-animation(\n    $height: variables.$height,\n    $keyframe-suffix: text-field-outlined-leading-icon,\n    $query: $query\n  );\n}\n\n///\n/// Applied to the outlined text field with a trailing icon\n///\n@mixin _outlined-with-trailing-icon($query: feature-targeting.all()) {\n  // Resting label position\n  $icon-padding: icon-variables.$trailing-icon-padding-left +\n    icon-variables.$icon-size + icon-variables.$trailing-icon-padding-right;\n  // Notch width\n  $notch-truncation: $icon-padding + notched-outline-variables.$leading-width;\n\n  @include _truncate-notched-outline-max-width(\n    $notch-truncation,\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the notched outline by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the notched outline max-width\n///\n@mixin _truncate-notched-outline-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include notched-outline-mixins.notch-max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  @include floating-label-mixins.max-width(\n    calc(100% - #{$truncation}),\n    $query: $query\n  );\n}\n\n///\n/// Truncates the max-width of the floating label by the given amount while scaling by the given scale value\n///\n/// @param {Number} $truncation - Amount to truncate the floating label max-width\n///\n@mixin _truncate-floating-label-floated-max-width(\n  $truncation,\n  $query: feature-targeting.all()\n) {\n  $scale: floating-label-variables.$float-scale;\n  @include floating-label-mixins.max-width(\n    calc(100% / #{$scale} - #{$truncation} / #{$scale}),\n    $query: $query\n  );\n}\n\n// Textarea\n\n@mixin textarea_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include _textarea-floating-label($query);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-direction: column;\n    align-items: center;\n    width: auto;\n    height: auto;\n    padding: 0; // see below for explanation\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: none;\n  }\n}\n\n@mixin _textarea-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: stretch;\n    display: inline-flex;\n    flex-direction: column;\n    flex-grow: 1;\n    max-height: 100%;\n    max-width: 100%;\n    min-height: variables.$height;\n    // 'stretch' is the preferred rule here. It will allow the textarea to grow\n    // to the min/max width of the container, but if an explicit width is set,\n    // it cannot be resized horizontally.\n    // Stretch is still a working draft. Chrome and Firefox have it implemented\n    // with 'available' prefixes. fit-content is another good target for\n    // Safari since it works in almost all use cases except when an explicit\n    // width is set (the user can make the textarea smaller than the container).\n    // None of this matters for IE11, which doesn't support resize.\n    min-width: fit-content;\n    /* @alternate */\n    min-width: -moz-available;\n    /* @alternate */\n    min-width: -webkit-fill-available;\n    overflow: hidden;\n    resize: both;\n  }\n}\n\n@mixin _textarea-filled-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element up by a margin amount to make space for the\n  // resize handle. For filled elements, the resize handle directly touches\n  // the bottom line and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-filled-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (down) to compensate.\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: translateY($y);\n  }\n}\n\n@mixin _textarea-outlined-resizer($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Shift the resizer element left/up by a margin amount to make space for the\n  // resize handle. For outlined elements, the resize handle directly touches\n  // the outline and is hard to see.\n  // Using a margin affects the width and positioning of the overall component\n  // and underlying textarea, which is why a transform is used instead.\n  $x: -1 * variables.$textarea-input-handle-margin;\n  $y: -1 * variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-outlined-resizer-children($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // See above. After shifting the resize wrapper element, all of its children\n  // should be shifted in the opposite direction (right and down) to compensate.\n  $x: variables.$textarea-input-handle-margin;\n  $y: variables.$textarea-input-handle-margin;\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    transform: translateX($x) translateY($y);\n\n    @include rtl.rtl {\n      // Flip the horizontal shifting direction for RTL\n      @include rtl.ignore-next-line();\n      transform: translateX(-1 * $x) translateY($y);\n    }\n  }\n}\n\n@mixin _textarea-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Resting label position\n  .mdc-floating-label {\n    @include feature-targeting.targets($feat-structure) {\n      top: variables.$textarea-label-top;\n    }\n\n    // Resets center aligning the floating label.\n    &:not(.mdc-floating-label--float-above) {\n      @include feature-targeting.targets($feat-structure) {\n        transform: none;\n      }\n    }\n  }\n}\n\n@mixin _textarea-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex-grow: 1;\n    height: auto;\n    min-height: variables.$textarea-line-height;\n    overflow-x: hidden; // https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    overflow-y: auto;\n    box-sizing: border-box;\n    resize: none;\n    // Textarea has horizontal padding instead of the container. This allows the\n    // resize handle to extend to the edge of the container.\n    padding: 0 variables.$padding-horizontal;\n  }\n\n  @include feature-targeting.targets($feat-typography) {\n    line-height: variables.$textarea-line-height;\n  }\n}\n\n@mixin _textarea-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.baseline-bottom(\n    variables.$textarea-internal-counter-baseline-bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    align-self: flex-end;\n    // Needed since padding is on the textarea and not the container\n    padding: 0 variables.$padding-horizontal;\n\n    &::before {\n      // Remove baseline-top\n      display: none;\n    }\n  }\n}\n\n@mixin _textarea-input-with-internal-counter($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-bottom: variables.$textarea-internal-counter-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    &::before {\n      // <textarea> does not align to baseline when it does not have a value,\n      // unlike <input>, so we have to use padding to fake it instead\n      display: none;\n    }\n  }\n\n  // Floating label position\n  @include floating-label-mixins.float-position(\n    variables.$textarea-filled-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-filled,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-filled,\n      variables.$textarea-filled-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-filled-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-input-margin-top;\n    margin-bottom: variables.$textarea-filled-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-filled-no-label-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-filled-no-label-input-margin-top;\n    margin-bottom: variables.$textarea-filled-no-label-input-margin-bottom;\n  }\n}\n\n@mixin _textarea-outlined($query: feature-targeting.all()) {\n  @include notched-outline-mixins.notch-offset(0, $query: $query);\n\n  // Floating label position\n  @include notched-outline-mixins.floating-label-float-position-absolute(\n    variables.$textarea-outlined-label-position-y,\n    $query: $query\n  );\n\n  // Floating label animation\n  @include floating-label-mixins.shake-animation(\n    textarea-outlined,\n    $query: $query\n  );\n  @at-root {\n    @include floating-label-mixins.shake-keyframes(\n      textarea-outlined,\n      variables.$textarea-outlined-label-position-y,\n      0%,\n      $query: $query\n    );\n  }\n}\n\n@mixin _textarea-outlined-floating-label($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    top: variables.$textarea-outlined-label-top;\n  }\n}\n\n@mixin _textarea-outlined-input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: variables.$textarea-outlined-input-margin-top;\n    margin-bottom: variables.$textarea-outlined-input-margin-bottom;\n  }\n}\n\n// Text, Prefix and Suffix\n\n// Common styles for the text of the text field, including the prefix, suffix,\n// and input.\n@mixin _text($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Exclude setting line-height to keep caret (text cursor) same height as the input text in iOS browser.\n  @include typography.typography(\n    subtitle1,\n    $exclude-props: (line-height),\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    height: variables.$input-height;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 150ms);\n  }\n}\n\n@mixin _input($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    min-width: 0; // Fixes flex issues on Firefox\n    border: none;\n    border-radius: 0;\n    background: none;\n    appearance: none;\n    padding: 0;\n\n    // Remove built-in trailing clear icon on IE11. IE vendor prefixes cannot\n    // be combined with other vendor prefixes like the webkit one below.\n    &::-ms-clear {\n      display: none;\n    }\n\n    // Remove built-in datepicker icon on Chrome\n    &::-webkit-calendar-picker-indicator {\n      display: none;\n    }\n\n    &:focus {\n      outline: none;\n    }\n\n    // Remove red outline on firefox\n    &:invalid {\n      box-shadow: none;\n    }\n  }\n}\n\n@mixin _input-placeholder($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation.standard(opacity, 67ms);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n  }\n}\n\n@mixin _input-placeholder-visible($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition-delay: 40ms;\n    transition-duration: 110ms;\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _affix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include _text($query: $query);\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 0;\n    white-space: nowrap;\n  }\n}\n\n// TODO(b/155467610): Remove when Safari supports baseline alignment\n// https://github.com/material-components/material-components-web/issues/5879\n@mixin _centered-affix-safari-support($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-items: center;\n    align-self: center;\n    display: inline-flex;\n    height: 100%;\n  }\n}\n\n@mixin _affix-visible($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin _prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, right, variables.$prefix-padding);\n  }\n}\n\n@mixin _prefix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      right,\n      variables.$prefix-end-aligned-padding\n    );\n  }\n}\n\n@mixin _suffix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(padding, left, variables.$suffix-padding);\n  }\n}\n\n@mixin _suffix-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-box(\n      padding,\n      left,\n      variables.$suffix-end-aligned-padding\n    );\n  }\n}\n\n// End aligned\n@mixin end-aligned_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-structure) {\n      // IE11 does not support text-align: end\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix to be LTR when in an RTL environment. Other\n// elements such as labels and icons will remain RTL.\n@mixin _ltr-text($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input,\n      .mdc-text-field__affix {\n        @include rtl.ignore-next-line();\n        direction: ltr;\n      }\n\n      .mdc-text-field__affix--prefix {\n        @include rtl.ignore-next-line();\n        padding-left: 0;\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-padding;\n        @include rtl.ignore-next-line();\n        padding-right: 0;\n      }\n\n      // Need to specify an order for all elements since icons maintain their\n      // original positions. We can't just reverse the container.\n      .mdc-text-field__icon--leading {\n        order: 1;\n      }\n\n      .mdc-text-field__affix--suffix {\n        order: 2;\n      }\n\n      .mdc-text-field__input {\n        order: 3;\n      }\n\n      .mdc-text-field__affix--prefix {\n        order: 4;\n      }\n\n      .mdc-text-field__icon--trailing {\n        order: 5;\n      }\n    }\n  }\n}\n\n// Forces input, prefix, and suffix that are already forced to LTR to also be\n// end-aligned. This mixin should be used alongside the styles provided in\n// _ltr-text().\n@mixin _ltr-text-end-aligned($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.rtl {\n      .mdc-text-field__input {\n        // IE11 does not support text-align: end, so we need to duplicate\n        // the LTR end-aligned style here.\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n\n      .mdc-text-field__affix--prefix {\n        // padding-left: 0 provided by _ltr-text mixin\n        @include rtl.ignore-next-line();\n        padding-right: variables.$prefix-end-aligned-padding;\n      }\n\n      .mdc-text-field__affix--suffix {\n        @include rtl.ignore-next-line();\n        padding-left: variables.$suffix-end-aligned-padding;\n        // padding-right: 0 provided by _ltr-text mixin\n      }\n    }\n  }\n}\n\n// Customization\n\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__input {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin placeholder-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__input {\n      @include placeholder-selector_ {\n        @include theme.prop(color, $color);\n      }\n    }\n  }\n}\n\n@mixin fill-color_(\n  $color,\n  $query: feature-targeting.all(),\n  $addAlternate: false\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if ($addAlternate) {\n      /* @alternate */\n    }\n    @include theme.prop(background-color, $color);\n  }\n}\n\n@mixin bottom-line-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin hover-bottom-line-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &:hover .mdc-line-ripple {\n    @include line-ripple-mixins.inactive-color($color, $query: $query);\n  }\n}\n\n@mixin line-ripple-color_($color, $query: feature-targeting.all()) {\n  .mdc-line-ripple {\n    @include line-ripple-mixins.active-color($color, $query: $query);\n  }\n}\n\n@mixin hover-outline-color_($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--focused):hover {\n    .mdc-notched-outline {\n      @include notched-outline-mixins.color($color, $query: $query);\n    }\n  }\n}\n\n@mixin focused-outline-color_($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--focused {\n    @include notched-outline-mixins.color($color, $query: $query);\n  }\n}\n\n@mixin label-ink-color_($color, $query: feature-targeting.all()) {\n  .mdc-floating-label {\n    @include floating-label-mixins.ink-color($color, $query: $query);\n  }\n}\n\n@mixin _prefix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--prefix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n@mixin _suffix-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    .mdc-text-field__affix--suffix {\n      @include theme.prop(color, $color);\n    }\n  }\n}\n\n// Selectors\n\n@mixin placeholder-selector_ {\n  // GSS will combine selectors with the same content, and some browsers have a\n  // CSS quirk where it drops a rule if it does not recognize one of the\n  // selectors.\n  // To avoid GSS combining the ::placeholder and :-ms-input-placeholder\n  // selectors, we wrap them in `@media all`.\n  // TODO(b/142329051)\n  @media all {\n    // ::placeholder needs to be wrapped because IE11 will drop other selectors\n    // with the same content\n    &::placeholder {\n      @content;\n    }\n  }\n\n  @media all {\n    // :-ms-input-placeholder needs to be wrapped because Firefox will drop\n    // other selectors with the same content\n    &:-ms-input-placeholder {\n      @content;\n    }\n  }\n}\n\n// State qualifiers\n\n///\n/// Helps style the text-field only when it's enabled.\n/// @access private\n///\n@mixin if-enabled_ {\n  &:not(.mdc-text-field--disabled) {\n    @content;\n  }\n}\n\n///\n/// Helps style the text-field only when it's disabled.\n/// @access private\n///\n@mixin if-disabled_ {\n  &.mdc-text-field--disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/animation';\n@use '@material/animation/variables';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/feature-targeting/feature-targeting';\n\n// Public mixins\n\n@mixin helper-text-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define text-field-helper-text\n\n  .mdc-text-field-helper-text {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      margin: 0;\n      opacity: 0;\n      will-change: opacity;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation.standard(opacity, 150ms);\n    }\n  }\n\n  .mdc-text-field-helper-text--persistent {\n    @include feature-targeting.targets($feat-animation) {\n      transition: none;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n      will-change: initial;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the helper text following an enabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin helper-text-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the helper text following a disabled text-field.\n/// @param {Color} $color - The desired helper text color.\n///\n@mixin disabled-helper-text-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include helper-text-color_($color, $query);\n  }\n}\n\n@mixin helper-text-validation-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include helper-text-validation-color_($color, $query);\n  }\n}\n\n// Private mixins\n\n@mixin helper-text-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  + .mdc-text-field-helper-line .mdc-text-field-helper-text {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin helper-text-validation-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-text-field--invalid\n    + .mdc-text-field-helper-line\n    .mdc-text-field-helper-text--validation-msg {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/theme/theme';\n@use '@material/rtl/rtl';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/typography/typography';\n\n// Public mixins\n\n@mixin character-counter-core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define text-field-character-counter\n\n  .mdc-text-field-character-counter {\n    @include typography.typography(caption, $query: $query);\n    @include typography.text-baseline($top: 16px, $query: $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      // Keep flex item align to trailing side on absence of helper text.\n      @include rtl.reflexive-box(margin, left, auto);\n      @include rtl.reflexive-box(padding, left, 16px);\n\n      white-space: nowrap;\n    }\n  }\n\n  // postcss-bem-linter: end\n}\n\n///\n/// Customizes the color of the character counter associated with an enabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin character-counter-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color of the character counter associated with a disabled text field.\n/// @param {Color} $color - The desired character counter color.\n///\n@mixin disabled-character-counter-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  &.mdc-text-field--disabled {\n    @include character-counter-color_($color, $query);\n  }\n}\n\n@mixin character-counter-position(\n  $xOffset,\n  $yOffset,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-position(right, $xOffset);\n      position: absolute;\n      bottom: $yOffset;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin character-counter-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Character counter is placed inside mdc-textfield element (for textarea variant) or\n  // inside helper line which is sibling to mdc-textfield.\n  .mdc-text-field-character-counter,\n  + .mdc-text-field-helper-line .mdc-text-field-character-counter {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use './variables';\n\n// Public mixins\n\n@mixin icon-core-styles($query: feature-targeting.all()) {\n  .mdc-text-field__icon {\n    @include icon_($query: $query);\n\n    svg {\n      @include _icon-svg($query: $query);\n    }\n  }\n\n  .mdc-text-field__icon--leading {\n    @include leading-icon_($query: $query);\n  }\n\n  .mdc-text-field__icon--trailing {\n    @include trailing-icon_($query: $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin leading-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icon in an enabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin trailing-icon-color($color, $query: feature-targeting.all()) {\n  &:not(.mdc-text-field--disabled) {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-leading-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include leading-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-trailing-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-text-field--disabled {\n    @include trailing-icon-color_($color, $query);\n  }\n}\n\n///\n/// Customizes the color for the leading/trailing icons in a disabled text-field.\n/// @param {Color} $color - The desired icon color.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include disabled-leading-icon-color($color, $query);\n  @include disabled-trailing-icon-color($color, $query);\n}\n\n/// Sets the size of the leading and trailing icons.\n///\n/// @param {Number} $size - the size of the icon in px\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-text-field__icon {\n      font-size: $size;\n    }\n  }\n}\n\n// Private mixins\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    align-self: center;\n    cursor: pointer;\n  }\n\n  &:not([tabindex]),\n  &[tabindex='-1'] {\n    @include feature-targeting.targets($feat-color) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n}\n\n@mixin _icon-svg($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // SVG children can cause misalignment when displayed as inline since\n    // line-height will be inherited and cause additional vertical space.\n    // Setting the display to block prevents this.\n    display: block;\n  }\n}\n\n@mixin leading-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.reflexive-property(\n      margin,\n      variables.$leading-icon-padding-left,\n      variables.$leading-icon-padding-right\n    );\n  }\n}\n\n@mixin trailing-icon_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: math.div(variables.$touch-target-size - variables.$icon-size, 2);\n    $left-margin: variables.$trailing-icon-padding-left - $padding;\n    $right-margin: variables.$trailing-icon-padding-right - $padding;\n\n    padding: $padding;\n    @include rtl.reflexive-property(margin, $left-margin, $right-margin);\n  }\n}\n\n@mixin leading-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--leading {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin trailing-icon-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-text-field__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:color';\n@use 'sass:map';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as variables2;\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/shadow-dom';\n@use '@material/theme/theme-color';\n\n$custom-property-prefix: 'ripple';\n\n$fade-in-duration: 75ms !default;\n$fade-out-duration: 150ms !default;\n$translate-duration: 225ms !default;\n$states-wash-duration: 15ms !default;\n\n// Notes on states:\n// * focus takes precedence over hover (i.e. if an element is both focused and hovered, only focus value applies)\n// * press state applies to a separate pseudo-element, so it has an additive effect on top of other states\n// * selected/activated are applied additively to hover/focus via calculations at preprocessing time\n\n$dark-ink-opacities: (\n  hover: 0.04,\n  focus: 0.12,\n  press: 0.12,\n  selected: 0.08,\n  activated: 0.12,\n) !default;\n\n$light-ink-opacities: (\n  hover: 0.08,\n  focus: 0.24,\n  press: 0.24,\n  selected: 0.16,\n  activated: 0.24,\n) !default;\n\n// Legacy\n\n$pressed-dark-ink-opacity: 0.16 !default;\n$pressed-light-ink-opacity: 0.32 !default;\n\n// State selector variables used for state selector mixins below.\n$_hover-selector: '&:hover';\n$_focus-selector: '&.mdc-ripple-upgraded--background-focused, &:not(.mdc-ripple-upgraded):focus';\n$_active-selector: '&:not(:disabled):active';\n\n$light-theme: (\n  focus-state-layer-color: theme-color.$on-surface,\n  focus-state-layer-opacity: map.get($dark-ink-opacities, focus),\n  hover-state-layer-color: theme-color.$on-surface,\n  hover-state-layer-opacity: map.get($dark-ink-opacities, hover),\n  pressed-state-layer-color: theme-color.$on-surface,\n  pressed-state-layer-opacity: map.get($dark-ink-opacities, press),\n);\n\n@mixin theme($theme) {\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @if shadow-dom.$css-selector-fallback-declarations {\n    .mdc-ripple-surface {\n      @include theme-styles($theme);\n    }\n  }\n}\n\n$_ripple-theme: (\n  hover-state-layer-color: null,\n  focus-state-layer-color: null,\n  pressed-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  focus-state-layer-opacity: null,\n  pressed-state-layer-opacity: null,\n);\n\n@mixin theme-styles($theme, $ripple-target: '&') {\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  // TODO(b/191298796): Support states layer color for every interactive states.\n  // Use only hover state layer color, ignoring focus and pressed color.\n  @include internal-theme-styles($theme, $ripple-target);\n}\n\n@mixin internal-theme-styles($theme, $ripple-target: '&') {\n  @include theme.validate-theme-styles($_ripple-theme, $theme);\n\n  @include states-base-color(\n    map.get($theme, hover-state-layer-color),\n    $ripple-target: $ripple-target\n  );\n  @include states-hover-opacity(\n    map.get($theme, hover-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-focus-opacity(\n    map.get($theme, focus-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n  @include states-press-opacity(\n    map.get($theme, pressed-state-layer-opacity),\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin states-base-color(\n  $color,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @if not custom-properties.is-custom-prop($color) {\n      $color: custom-properties.create(\n        ripple-color,\n        theme-color.get-custom-property($color)\n      );\n    }\n\n    #{$ripple-target}::before,\n    #{$ripple-target}::after {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes ripple opacities in `hover`, `focus`, or `press` states\n/// @param {map} $opacity-map - map specifying custom opacity of zero or more states\n/// @param {bool} $has-nested-focusable-element - whether the component contains a focusable element in the root\n/// @param {string} $ripple-target - the optional selector for the ripple element\n///\n@mixin states-opacities(\n  $opacity-map: (),\n  $has-nested-focusable-element: false,\n  $ripple-target: '&',\n  $query: feature-targeting.all()\n) {\n  // Ensure sufficient specificity to override base state opacities\n  @if map.get($opacity-map, hover) {\n    @include states-hover-opacity(\n      map.get($opacity-map, hover),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, focus) {\n    @include states-focus-opacity(\n      map.get($opacity-map, focus),\n      $ripple-target: $ripple-target,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $query: $query\n    );\n  }\n\n  @if map.get($opacity-map, press) {\n    @include states-press-opacity(\n      map.get($opacity-map, press),\n      $ripple-target: $ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin states-hover-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity and not custom-properties.is-custom-prop($opacity) {\n    $opacity: custom-properties.create(ripple-hover-opacity, $opacity);\n  }\n\n  // Background wash styles, for both CSS-only and upgraded stateful surfaces\n  &:hover,\n  &.mdc-ripple-surface--hover {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(opacity, $opacity);\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity(\n  $opacity,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  // Focus overrides hover by reusing the ::before pseudo-element.\n  // :focus-within generally works on non-MS browsers and matches when a *child* of the element has focus.\n  // It is useful for cases where a component has a focusable element within the root node, e.g. text field,\n  // but undesirable in general in case of nested stateful components.\n  // We use a modifier class for JS-enabled surfaces to support all use cases in all browsers.\n  @if $has-nested-focusable-element {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    &.mdc-ripple-upgraded:focus-within,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus,\n    &:not(.mdc-ripple-upgraded):focus-within {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  } @else {\n    // JS-enabled selectors.\n    &.mdc-ripple-upgraded--background-focused,\n    // CSS-only selectors.\n    &:not(.mdc-ripple-upgraded):focus {\n      @include states-background-selector($ripple-target) {\n        @include states-focus-opacity-properties_(\n          $opacity: $opacity,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n\n@mixin states-focus-opacity-properties_($opacity, $query) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-focus-opacity, $opacity);\n    }\n\n    // Note that this duration is only effective on focus, not blur\n    @include feature-targeting.targets($feat-animation) {\n      transition-duration: 75ms;\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(opacity, $opacity);\n    }\n  }\n}\n\n@mixin states-press-opacity(\n  $opacity,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Styles for non-upgraded (CSS-only) stateful surfaces\n\n  @if $opacity {\n    @if not custom-properties.is-custom-prop($opacity) {\n      $opacity: custom-properties.create(ripple-press-opacity, $opacity);\n    }\n\n    &:not(.mdc-ripple-upgraded) {\n      // Apply press additively by using the ::after pseudo-element\n      #{$ripple-target}::after {\n        @include feature-targeting.targets($feat-animation) {\n          transition: opacity $fade-out-duration linear;\n        }\n      }\n\n      &:active {\n        #{$ripple-target}::after {\n          @include feature-targeting.targets($feat-animation) {\n            transition-duration: $fade-in-duration;\n          }\n\n          // Opacity falls under color because the chosen opacity is color-dependent in typical usage\n          @include feature-targeting.targets($feat-color) {\n            @include theme.property(opacity, $opacity);\n          }\n        }\n      }\n    }\n\n    &.mdc-ripple-upgraded {\n      @include feature-targeting.targets($feat-color) {\n        // Upgraded ripple should always emit custom property, regardless of\n        // configuration, since ripple itself feature detects custom property\n        // support at runtime.\n        @include custom-properties.configure($emit-custom-properties: true) {\n          @include theme.property(\n            custom-properties.create(ripple-fg-opacity, $opacity)\n          );\n        }\n      }\n    }\n  }\n}\n\n// Simple mixin for base states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states(\n  $color: theme-color.prop-value(on-surface),\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include states-interactions_(\n    $color: $color,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $query: $query,\n    $ripple-target: $ripple-target,\n    $opacity-map: $opacity-map\n  );\n}\n\n// Simple mixin for activated states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-activated(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $activated-opacity: states-opacity($color, activated);\n\n  &--activated {\n    // Stylelint seems to think that '&' qualifies as a type selector here?\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-activated-opacity,\n            $activated-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $activated-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n// Simple mixin for selected states which automatically selects opacity values based on whether the ink color is\n// light or dark.\n@mixin states-selected(\n  $color,\n  $has-nested-focusable-element: false,\n  $query: feature-targeting.all(),\n  $ripple-target: '&'\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $selected-opacity: states-opacity($color, selected);\n\n  &--selected {\n    @include states-background-selector($ripple-target) {\n      // Opacity falls under color because the chosen opacity is color-dependent.\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(\n          opacity,\n          custom-properties.create(\n            --mdc-ripple-selected-opacity,\n            $selected-opacity\n          )\n        );\n      }\n    }\n\n    @include states-interactions_(\n      $color: $color,\n      $has-nested-focusable-element: $has-nested-focusable-element,\n      $opacity-modifier: $selected-opacity,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin states-interactions_(\n  $color,\n  $has-nested-focusable-element,\n  $opacity-modifier: 0,\n  $query: feature-targeting.all(),\n  $ripple-target: '&',\n  $opacity-map: null\n) {\n  @include target-selector($ripple-target) {\n    @include states-base-color($color, $query);\n  }\n\n  @if $opacity-map == null {\n    $opacity-map: (\n      hover: states-opacity($color, hover) + $opacity-modifier,\n      focus: states-opacity($color, focus) + $opacity-modifier,\n      press: states-opacity($color, press) + $opacity-modifier,\n    );\n  }\n\n  @include states-opacities(\n    $opacity-map,\n    $has-nested-focusable-element: $has-nested-focusable-element,\n    $ripple-target: $ripple-target,\n    $query: $query\n  );\n}\n\n// Wraps content in the `ripple-target` selector if it exists.\n@mixin target-selector($ripple-target: '&') {\n  @if $ripple-target == '&' {\n    @content;\n  } @else {\n    #{$ripple-target} {\n      @content;\n    }\n  }\n}\n\n/// Selector for hover, active and focus states.\n@mixin states-selector() {\n  #{$_hover-selector},\n  #{$_focus-selector},\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n@mixin hover() {\n  #{$_hover-selector} {\n    @content;\n  }\n}\n\n// Selector for focus state. Using ':not(.mdc-ripple-upgraded)' to continue\n// applying focus styles on JS-disabled components, and control focus\n// on JS-enabled components with '.mdc-ripple-upgraded--background-focused'.\n@mixin focus() {\n  #{$_focus-selector} {\n    @content;\n  }\n}\n\n// Selector for active state. Using `:active:active` to override focus styles.\n@mixin pressed() {\n  #{$_active-selector} {\n    @content;\n  }\n}\n\n// @deprecated Use `pressed()` mixin - renamed for consistency.\n@mixin active() {\n  @include pressed() {\n    @content;\n  }\n}\n\n/// Keep the ripple (State overlay) behind the content.\n@mixin behind-content(\n  $ripple-target,\n  $content-root-selector: '&',\n  $query: feature-targeting.all()\n) {\n  // Needed for IE11. Without this, IE11 renders the state layer completely\n  // underneath the container, making it invisible.\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  #{$content-root-selector} {\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 0;\n    }\n  }\n\n  #{$ripple-target}::before,\n  #{$ripple-target}::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        z-index,\n        custom-properties.create(--mdc-ripple-z-index, -1)\n      );\n    }\n  }\n}\n\n@function states-opacity($color, $state) {\n  $color-value: theme-color.prop-value($color);\n  $opacity-map: if(\n    theme-color.tone($color-value) == 'light',\n    $light-ink-opacities,\n    $dark-ink-opacities\n  );\n\n  @if not map.has-key($opacity-map, $state) {\n    @error \"Invalid state: '#{$state}'. Choose one of: #{map.keys($opacity-map)}\";\n  }\n\n  @return map.get($opacity-map, $state);\n}\n\n@mixin states-background-selector($ripple-target) {\n  #{$ripple-target}::before {\n    @content;\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use './functions';\n\n// Public\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define line-ripple\n  .mdc-line-ripple {\n    @include feature-targeting.targets($feat-structure) {\n      &::before,\n      &::after {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n        border-bottom-style: solid;\n        content: '';\n      }\n\n      @include height(1px);\n      @include active-height(2px);\n\n      &::before {\n        z-index: 1;\n      }\n\n      &::after {\n        transform: scaleX(0);\n        opacity: 0;\n        z-index: 2;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      &::after {\n        transition: functions.transition-value(transform),\n          functions.transition-value(opacity);\n      }\n    }\n  }\n\n  .mdc-line-ripple--active::after {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scaleX(1);\n      opacity: 1;\n    }\n  }\n\n  .mdc-line-ripple--deactivating::after {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n  }\n}\n\n@mixin height($height) {\n  &::before {\n    @include theme.property(border-bottom-width, $height);\n  }\n}\n\n@mixin active-height($height) {\n  &::after {\n    @include theme.property(border-bottom-width, $height);\n  }\n}\n\n@mixin active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::after {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n\n@mixin inactive-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    &::before {\n      @include theme.property(border-bottom-color, $color);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/floating-label/mixins' as floating-label-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline {\n    @include base_($query);\n\n    &__leading,\n    &__notch,\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        box-sizing: border-box;\n        height: 100%;\n        border-top: variables.$border-width solid;\n        border-bottom: variables.$border-width solid;\n        pointer-events: none;\n      }\n    }\n\n    &__leading {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          variables.$border-width solid,\n          none\n        );\n\n        width: variables.$leading-width;\n      }\n    }\n\n    &__trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          border,\n          none,\n          variables.$border-width solid\n        );\n\n        flex-grow: 1;\n      }\n    }\n\n    &__notch {\n      @include feature-targeting.targets($feat-structure) {\n        flex: 0 0 auto;\n        width: auto;\n        max-width: calc(100% - #{variables.$leading-width} * 2);\n      }\n    }\n\n    .mdc-floating-label {\n      @include feature-targeting.targets($feat-structure) {\n        display: inline-block;\n        position: relative;\n        max-width: 100%;\n      }\n    }\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: clip;\n      }\n    }\n\n    &--upgraded .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        max-width: calc(100% / 0.75);\n      }\n    }\n  }\n\n  .mdc-notched-outline--notched {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(padding, right, 8px);\n\n        border-top: none;\n      }\n    }\n  }\n\n  .mdc-notched-outline--no-label {\n    .mdc-notched-outline__notch {\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin stroke-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline__leading,\n  .mdc-notched-outline__notch,\n  .mdc-notched-outline__trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-width, $width);\n    }\n  }\n}\n\n///\n/// Adds top offset to compensate for border width box size when it is notched.\n/// Use this when floating label is aligned to center to prevent label jump on focus.\n/// @param {Number} $stroke-width Stroke width of notched outline that needs to be offset.\n///\n@mixin notch-offset($stroke-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-notched-outline--notched .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      padding-top: $stroke-width;\n    }\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $component-height: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  // Resolve the radius relative to the notched outline component's height. The\n  // component should provide its current height from its density. The resolved\n  // radius allows percentage radii to be converted to pixels.\n  $resolved-radius: shape-functions.resolve-radius(\n    $radius,\n    $component-height: $component-height\n  );\n\n  // Grab the top-left radius. We'll need it to adjust the leading for the\n  // label notch if the resulting radius shape is larger than the default\n  // leading.\n  $top-left-radius: list.nth(\n    shape-functions.unpack-radius($resolved-radius),\n    1\n  );\n  $top-left-is-custom-prop: custom-properties.is-custom-prop($top-left-radius);\n  $top-left-radius-px: $top-left-radius;\n  @if ($top-left-is-custom-prop) {\n    $top-left-radius-px: custom-properties.get-fallback($top-left-radius);\n  }\n\n  .mdc-notched-outline__leading {\n    // mask the leading to apply the top-left and bottom-left corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 1 0 0 1),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        // If the radius is bigger than the default leading width, we need to\n        // increase the leading width\n        width: $top-left-radius-px;\n        @if ($top-left-is-custom-prop) {\n          // The radius may be a custom property, in which case the above width\n          // is the IE11 fallback value.\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        // If the top-left radius is dynamic, the width of the leading is\n        // the max of whichever is larger: the default leading width or the\n        // value of the custom property.\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          width: max(#{variables.$leading-width}, #{$var});\n        }\n      }\n    }\n  }\n\n  // Similar to above, adjust the max-width of the notch if we adjusted the\n  // leading's width.\n  .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      @if ($top-left-radius-px > variables.$leading-width) {\n        max-width: calc(100% - #{$top-left-radius-px} * 2);\n        @if ($top-left-is-custom-prop) {\n          /* @alternate */\n        }\n      }\n\n      @if ($top-left-is-custom-prop) {\n        $var: custom-properties.create-var($top-left-radius);\n        // Interpolation is a workaround for sass/sass#3259.\n        @supports (top: max(#{0%})) {\n          max-width: calc(100% - max(#{variables.$leading-width}, #{$var}) * 2);\n        }\n      }\n    }\n  }\n\n  .mdc-notched-outline__trailing {\n    // mask the leading to apply the top-right and bottom-right corners\n    @include shape-mixins.radius(\n      shape-functions.mask-radius($radius, 0 1 1 0),\n      $rtl-reflexive: true,\n      $component-height: $component-height,\n      $query: $query\n    );\n  }\n}\n\n@mixin floating-label-float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include floating-label-mixins.float-position(\n    $positionY + variables.$label-adjust,\n    $positionX,\n    1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets floating label position in notched outline when label is afloat.\n///\n/// @param {Number} $positionY Absolute Y-axis position in `px`.\n/// @param {Number} $positionX Absolute X-axis position in `px`. Defaults to `0`.\n/// @param {Number} $scale Defaults to `.75`.\n///\n/// @todo Replace mixin `mdc-notched-outline-floating-label-float-position` with this mixin when floating label is\n///     center aligned in all the places.\n///\n@mixin floating-label-float-position-absolute(\n  $positionY,\n  $positionX: 0,\n  $scale: 0.75,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $float-positionY: if(\n    meta.type-of($positionY) == 'calculation',\n    calc($positionY + variables.$label-adjust-absolute),\n    $positionY + variables.$label-adjust-absolute\n  );\n\n  @include floating-label-mixins.float-position(\n    $float-positionY,\n    $positionX,\n    $scale: 1,\n    $query: $query\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      font-size: ($scale * 1rem);\n    }\n  }\n\n  // Two selectors to ensure we select the appropriate class when applied from this component or a parent component.\n  &.mdc-notched-outline--upgraded,\n  .mdc-notched-outline--upgraded {\n    @include floating-label-mixins.float-position(\n      $positionY,\n      $positionX,\n      $scale,\n      $query: $query\n    );\n\n    .mdc-floating-label--float-above {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 1rem;\n      }\n    }\n  }\n}\n\n///\n/// Sets the max-width for the notch\n///\n/// @param {Number} $max-width Max-width for the notch\n///\n@mixin notch-max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  :not(.mdc-notched-outline--notched) .mdc-notched-outline__notch {\n    @include feature-targeting.targets($feat-structure) {\n      max-width: $max-width;\n    }\n  }\n}\n\n//\n// Private\n//\n@mixin base_($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: flex;\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    box-sizing: border-box;\n    width: 100%;\n    max-width: 100%;\n    height: 100%;\n    @include rtl.ignore-next-line();\n    text-align: left;\n    pointer-events: none;\n\n    @include rtl.rtl {\n      @include rtl.ignore-next-line();\n      text-align: right;\n    }\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:meta';\n@use 'sass:selector';\n@use '@material/theme/gss';\n@use '@material/theme/selector-ext';\n@use '@material/theme/theme';\n\n$include: true !default;\n\n/// Creates a rule that will be applied when a component is within the context\n/// of an RTL layout.\n///\n/// @example - scss\n/// .mdc-foo {\n///   padding-left: 4px;\n///\n///   @include rtl {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n/// }\n///\n/// @example - css\n///   .mdc-foo {\n///     padding-left: 4px;\n///   }\n///\n///   [dir=\"rtl\"] .mdc-foo,\n///   .mdc-foo[dir=\"rtl\"] {\n///     padding-left: auto;\n///     padding-right: 4px;\n///   }\n///\n/// Note that this mixin works by checking for an ancestor element with\n/// `[dir=\"rtl\"]`. As a result, nested `dir` values are not supported:\n///\n/// @example - html\n/// <html dir=\"rtl\">\n///   <!-- ... -->\n///   <div dir=\"ltr\">\n///     <div class=\"mdc-foo\">Styled incorrectly as RTL!</div>\n///   </div>\n/// </html>\n///\n/// In the future, selectors such as the `:dir` pseudo-class\n/// (http://mdn.io/css/:dir) will help us mitigate this.\n///\n/// @content Content to be styled in an RTL context.\n@mixin rtl() {\n  @if ($include) {\n    $dir-rtl: '[dir=rtl]';\n\n    $rtl-selectors: list.join(\n      selector.nest($dir-rtl, &),\n      selector-ext.append-strict(&, $dir-rtl)\n    );\n\n    @at-root {\n      #{$rtl-selectors} {\n        /*rtl:begin:ignore*/\n        @content;\n        /*rtl:end:ignore*/\n      }\n    }\n  }\n}\n\n// Takes a base box-model property name (`margin`, `border`, `padding`, etc.) along with a\n// default direction (`left` or `right`) and value, and emits rules which apply the given value to the\n// specified direction by default and the opposite direction in RTL.\n//\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, left, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 8px;\n//   margin-right: 0;\n//\n//   @include rtl {\n//     margin-left: 0;\n//     margin-right: 8px;\n//   }\n// }\n// ```\n//\n// whereas:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-box(margin, right, 8px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: 0;\n//   margin-right: 8px;\n//\n//   @include rtl {\n//     margin-left: 8px;\n//     margin-right: 0;\n//   }\n// }\n// ```\n//\n// You can also pass an optional 4th `$root-selector` argument which will be forwarded to `mdc-rtl`,\n// e.g. `@include rtl-reflexive-box(margin, left, 8px, '.mdc-component')`.\n//\n// Note that this function will always zero out the original value in an RTL context.\n// If you're trying to flip the values, use `mdc-rtl-reflexive-property()` instead.\n@mixin reflexive-box(\n  $base-property,\n  $default-direction,\n  $value,\n  $replace: null\n) {\n  @if (list.index((right, left), $default-direction) == null) {\n    @error \"Invalid default direction: '#{$default-direction}'. Please specifiy either 'right' or 'left'.\";\n  }\n\n  $left-value: $value;\n  $right-value: 0;\n\n  @if ($default-direction == right) {\n    $left-value: 0;\n    $right-value: $value;\n  }\n\n  @include reflexive-property(\n    $base-property,\n    $left-value,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes a base property and emits rules that assign <base-property>-left to <left-value> and\n// <base-property>-right to <right-value> in a LTR context, and vice versa in a RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-property(margin, auto, 12px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   margin-left: auto;\n//   margin-right: 12px;\n//\n//   @include rtl {\n//     margin-left: 12px;\n//     margin-right: auto;\n//   }\n// }\n// ```\n//\n// An optional 4th `$root-selector` argument can be given, which will be passed to `mdc-rtl`.\n@mixin reflexive-property(\n  $base-property,\n  $left-value,\n  $right-value,\n  $replace: null\n) {\n  $prop-left: #{$base-property}-left;\n  $prop-right: #{$base-property}-right;\n\n  @include reflexive(\n    $prop-left,\n    $left-value,\n    $prop-right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes an argument specifying a horizontal position property (either 'left' or 'right') as well\n// as a value, and applies that value to the specified position in a LTR context, and flips it in a\n// RTL context. For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive-position(left, 0);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 0;\n//   right: initial;\n//\n//   @include rtl {\n//     left: initial;\n//     right: 0;\n//   }\n// }\n// ```\n//\n// An optional third $root-selector argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive-position($position-property, $value, $replace: null) {\n  @if (list.index((right, left), $position-property) == null) {\n    @error \"Invalid position #{position-property}. Please specifiy either right or left\";\n  }\n\n  // TODO: 'initial' is not supported in IE 11. https://caniuse.com/#feat=css-initial-value\n  $left-value: $value;\n  $right-value: initial;\n\n  @if ($position-property == right) {\n    $right-value: $value;\n    $left-value: initial;\n  }\n\n  @include reflexive(\n    left,\n    $left-value,\n    right,\n    $right-value,\n    $replace: $replace\n  );\n}\n\n// Takes pair of properties with values as arguments and flips it in RTL context.\n// For example:\n//\n// ```scss\n// .mdc-foo {\n//   @include rtl-reflexive(left, 2px, right, 5px);\n// }\n// ```\n//\n// is equivalent to:\n//\n// ```scss\n// .mdc-foo {\n//   left: 2px;\n//   right: 5px;\n//\n//   @include rtl {\n//     right: 2px;\n//     left: 5px;\n//   }\n// }\n// ```\n//\n// An optional fifth `$root-selector` argument may also be given, which is passed to `mdc-rtl`.\n@mixin reflexive(\n  $left-property,\n  $left-value,\n  $right-property,\n  $right-value,\n  $replace: null\n) {\n  $left-replace: null;\n  $right-replace: null;\n  @if $replace {\n    @if meta.type-of($left-value) == 'string' {\n      $left-replace: $replace;\n    }\n\n    @if meta.type-of($right-value) == 'string' {\n      $right-replace: $replace;\n    }\n\n    @if $left-replace == null and $right-replace == null {\n      @error 'mdc-rtl: $replace may only be used with strings but neither left nor right values are strings.';\n    }\n\n    // If any replacements are null, treat the entire value as null (do not\n    // emit anything).\n    @each $name, $replacement in $replace {\n      @if $replacement == null {\n        $left-value: null;\n        $right-value: null;\n      }\n    }\n  }\n\n  // Do not emit if either value are null\n  @if $left-value and $right-value {\n    @include _property($left-property, $left-value, $replace: $left-replace);\n    @include _property($right-property, $right-value, $replace: $right-replace);\n\n    @include rtl {\n      @include _property(\n        $left-property,\n        $right-value,\n        $replace: $right-replace\n      );\n      @include _property($right-property, $left-value, $replace: $left-replace);\n    }\n  }\n}\n\n///\n/// Adds RTL ignore annotation when `$mdc-rtl-include` is true.\n///\n@mixin ignore-next-line() {\n  @include gss.annotate(\n    (\n      noflip: $include,\n    )\n  );\n}\n\n///\n/// Adds `@noflip` annotation when `$mdc-rtl-include` is true.\n///\n/// @param {String} $property\n/// @param {String} $value\n/// @param {Map} $replace\n///\n@mixin _property($property, $value, $replace: null) {\n  @include theme.property(\n    $property,\n    $value,\n    $replace: $replace,\n    $gss: (noflip: $include)\n  );\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/typography' as mdc-typography;\n@use '@material/textfield/variables' as mdc-textfield-variables;\n\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './form-field-sizing';\n\n@mixin private-form-field-subscript() {\n  // Wrapper for the hints and error messages.\n  .mat-mdc-form-field-subscript-wrapper {\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n\n  .mat-mdc-form-field-hint-wrapper,\n  .mat-mdc-form-field-error-wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: 0 mdc-textfield-variables.$padding-horizontal;\n  }\n\n  .mat-mdc-form-field-subscript-dynamic-size {\n    .mat-mdc-form-field-hint-wrapper,\n    .mat-mdc-form-field-error-wrapper {\n      position: static;\n    }\n  }\n\n  .mat-mdc-form-field-bottom-align::before {\n    content: '';\n    display: inline-block;\n    height: 16px;\n  }\n\n  .mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before {\n    content: unset;\n  }\n\n  .mat-mdc-form-field-hint-end {\n    order: 1;\n  }\n\n  // Clears the floats on the hints. This is necessary for the hint animation to work.\n  .mat-mdc-form-field-hint-wrapper {\n    display: flex;\n  }\n\n  // Spacer used to make sure start and end hints have enough space between them.\n  .mat-mdc-form-field-hint-spacer {\n    flex: 1 0 form-field-sizing.$mat-form-field-hint-min-space;\n  }\n\n  // Single error message displayed beneath the form field underline.\n  .mat-mdc-form-field-error {\n    display: block;\n  }\n}\n\n@mixin private-form-field-subscript-color() {\n  // MDC does not have built-in error treatment.\n  .mat-mdc-form-field-error {\n    @include mdc-theme.prop(color, mdc-textfield.$error);\n  }\n}\n\n// We need to define our own typography for the subscript because we don't include MDC's\n// helper text in our MDC based form field\n@mixin private-form-field-subscript-typography($config-or-theme) {\n  $config: theming.get-typography-config($config-or-theme);\n\n  // The subscript wrapper has a minimum height to avoid that the form-field\n  // jumps when hints or errors are displayed.\n  .mat-mdc-form-field-subscript-wrapper,\n  .mat-mdc-form-field-bottom-align::before {\n    @include mdc-typography.typography(caption, $query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n","@use '@material/ripple/functions' as mdc-ripple-functions;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/style/layout-common';\n\n// MDC text-field uses `@material/ripple` in order to show a focus and hover effect for\n// text-fields. This is unnecessary because the ripples bring in a lot of unnecessary\n// styles and runtime code while the actual goal for the text-field is simply showing a\n// focus and hover effect. The ripples will unnecessarily provide CSS selectors and JS\n// runtime code for launching interaction ripples at pointer location. This is not needed\n// for the text-field, so we create our own minimal focus overlay styles. Our focus overlay\n// uses the exact same logic to compute the colors as in the default MDC text-field ripples.\n@mixin private-form-field-focus-overlay() {\n  .mat-mdc-form-field-focus-overlay {\n    @include layout-common.fill;\n    opacity: 0;\n    // Make sure we don't block click on the prefix/suffix.\n    pointer-events: none;\n  }\n}\n\n@mixin private-form-field-focus-overlay-color() {\n  $focus-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, focus);\n  $hover-opacity: mdc-ripple-functions.states-opacity(mdc-textfield.$ink-color, hover);\n\n  .mat-mdc-form-field-focus-overlay {\n    background-color: mdc-textfield.$ink-color;\n  }\n\n  .mat-mdc-form-field:hover .mat-mdc-form-field-focus-overlay {\n    opacity: $hover-opacity;\n  }\n\n  .mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay {\n    opacity: $focus-opacity;\n  }\n}\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use 'sass:color';\n@use 'sass:meta';\n\n// Mixin that refreshes the MDC text-field theming variables. This mixin should be used when\n// the base MDC theming variables have been explicitly updated, but the component specific\n// theming-based variables are still based on the old MDC base theming variables. The mixin\n// restores the previous values for the variables to avoid unexpected global side effects.\n@mixin private-text-field-refresh-theme-variables() {\n  $_disabled-border: mdc-textfield.$disabled-border;\n  mdc-textfield.$disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_bottom-line-hover: mdc-textfield.$bottom-line-hover;\n  mdc-textfield.$bottom-line-hover:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_bottom-line-idle: mdc-textfield.$bottom-line-idle;\n  mdc-textfield.$bottom-line-idle:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.42);\n  $_label: mdc-textfield.$label;\n  mdc-textfield.$label: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_ink-color: mdc-textfield.$ink-color;\n  mdc-textfield.$ink-color: _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n  $_focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(primary), 0.87);\n  $_placeholder-ink-color: mdc-textfield.$placeholder-ink-color;\n  mdc-textfield.$placeholder-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.6);\n  $_disabled-label-color: mdc-textfield.$disabled-label-color;\n  mdc-textfield.$disabled-label-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-ink-color: mdc-textfield.$disabled-ink-color;\n  mdc-textfield.$disabled-ink-color:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_disabled-placeholder-ink-color: mdc-textfield.$disabled-placeholder-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color:\n      _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_background: mdc-textfield.$background;\n  mdc-textfield.$background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 4%);\n  $_disabled-background: mdc-textfield.$disabled-background;\n  mdc-textfield.$disabled-background: _variable-safe-mix(mdc-theme-variables.prop-value(on-surface),\n    mdc-theme-variables.prop-value(surface), 2%);\n  $_outlined-idle-border: mdc-textfield.$outlined-idle-border;\n  mdc-textfield.$outlined-idle-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.38);\n  $_outlined-disabled-border: mdc-textfield.$outlined-disabled-border;\n  mdc-textfield.$outlined-disabled-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.06);\n  $_outlined-hover-border: mdc-textfield.$outlined-hover-border;\n  mdc-textfield.$outlined-hover-border:\n    _variable-safe-rgba(mdc-theme-variables.prop-value(on-surface), 0.87);\n\n  // The content will be generated with the refreshed MDC text-field theming variables.\n  @content;\n\n  // Reset all variables to ensure that this mixin does not cause unexpected side effects.\n  mdc-textfield.$disabled-border: $_disabled-border;\n  mdc-textfield.$bottom-line-hover: $_bottom-line-hover;\n  mdc-textfield.$bottom-line-idle: $_bottom-line-idle;\n  mdc-textfield.$label: $_label;\n  mdc-textfield.$ink-color: $_ink-color;\n  mdc-textfield.$focused-label-color: $_focused-label-color;\n  mdc-textfield.$placeholder-ink-color: $_placeholder-ink-color;\n  mdc-textfield.$disabled-label-color: $_disabled-label-color;\n  mdc-textfield.$disabled-ink-color: $_disabled-ink-color;\n  mdc-textfield.$disabled-placeholder-ink-color: $_disabled-placeholder-ink-color;\n  mdc-textfield.$background: $_background;\n  mdc-textfield.$disabled-background: $_disabled-background;\n  mdc-textfield.$outlined-idle-border: $_outlined-idle-border;\n  mdc-textfield.$outlined-disabled-border: $_outlined-disabled-border;\n  mdc-textfield.$outlined-hover-border: $_outlined-hover-border;\n}\n\n@function _variable-safe-rgba($color, $opacity) {\n  @if (meta.type-of($color) == color) {\n    @return rgba($color, $opacity);\n  }\n  @return $color;\n}\n\n@function _variable-safe-mix($first-color, $second-color, $amount) {\n  @if (meta.type-of($first-color) == color and meta.type-of($second-color) == color) {\n    @return color.mix($first-color, $second-color, $amount);\n  }\n  @return $first-color;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/mdc-helpers/mdc-helpers';\n\n// Width of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-width: 10px;\n// Height of the Material Design form-field select arrow.\n$mat-form-field-select-arrow-height: 5px;\n// Horizontal padding that needs to be applied to the native select in an form-field so\n// that the absolute positioned arrow does not overlap the select content.\n$mat-form-field-select-horizontal-end-padding: $mat-form-field-select-arrow-width + 5px;\n\n// Mixin that creates styles for native select controls in a form-field.\n@mixin private-form-field-native-select() {\n  // Remove the native select down arrow and ensure that the native appearance\n  // does not conflict with the form-field. e.g. Focus indication of the native\n  // select is undesired since we handle focus as part of the form-field.\n  select.mat-mdc-form-field-input-control {\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    background-color: transparent;\n    display: inline-flex;\n    box-sizing: border-box;\n\n    // By default the cursor does not change when hovering over a select. We want to\n    // change this for non-disabled select elements so that it's more obvious that the\n    // control can be clicked.\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n\n  // Native select elements with the `matInput` directive should have Material Design\n  // styling. This means that we add an arrow to the form-field that is based on the\n  // Material Design specification. We achieve this by adding a pseudo element to the\n  // form-field infix.\n  .mat-mdc-form-field-type-mat-native-select {\n    .mat-mdc-form-field-infix::after {\n      content: '';\n      width: 0;\n      height: 0;\n      border-left: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-right: math.div($mat-form-field-select-arrow-width, 2) solid transparent;\n      border-top: $mat-form-field-select-arrow-height solid;\n      position: absolute;\n      right: 0;\n      top: 50%;\n      margin-top: -#{math.div($mat-form-field-select-arrow-height, 2)};\n\n      // Make the arrow non-clickable so the user can click on the form control under it.\n      pointer-events: none;\n\n      [dir='rtl'] & {\n        right: auto;\n        left: 0;\n      }\n    }\n\n    // Add padding on the end of the native select so that the content does not\n    // overlap with the Material Design arrow.\n    .mat-mdc-form-field-input-control {\n      padding-right: $mat-form-field-select-horizontal-end-padding;\n      [dir='rtl'] & {\n        padding-right: 0;\n        padding-left: $mat-form-field-select-horizontal-end-padding;\n      }\n    }\n  }\n}\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-focused-arrow-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin private-form-field-native-select-color($config) {\n  @include mdc-helpers.using-mdc-theme($config) {\n    // These values are taken from the MDC select implementation:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-select/_select-theme.scss\n    $dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    $disabled-dropdown-icon-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n\n    select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) {\n      // On dark themes we set the native `select` color to some shade of white,\n      // however the color propagates to all of the `option` elements, which are\n      // always on a white background inside the dropdown, causing them to blend in.\n      // Since we can't change background of the dropdown, we need to explicitly\n      // reset the color of the options to something dark.\n      @if (map.get($config, is-dark)) {\n        option {\n          color: palette.$dark-primary-text;\n        }\n\n        option:disabled {\n          color: palette.$dark-disabled-text;\n        }\n      }\n    }\n\n    .mat-mdc-form-field-type-mat-native-select {\n      .mat-mdc-form-field-infix::after {\n        color: $dropdown-icon-color;\n      }\n\n      &.mat-focused {\n        &.mat-primary {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(primary);\n          }\n        }\n\n        &.mat-accent {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(secondary);\n          }\n        }\n\n        &.mat-warn {\n          .mat-mdc-form-field-infix::after {\n            color: _get-focused-arrow-color(error);\n          }\n        }\n      }\n\n      &.mat-form-field-disabled {\n        .mat-mdc-form-field-infix::after {\n          color: $disabled-dropdown-icon-color;\n        }\n      }\n    }\n  }\n}\n","@use '@angular/material' as mat;\n@use 'sass:map';\n@import \"@angular/material/theming\";\n\n$sidenav-background: #1a202e !default;\n\n$config: mat.define-typography-config(\n  $font-family: var(--font),\n  $headline-1: mat.define-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $headline-2: mat.define-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $headline-3: mat.define-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $headline-4: mat.define-typography-level(34px, 40px, 400),\n  $headline-5: mat.define-typography-level(24px, 32px, 400, $letter-spacing: -0.019em),\n  $headline-6: mat.define-typography-level(18px, 26px, 500, $letter-spacing: -0.014em),\n  $subtitle-1: mat.define-typography-level(16px, 28px, 400, $letter-spacing: -0.011em),\n  $body-1: mat.define-typography-level(15px, 24px, 400, $letter-spacing: -0.009em),\n  $subtitle-2: mat.define-typography-level(14px, 24px, 500, $letter-spacing: -0.006em),\n  $body-2: mat.define-typography-level(14px, 20px, 400, $letter-spacing: -0.006em),\n  $caption: mat.define-typography-level(12px, 20px, 400, $letter-spacing: 0),\n  $button: mat.define-typography-level(14px, 14px, 500, $letter-spacing: -0.006em)\n) !default;\n\n// Define the palettes for your theme using the Material Design palettes available in palette.scss\n// (imported above). For each palette, you can optionally specify a default, lighter, and darker\n// hue. Available color palettes: https://material.io/design/color/\n$vex-primary: mat.define-palette((\n  100: var(--color-primary-rgb),\n  500: var(--color-primary-rgb),\n  700: var(--color-primary-rgb),\n  contrast: (\n    100: var(--color-primary-contrast-rgb),\n    500: var(--color-primary-contrast-rgb),\n    700: var(--color-primary-contrast-rgb)\n  )\n)) !default;\n\n$vex-accent: mat.define-palette((\n  100: var(--color-accent-rgb),\n  500: var(--color-accent-rgb),\n  700: var(--color-accent-rgb),\n  contrast: (\n    100: var(--color-accent-contrast-rgb),\n    500: var(--color-accent-contrast-rgb),\n    700: var(--color-accent-contrast-rgb),\n  )\n)) !default;\n\n// The warn palette is optional (defaults to red).\n$vex-warn: mat.define-palette((\n  100: var(--color-warn-rgb),\n  500: var(--color-warn-rgb),\n  700: var(--color-warn-rgb),\n  contrast: (\n    100: var(--color-warn-contrast-rgb),\n    500: var(--color-warn-contrast-rgb),\n    700: var(--color-warn-contrast-rgb),\n  )\n)) !default;\n\n$vex-theme-foreground: (\n  text: black,\n  elevation: #000,\n  divider: rgba(82, 63, 105, 0.06),\n  dividers: rgba(82, 63, 105, 0.06)\n) !default;\n\n$vex-theme-background: (\n  app-bar: #ebebee\n) !default;\n\n// Create the theme object (a Sass map containing all of the palettes).\n$vex-theme: mat.define-light-theme((\n  color: (\n    primary: $vex-primary,\n    accent: $vex-accent,\n    warn: $vex-warn,\n    is-dark: false\n  ),\n  typography: $config,\n  density: 0\n)) !default;\n\n$vex-theme: map.deep-merge($vex-theme, (\n  color: (\n    foreground: map_merge(mat.$light-theme-foreground-palette, $vex-theme-foreground),\n    background: map_merge(mat.$light-theme-background-palette, $vex-theme-background),\n  ),\n  // Required for @angular/material legacy compatibility\n  foreground: map_merge(mat.$light-theme-foreground-palette, $vex-theme-foreground),\n  background: map_merge(mat.$light-theme-background-palette, $vex-theme-background),\n));\n\n$vex-dark-theme: mat.define-dark-theme((\n  color: (\n    primary: $vex-primary,\n    accent: $vex-accent,\n    warn: $vex-warn,\n    is-dark: true\n  ),\n)) !default;\n\n$vex-dark-theme-foreground: () !default;\n\n$vex-dark-theme-background: (\n  app-bar: darken($sidenav-background, 5),\n  background: lighten($sidenav-background, 5),\n  card: $sidenav-background,\n  dialog: $sidenav-background,\n  status-bar: darken($sidenav-background, 5)\n) !default;\n\n$vex-dark-theme: map.deep-merge($vex-dark-theme, (\n  color: (\n    foreground: map_merge(mat.$dark-theme-foreground-palette, $vex-dark-theme-foreground),\n    background: map_merge(mat.$dark-theme-background-palette, $vex-dark-theme-background),\n  ),\n  // Required for @angular/material legacy compatibility\n  foreground: map_merge(mat.$dark-theme-foreground-palette, $vex-dark-theme-foreground),\n  background: map_merge(mat.$dark-theme-background-palette, $vex-dark-theme-background),\n));\n\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n","@use '@material/textfield' as mdc-textfield;\n@use '@material/floating-label' as mdc-floating-label;\n@use '@material/notched-outline' as mdc-notched-outline;\n@use '@material/line-ripple' as mdc-line-ripple;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './form-field-density';\n@use './form-field-subscript';\n@use './form-field-focus-overlay';\n@use './form-field-native-select';\n@use './mdc-text-field-theme-variable-refresh';\n\n\n// Mixin that overwrites the default MDC text-field color styles to be based on\n// the given theme palette. The MDC text-field is styled using `primary` by default.\n@mixin _color-styles($palette-name,\n  $query: mdc-helpers.$mdc-theme-styles-query) {\n  $orig-focused-label-color: mdc-textfield.$focused-label-color;\n  mdc-textfield.$focused-label-color: rgba(mdc-theme-color.prop-value($palette-name), 0.87);\n\n  @include mdc-textfield.caret-color($palette-name, $query);\n  @include mdc-textfield.line-ripple-color($palette-name, $query);\n\n  .mdc-text-field--focused {\n    @include mdc-textfield.focused_($query);\n  }\n\n  .mdc-text-field--invalid {\n    @include mdc-textfield.invalid_($query);\n  }\n\n  .mdc-text-field--outlined {\n    @include mdc-textfield.focused-outline-color($palette-name, $query);\n  }\n\n  mdc-textfield.$focused-label-color: $orig-focused-label-color;\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-text-field-theme-variable-refresh.private-text-field-refresh-theme-variables() {\n      @include mdc-textfield.without-ripple($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-floating-label.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-notched-outline.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-line-ripple.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include form-field-subscript.private-form-field-subscript-color();\n      @include form-field-focus-overlay.private-form-field-focus-overlay-color();\n      @include form-field-native-select.private-form-field-native-select-color($config);\n\n      .mat-mdc-form-field.mat-accent {\n        @include _color-styles(secondary);\n      }\n\n      .mat-mdc-form-field.mat-warn {\n        @include _color-styles(error);\n      }\n\n      // This fixes an issue where the notch appears to be thicker than the rest of the outline when\n      // zoomed in on Chrome. The border inconsistency seems to be some kind of rendering artifact\n      // that arises from a combination of the fact that the notch contains text, while the leading\n      // and trailing outline do not, combined with the fact that the border is semi-transparent.\n      // Experimentally, I discovered that adding a transparent left border fixes the inconsistency.\n      // Note: class name is repeated to achieve sufficient specificity over the various MDC states.\n      // (hover, focus, etc.)\n      // TODO(mmalerba): port this fix into MDC\n      .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n        &.mat-mdc-form-field .mdc-notched-outline__notch {\n          border-left: 1px solid transparent;\n        }\n      }\n\n      [dir='rtl'] {\n        .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field {\n          &.mat-mdc-form-field .mdc-notched-outline__notch {\n            border-left: none;\n            border-right: 1px solid transparent;\n          }\n        }\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-textfield.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-floating-label.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-notched-outline.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-line-ripple.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n    @include form-field-subscript.private-form-field-subscript-typography($config);\n\n    // MDC uses `subtitle1` for the input value, placeholder and floating label. The spec\n    // shows `body1` for text fields though, so we manually override the typography.\n    // Note: Form controls inherit the typography from the parent form field.\n    .mat-mdc-form-field,\n    .mat-mdc-floating-label {\n      @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    // Above, we updated the floating label to use the `body1` typography level. The MDC notched\n    // outline overrides this accidentally (only when the label floats) to a `rem`-based value.\n    // This results in different label widths when floated/docked and ultimately breaks the notch\n    // width as it has been measured in the docked state (where `body1` is applied). We try to\n    // unset these styles set by the `mdc-notched-outline`:\n    // https://github.com/material-components/material-components-web/blob/master/packages/mdc-notched-outline/_mixins.scss#L272-L292.\n    .mat-mdc-form-field .mdc-text-field--outlined {\n      // For the non-upgraded notch label (i.e. when rendered on the server), also\n      // use the correct `body1` typography level.\n      .mdc-floating-label--float-above {\n        font-size: calc(#{\n            mdc-typography.get-size(body1)} * var(--mat-mdc-form-field-floating-label-scale, 0.75));\n      }\n      .mdc-notched-outline--upgraded .mdc-floating-label--float-above {\n        font-size: mdc-typography.get-size(body1);\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  @include form-field-density.private-form-field-density($density-scale);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/custom-properties';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/elevation/mixins' as elevation-mixins;\n@use '@material/rtl/rtl';\n@use './variables';\n\n//\n// Public\n//\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // postcss-bem-linter: define menu-surface\n  .mdc-menu-surface {\n    @include base_($query);\n    @include elevation-mixins.elevation($z-value: 8, $query: $query);\n    @include fill-color(surface, $query);\n    @include ink-color(on-surface, $query);\n    @include shape-radius(variables.$shape-radius, false, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(transform-origin, top left, top right);\n    }\n  }\n\n  .mdc-menu-surface--anchor {\n    @include feature-targeting.targets($feat-structure) {\n      position: relative;\n      overflow: visible;\n    }\n  }\n\n  .mdc-menu-surface--fixed {\n    @include feature-targeting.targets($feat-structure) {\n      position: fixed;\n    }\n  }\n\n  .mdc-menu-surface--fullwidth {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n}\n\n// Used by filled variants of GM components to conditionally flatten the top\n// corners of the menu.\n@mixin flatten-top-when-opened-below($query: feature-targeting.all()) {\n  .mdc-menu-surface--is-open-below {\n    $feat-structure: feature-targeting.create-target($query, structure);\n\n    @include feature-targeting.targets($feat-structure) {\n      border-top-left-radius: 0px;\n      border-top-right-radius: 0px;\n    }\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: none;\n    position: absolute;\n    box-sizing: border-box;\n\n    $max-width: custom-properties.create(\n      --mdc-menu-max-width,\n      calc(100vw - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-width, $max-width);\n    $max-height: custom-properties.create(\n      --mdc-menu-max-height,\n      calc(100vh - #{variables.$min-distance-from-edge})\n    );\n    @include theme.property(max-height, $max-height);\n    margin: 0;\n    padding: 0;\n    transform: scale(1);\n    transform-origin: top left;\n    opacity: 0;\n    overflow: auto;\n    will-change: transform, opacity;\n    z-index: variables.$z-index;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity variables.$fade-in-duration linear,\n      transform variables.$scale-duration\n        animation-variables.$deceleration-curve-timing-function,\n      height 250ms animation-variables.$deceleration-curve-timing-function;\n  }\n\n  &:focus {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &--animating-open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(0.8);\n      opacity: 0;\n    }\n  }\n\n  // Render this after `--animating-open` to override `opacity` & `transform`\n  // CSS properties.\n  &--open {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      transform: scale(1);\n      opacity: 1;\n    }\n  }\n\n  &--animating-closed {\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      opacity: 0;\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: opacity variables.$fade-out-duration linear;\n    }\n  }\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/menu-surface' as mdc-menu-surface;\n@use '@material/list/evolution-mixins' as mdc-list;\n@use '@material/typography' as mdc-typography;\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n\n// Gets the color to use for some text that is highlighted while a select has focus.\n@function _get-mdc-focused-text-color($palette) {\n  @return rgba(mdc-theme-color.prop-value($palette), 0.87);\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $disabled-color: rgba(mdc-theme-color.prop-value(on-surface), 0.38);\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-theme-styles-query);\n    @include mdc-list.without-ripple(mdc-helpers.$mdc-theme-styles-query);\n\n    .mat-mdc-select-value {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    }\n\n    .mat-mdc-select-placeholder {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.6);\n    }\n\n    .mat-mdc-select-disabled .mat-mdc-select-value {\n      color: $disabled-color;\n    }\n\n    .mat-mdc-select-arrow {\n      color: rgba(mdc-theme-color.prop-value(on-surface), 0.54);\n    }\n\n    .mat-mdc-form-field {\n      &.mat-focused {\n        &.mat-primary .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(primary);\n        }\n\n        &.mat-accent .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(secondary);\n        }\n\n        &.mat-warn .mat-mdc-select-arrow {\n          color: _get-mdc-focused-text-color(error);\n        }\n      }\n\n      .mat-mdc-select.mat-mdc-select-invalid .mat-mdc-select-arrow {\n        color: _get-mdc-focused-text-color(error);\n      }\n\n      .mat-mdc-select.mat-mdc-select-disabled .mat-mdc-select-arrow {\n        color: $disabled-color;\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-typography-styles-query);\n\n    .mat-mdc-select-panel {\n      @include mdc-list.list-base(mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    .mat-mdc-select {\n      @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/dialog' as mdc-dialog;\n@use '@material/dialog/dialog-theme' as mdc-dialog-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography' as mdc-typography;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-dialog-container {\n      $on-surface: mdc-theme-color.$on-surface;\n      $text-emphasis-high: mdc-theme-color.text-emphasis(high);\n      $text-emphasis-medium: mdc-theme-color.text-emphasis(medium);\n\n      @include mdc-dialog-theme.theme((\n        container-color: theming.get-color-from-palette($background, dialog),\n        with-divider-divider-color: rgba($on-surface, mdc-dialog.$scroll-divider-opacity),\n        subhead-color: rgba($on-surface, $text-emphasis-high),\n        supporting-text-color: rgba($on-surface, $text-emphasis-medium),\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-dialog-container {\n      $styles: mdc-typography.$styles;\n      $headline6: map.get($styles, headline6);\n\n      @include mdc-dialog-theme.theme((\n        subhead-font: map.get($headline6, font-family),\n        subhead-line-height: map.get($styles, headline6, line-height),\n        subhead-size: map.get($styles, headline6, font-size),\n        subhead-weight: map.get($styles, headline6, font-weight),\n        subhead-tracking: map.get($styles, headline6, letter-spacing),\n\n        supporting-text-font: map.get($styles, body1, font-family),\n        supporting-text-line-height: map.get($styles, body1, line-height),\n        supporting-text-size: map.get($styles, body1, font-size),\n        supporting-text-weight: map.get($styles, body1, font-weight),\n        supporting-text-tracking: map.get($styles, body1, letter-spacing),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/chips/chip-theme' as mdc-chip-theme;\n@use '@material/chips/chip-set' as mdc-chip-set;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/color-palette' as mdc-color-palette;\n@use '@material/typography' as mdc-typography;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _chip-variant($background, $foreground) {\n  @include mdc-chip-theme.theme((\n    elevated-container-color: $background,\n    elevated-disabled-container-color: $background,\n    label-text-color: $foreground,\n    disabled-label-text-color: $foreground,\n    with-icon-icon-color: $foreground,\n    with-icon-disabled-icon-color: $foreground,\n    with-trailing-icon-disabled-trailing-icon-color: $foreground,\n    with-trailing-icon-trailing-icon-color: $foreground,\n    with-icon-selected-icon-color: $foreground,\n  ));\n}\n\n@mixin _colored-chip($palette) {\n  $background: theming.get-color-from-palette($palette);\n  $foreground: theming.get-color-from-palette($palette, default-contrast);\n\n  &.mat-mdc-chip-selected,\n  &.mat-mdc-chip-highlighted {\n    @include _chip-variant($background, $foreground);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $foreground: map.get($config, foreground);\n  $is-dark: map.get($config, is-dark);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n\n    .mat-mdc-standard-chip {\n      $standard-background: if(\n        meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n        color.mix($on-surface, $surface, 12%),\n        $on-surface\n      );\n\n      @include _chip-variant(\n        $standard-background,\n        if($is-dark, mdc-color-palette.$grey-50, mdc-color-palette.$grey-900)\n      );\n\n      &.mat-primary {\n        @include _colored-chip($primary);\n      }\n\n      &.mat-accent {\n        @include _colored-chip($accent);\n      }\n\n      &.mat-warn {\n        @include _colored-chip($warn);\n      }\n    }\n  }\n\n  .mat-mdc-chip-focus-overlay {\n    background: map.get($foreground, base);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-chip-set.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  @include mdc-helpers.using-mdc-typography($config) {\n    // Note that we don't go through MDC's typography mixin, because it assigns the styles to\n    // an inner element which makes it difficult for clients to customize. Instead we apply the\n    // same styles ourselves to the root.\n    .mat-mdc-standard-chip {\n      @include mdc-typography.typography(body2, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $density-scale: theming.clamp-density($density-scale, -2);\n  .mat-mdc-chip {\n    @include mdc-chip-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:color';\n@use '@material/switch/switch-theme' as mdc-switch-theme;\n@use '@material/theme/color-palette' as mdc-color-palette;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n\n// Generates all color mapping for the properties that only change based on the theme.\n@function _get-theme-base-map($is-dark) {\n  $on-surface: if($is-dark, mdc-color-palette.$grey-100, mdc-color-palette.$grey-800);\n  $hairline: if($is-dark, mdc-color-palette.$grey-700, mdc-color-palette.$grey-300);\n  $on-surface-variant: if($is-dark, mdc-color-palette.$grey-500, mdc-color-palette.$grey-700);\n  $on-surface-state-content: if($is-dark, mdc-color-palette.$grey-50, mdc-color-palette.$grey-900);\n  $disabled-handle-color: if($is-dark, #000, mdc-color-palette.$grey-800);\n  $icon-color: if($is-dark, mdc-color-palette.$grey-900, #fff);\n\n  @return (\n    disabled-selected-handle-color: $disabled-handle-color,\n    disabled-unselected-handle-color: $disabled-handle-color,\n\n    disabled-selected-track-color: $on-surface,\n    disabled-unselected-track-color: $on-surface,\n    unselected-focus-state-layer-color: $on-surface,\n    unselected-pressed-state-layer-color: $on-surface,\n    unselected-hover-state-layer-color: $on-surface,\n\n    unselected-focus-track-color: $hairline,\n    unselected-hover-track-color: $hairline,\n    unselected-pressed-track-color: $hairline,\n    unselected-track-color: $hairline,\n\n    unselected-focus-handle-color: $on-surface-state-content,\n    unselected-hover-handle-color: $on-surface-state-content,\n    unselected-pressed-handle-color: $on-surface-state-content,\n\n    handle-surface-color: surface,\n    unselected-handle-color: $on-surface-variant,\n\n    selected-icon-color: $icon-color,\n    disabled-selected-icon-color: $icon-color,\n    disabled-unselected-icon-color: $icon-color,\n    unselected-icon-color: $icon-color,\n  );\n}\n\n// Generates the mapping for the properties that change based on the slide toggle color.\n@function _get-theme-color-map($color-palette, $is-dark) {\n  $primary: theming.get-color-from-palette($color-palette, if($is-dark, 300, 600));\n  $state-content: theming.get-color-from-palette($color-palette, if($is-dark, 200, 900));\n  $inverse: theming.get-color-from-palette($color-palette, if($is-dark, 600, 300));\n\n  @return (\n    selected-focus-state-layer-color: $primary,\n    selected-handle-color: $primary,\n    selected-hover-state-layer-color: $primary,\n    selected-pressed-state-layer-color: $primary,\n\n    selected-focus-handle-color: $state-content,\n    selected-hover-handle-color: $state-content,\n    selected-pressed-handle-color: $state-content,\n\n    selected-focus-track-color: $inverse,\n    selected-hover-track-color: $inverse,\n    selected-pressed-track-color: $inverse,\n    selected-track-color: $inverse,\n  );\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $is-dark: map.get($config, is-dark);\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    // MDC's switch doesn't support a `color` property. We add support\n    // for it by adding a CSS class for accent and warn style.\n    .mat-mdc-slide-toggle {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include mdc-switch-theme.theme(_get-theme-base-map($is-dark));\n\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      .mdc-switch--disabled + label {\n        color: theming.get-color-from-palette($foreground, disabled-text);\n      }\n\n      &.mat-primary {\n        @include mdc-switch-theme.theme(_get-theme-color-map($primary, $is-dark));\n      }\n\n      &.mat-accent {\n        @include mdc-switch-theme.theme(_get-theme-color-map($accent, $is-dark));\n      }\n\n      &.mat-warn {\n        @include mdc-switch-theme.theme(_get-theme-color-map($warn, $is-dark));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-slide-toggle {\n    @include mdc-switch-theme.theme(mdc-switch-theme.density($density-scale));\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-form-field {\n    @include typography.typography(body2, $query);\n\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, text-primary-on-background);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-flex;\n      &[hidden] {\n        display: none;\n      }\n      align-items: center;\n      vertical-align: middle;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, 0, auto);\n        @include rtl.reflexive-property(padding, variables.$item-spacing, 0);\n\n        order: 0;\n      }\n    }\n  }\n\n  .mdc-form-field--nowrap {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    }\n  }\n\n  .mdc-form-field--align-end {\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(margin, auto, 0);\n        @include rtl.reflexive-property(padding, 0, variables.$item-spacing);\n\n        order: -1;\n      }\n    }\n  }\n\n  .mdc-form-field--space-between {\n    @include feature-targeting.targets($feat-structure) {\n      justify-content: space-between;\n    }\n\n    > label {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0;\n\n        @include rtl.rtl {\n          // RTL needed for specificity\n          margin: 0;\n        }\n      }\n    }\n  }\n}\n","@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '../core/theming/palette';\n@use '../core/theming/theming';\n@use 'sass:map';\n\n$private-radio-theme-config: map.merge(mdc-radio-theme.$light-theme, (\n  // Exclude the styles we don't need.\n  selected-focus-state-layer-color: null,\n  selected-focus-state-layer-opacity: null,\n  selected-hover-state-layer-color: null,\n  selected-hover-state-layer-opacity: null,\n  selected-pressed-state-layer-color: null,\n  selected-pressed-state-layer-opacity: null,\n  unselected-focus-icon-color: null,\n  unselected-focus-state-layer-color: null,\n  unselected-focus-state-layer-opacity: null,\n  unselected-hover-state-layer-color: null,\n  unselected-hover-state-layer-opacity: null,\n  unselected-pressed-state-layer-color: null,\n  unselected-pressed-state-layer-opacity: null,\n));\n\n@mixin private-radio-color($color-config, $color-palette) {\n  $foreground: map.get($color-config, foreground);\n\n  $on-surface: rgba(mdc-theme-color.$on-surface, 0.54);\n  $is-dark: map.get($color-config, is-dark);\n  $active-border-color: if(\n          $is-dark,\n          theming.get-color-from-palette(palette.$gray-palette, 200),\n          theming.get-color-from-palette(palette.$gray-palette, 900)\n  );\n\n  & {\n    @include mdc-radio-theme.theme((\n      // The disabled colors don't use the `rgba` version, because\n      // MDC applies a separate opacity to disabled buttons.\n      disabled-selected-icon-color: mdc-theme-color.$on-surface,\n      disabled-unselected-icon-color: mdc-theme-color.$on-surface,\n      unselected-focus-icon-color: $active-border-color,\n      unselected-hover-icon-color: $active-border-color,\n      unselected-icon-color: $on-surface,\n      unselected-pressed-icon-color: $on-surface,\n      selected-focus-icon-color: $color-palette,\n      selected-hover-icon-color: $color-palette,\n      selected-icon-color: $color-palette,\n      selected-pressed-icon-color: $color-palette,\n    ));\n\n    --mat-mdc-radio-ripple-color: #{mdc-theme-color.prop-value(on-surface)};\n\n    // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n    .mdc-radio--disabled + label {\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n\n    --mat-mdc-radio-checked-ripple-color: #{$color-palette};\n  }\n}\n","@use 'sass:map';\n\n@use '@material/slider/slider-theme' as mdc-slider-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/typography/typography' as mdc-typography;\n@use '@material/theme/variables' as mdc-theme-variables;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-slider {\n      $is-dark: map.get($config, is-dark);\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n\n      @include mdc-slider-theme.theme((\n        label-container-color: if($is-dark, white, black),\n        label-label-text-color: if($is-dark, black, white),\n        disabled-handle-color: $on-surface,\n        disabled-active-track-color: $on-surface,\n        disabled-inactive-track-color: $on-surface,\n        with-tick-marks-disabled-container-color: $on-surface,\n      ));\n\n      // Note that technically we can control this using an `rgba` color in `label-container-color`.\n      // We don't do it, because the shapes MDC uses to construct the indicator overlap which causes\n      // their color opacities to stack with an `rgba` color.\n      --mat-mdc-slider-value-indicator-opacity: #{if($is-dark, 0.9, 0.6)};\n\n      &.mat-primary {\n        @include _slider-color(primary, on-primary);\n      }\n\n      &.mat-accent {\n        @include _slider-color(secondary, on-secondary);\n      }\n\n      &.mat-warn {\n        @include _slider-color(error, on-error);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-slider {\n      @include mdc-slider-theme.theme((\n        label-label-text-font: mdc-typography.get-font(subtitle2),\n        label-label-text-size: mdc-typography.get-size(subtitle2),\n        label-label-text-line-height: mdc-typography.get-line-height(subtitle2),\n        label-label-text-tracking: mdc-typography.get-tracking(subtitle2),\n        label-label-text-weight: mdc-typography.get-weight(subtitle2),\n      ));\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n@mixin _slider-color($color, $on-color) {\n  $ripple-color: map.get(mdc-theme-variables.$property-values, $color);\n  $resolved-color: mdc-theme-color.prop-value($color);\n  $resolved-on-color: mdc-theme-color.prop-value($on-color);\n\n  @include mdc-slider-theme.theme((\n    handle-color: $resolved-color,\n    focus-handle-color: $resolved-color,\n    hover-handle-color: $resolved-color,\n    active-track-color: $resolved-color,\n    inactive-track-color: $resolved-color,\n    with-tick-marks-active-container-color: $resolved-on-color,\n    with-tick-marks-inactive-container-color: $resolved-color,\n  ));\n\n  --mat-mdc-slider-ripple-color: #{$ripple-color};\n  --mat-mdc-slider-hover-ripple-color: #{rgba($ripple-color, 0.05)};\n  --mat-mdc-slider-focus-ripple-color: #{rgba($ripple-color, 0.2)};\n}\n","@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/menu-surface' as mdc-menu-surface;\n@use '@material/list/evolution-mixins' as mdc-list;\n@use '@material/typography' as mdc-typography;\n@use '@material/ripple' as mdc-ripple;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-theme-styles-query);\n    @include mdc-list.without-ripple(mdc-helpers.$mdc-theme-styles-query);\n\n    // MDC doesn't appear to have disabled styling for menu\n    // items so we have to grey them out ourselves.\n    .mat-mdc-menu-item[disabled] {\n      &,\n      .mat-mdc-menu-submenu-icon,\n      .mat-icon-no-color {\n        @include mdc-theme.prop(color, text-disabled-on-background);\n      }\n    }\n\n    // Since we're creating `mat-icon` and the submenu trigger\n    // chevron ourselves, we have to handle the color as well.\n    .mat-mdc-menu-item .mat-icon-no-color,\n    .mat-mdc-menu-submenu-icon {\n      @include mdc-theme.prop(color, text-primary-on-background);\n    }\n\n    // MDC's hover and focus styles are tied to their ripples which we aren't using.\n    .mat-mdc-menu-item:hover,\n    .mat-mdc-menu-item.cdk-program-focused,\n    .mat-mdc-menu-item.cdk-keyboard-focused,\n    .mat-mdc-menu-item-highlighted {\n      &:not([disabled]) {\n        $color: mdc-theme-color.$on-surface;\n        background: rgba($color, mdc-ripple.states-opacity($color, hover));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-typography-styles-query);\n\n    .mat-mdc-menu-content {\n      // Note that we include this private mixin, because the public\n      // one adds a bunch of styles that we aren't using for the menu.\n      @include mdc-list.list-base(mdc-helpers.$mdc-typography-styles-query);\n\n      // MDC uses the `subtitle1` level for list items, but the spec shows `body1` as the correct\n      // level.\n      &,\n      .mat-mdc-menu-item .mdc-list-item__primary-text {\n        @include mdc-typography.typography(body1, $query: mdc-helpers.$mdc-typography-styles-query);\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:map';\n@use '@material/list/evolution-mixins';\n@use '@material/list/list-theme' as mdc-list-theme;\n\n@use '../core/theming/theming';\n@use '../core/tokens/m2/mdc/list' as m2-mdc-list;\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './list-option-theme';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $mdc-list-color-tokens: m2-mdc-list.get-color-tokens($config);\n\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-color-tokens);\n  }\n\n  // TODO(mmalerba): This should use MDC checkbox's token API instead.\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-list-option {\n      @include list-option-theme.private-list-option-color-override($config, $primary, primary);\n    }\n    .mat-mdc-list-option.mat-accent {\n      @include list-option-theme.private-list-option-color-override($config, $accent, secondary);\n    }\n    .mat-mdc-list-option.mat-warn {\n      @include list-option-theme.private-list-option-color-override($config, $warn, error);\n    }\n  }\n\n  // There is no token for activated color on nav list.\n  // TODO(mmalerba): Add a token to MDC or make a custom one.\n  .mat-mdc-list-base.mat-mdc-list-base {\n    @include evolution-mixins.list-selected-ink-color($primary);\n  }\n\n  // TODO(mmalerba): Leaking styles from the old MDC list mixins used in other components can cause\n  //  opacity issues, so we need this override for now. We can remove it when all Angular Material\n  //  components stop using the old MDC mixins.\n  .mat-mdc-list-base .mdc-list-item--disabled {\n    .mdc-list-item__start,\n    .mdc-list-item__content,\n    .mdc-list-item__end {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $mdc-list-density-tokens: m2-mdc-list.get-density-tokens($density-scale);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-density-tokens);\n  }\n\n  // TODO(mmalerba): This is added to maintain the same style MDC used prior to the token-based API,\n  //  to avoid screenshot diffs. We should remove it in favor of following MDC's current style, or\n  //  add custom tokens for it.\n  $clamped-density-scale: theming.clamp-density($density-scale, -5);\n  .mat-mdc-list-item {\n    &.mdc-list-item--with-leading-avatar,\n    &.mdc-list-item--with-leading-checkbox,\n    &.mdc-list-item--with-leading-icon {\n      &.mdc-list-item--with-one-line {\n        height: map.get((\n            0: 56px,\n            -1: 52px,\n            -2: 48px,\n            -3: 44px,\n            -4: 40px,\n            -5: 40px,\n        ), $clamped-density-scale);\n      }\n\n      &.mdc-list-item--with-two-lines {\n        height: map.get((\n            0: 72px,\n            -1: 68px,\n            -2: 64px,\n            -3: 60px,\n            -4: 56px,\n            -5: 56px,\n        ), $clamped-density-scale);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  $mdc-list-typography-tokens: m2-mdc-list.get-typography-tokens($config);\n\n  // Add values for MDC list tokens.\n  .mat-mdc-list-base {\n    @include mdc-list-theme.theme($mdc-list-typography-tokens);\n  }\n\n  // MDC does not have tokens for the subheader.\n  // TODO(mmalerba): Discuss with MDC about adding them, or create custom tokens.\n  .mdc-list-group__subheader {\n    @include typography-utils.typography-level($config, subtitle-1);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../checkbox/checkbox-private';\n@use '../radio/radio-private';\n\n// Mixin that overrides the selected item and toggle indicator colors for list\n// options. By default, the MDC list uses the `primary` color for list items.\n// The MDC radio/checkbox inside list options by default uses the `primary`\n// color too.\n@mixin private-list-option-color-override($color-config, $color, $mdc-color) {\n  & .mdc-list-item__start, & .mdc-list-item__end {\n    @include checkbox-private.private-checkbox-styles-with-color($color-config, $color, $mdc-color);\n    @include radio-private.private-radio-color($color-config, $color);\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density' as mdc-density;\n@use '@material/typography' as mdc-typography;\n\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../form-field/form-field-density';\n@use './paginator-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n  $icon-color: rgba(theming.get-color-from-palette($foreground, base), 0.54);\n  $disabled-color: rgba(theming.get-color-from-palette($foreground, base), 0.12);\n\n  .mat-mdc-paginator {\n    background: theming.get-color-from-palette($background, card);\n    color: rgba(theming.get-color-from-palette($foreground, base), 0.87);\n  }\n\n  .mat-mdc-paginator-icon {\n    fill: $icon-color;\n  }\n\n  .mat-mdc-paginator-decrement,\n  .mat-mdc-paginator-increment {\n    border-top: 2px solid $icon-color;\n    border-right: 2px solid $icon-color;\n  }\n\n  .mat-mdc-paginator-first,\n  .mat-mdc-paginator-last {\n    border-top: 2px solid $icon-color;\n  }\n\n  .mat-mdc-icon-button[disabled] {\n    .mat-mdc-paginator-decrement,\n    .mat-mdc-paginator-increment,\n    .mat-mdc-paginator-first,\n    .mat-mdc-paginator-last {\n      border-color: $disabled-color;\n    }\n\n    .mat-mdc-paginator-icon {\n      fill: $disabled-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n\n  @include mdc-helpers.using-mdc-typography($config) {\n    .mat-mdc-paginator {\n      @include mdc-typography.typography(caption, $query: mdc-helpers.$mdc-typography-styles-query);\n    }\n\n    .mat-mdc-paginator .mat-mdc-select-value {\n      font-size: typography-utils.font-size($config, caption);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: mdc-density.prop-value(\n      paginator-variables.$density-config, $density-scale, height);\n\n  .mat-mdc-paginator {\n    // We need the form field to be narrower in order to fit into the paginator,\n    // so we set its density to be -4 or denser.\n    @if ((meta.type-of($density-scale) == 'number' and $density-scale >= -4) or\n         $density-scale == maximum) {\n      @include form-field-density.private-form-field-density(-4);\n    }\n    @else {\n      @include form-field-density.private-form-field-density($density-scale);\n    }\n  }\n\n  .mat-mdc-paginator-container {\n    min-height: $height;\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme' as mdc-theme;\n@use '@material/tab-indicator' as mdc-tab-indicator;\n@use '@material/tab-indicator/tab-indicator-theme' as mdc-tab-indicator-theme;\n@use '@material/tab' as mdc-tab;\n@use '@material/tab/mixins' as mdc-tab-mixins;\n@use '@material/tab-bar' as mdc-tab-bar;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-tab, .mat-mdc-tab-link {\n      @include mdc-tab-mixins.text-label-color(rgba(mdc-theme-color.$on-surface, 0.6));\n\n      // MDC seems to include a background color on tabs which only stands out on dark themes.\n      // Disable for now for backwards compatibility. These styles are inside the theme in order\n      // to avoid CSS specificity issues.\n      background-color: transparent;\n\n      &.mat-mdc-tab-disabled {\n        .mdc-tab__ripple::before,\n        .mat-ripple-element {\n          background-color: theming.get-color-from-palette($foreground, disabled);\n        }\n      }\n    }\n\n    @include _palette-styles($primary);\n\n    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n      &.mat-accent {\n        @include _palette-styles($accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($warn);\n      }\n    }\n\n    .mat-mdc-tab-group, .mat-mdc-tab-nav-bar {\n      &.mat-background-primary {\n        @include _background(primary, on-primary);\n      }\n\n      &.mat-background-accent {\n        @include _background(secondary, on-secondary);\n      }\n\n      &.mat-background-warn {\n        @include _background(error, on-error);\n      }\n    }\n\n    .mat-mdc-tab-header-pagination-chevron {\n      @include mdc-theme.prop(border-color, on-surface);\n    }\n  }\n}\n\n@mixin _background($background-color, $foreground-color) {\n  $background-value: mdc-theme-color.prop-value($background-color);\n  $foreground-value: mdc-theme-color.prop-value($foreground-color);\n  --mat-mdc-tab-header-with-background-background-color: #{$background-value};\n  --mat-mdc-tab-header-with-background-foreground-color: #{$foreground-value};\n}\n\n@mixin _palette-styles($color) {\n  .mat-mdc-tab, .mat-mdc-tab-link {\n    &:not(.mat-mdc-tab-disabled) {\n      @include mdc-tab-mixins.active-text-label-color($color);\n      @include mdc-tab-indicator-theme.theme-styles((active-indicator-color: $color));\n    }\n  }\n\n  .mdc-tab__ripple::before,\n  .mat-mdc-tab .mat-ripple-element,\n  .mat-mdc-tab-header-pagination .mat-ripple-element,\n  .mat-mdc-tab-link .mat-ripple-element {\n    @include mdc-theme.prop(background-color, $color);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-tab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-tab-indicator.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-tab-header {\n    @include mdc-tab-bar.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/theme';\n@use '@material/typography/typography';\n@use '@material/rtl/rtl';\n@use '@material/tab-indicator/mixins' as tab-indicator-mixins;\n@use './variables';\n\n// Public mixins\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-tab {\n    @include min-width(variables.$min-width, $query);\n    @include horizontal-padding(variables.$horizontal-padding, $query);\n\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      flex: 1 0 auto;\n      justify-content: center;\n      box-sizing: border-box;\n      // Explicitly setting margin to 0 is to override safari default margin for button elements.\n      margin: 0;\n      padding-top: 0;\n      padding-bottom: 0;\n      border: none;\n      outline: none;\n      text-align: center;\n      white-space: nowrap;\n      cursor: pointer;\n      -webkit-appearance: none;\n      z-index: 1;\n\n      // Firefox still draws a dotted border around focused buttons unless specifically overridden.\n      &::-moz-focus-inner {\n        padding: 0;\n        border: 0;\n      }\n\n      &[hidden] {\n        display: none;\n      }\n    }\n  }\n\n  .mdc-tab--min-width {\n    @include feature-targeting.targets($feat-structure) {\n      flex: 0 1 auto;\n    }\n  }\n\n  .mdc-tab__content {\n    @include feature-targeting.targets($feat-structure) {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: inherit;\n      pointer-events: none;\n    }\n  }\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      display: inline-block;\n      // Setting line-height here overrides the line-height from the typography\n      // mixin above. The line-height needs to be overridden so that the spacing\n      // between the text label and the icon as well as the text label and the\n      // bottom of the tab remain the same.\n      line-height: 1;\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-animation) {\n      transition: 150ms color linear;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      z-index: 2;\n    }\n  }\n\n  .mdc-tab--stacked {\n    @include stacked_($query);\n  }\n\n  .mdc-tab--active {\n    .mdc-tab__text-label,\n    .mdc-tab__icon {\n      @include feature-targeting.targets($feat-animation) {\n        transition-delay: 100ms;\n      }\n    }\n  }\n\n  .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon + .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(padding, left, 8px);\n    }\n  }\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin without-ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define tab\n\n  .mdc-tab {\n    @include base_($query);\n  }\n\n  .mdc-tab__content {\n    @include content_($query);\n  }\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      width: variables.$icon-size;\n      height: variables.$icon-size;\n      font-size: variables.$icon-size;\n    }\n  }\n\n  .mdc-tab--active {\n    @include active_($query);\n  }\n\n  .mdc-tab {\n    @include feature-targeting.targets($feat-structure) {\n      background: none;\n    }\n  }\n\n  @include static-styles($query: $query);\n  // postcss-bem-linter: end\n}\n\n// This API is intended for use by frameworks that may want to separate the ripple-related styles\n// from the other tah styles. It is recommended that most users use `mdc-tab-core-styles` instead.\n@mixin ripple($query: feature-targeting.all()) {\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include ripple_($query);\n}\n\n@mixin horizontal-padding($padding, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    padding-right: $padding;\n    padding-left: $padding;\n  }\n}\n\n@mixin text-label-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__text-label {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-tab__icon {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n\n      fill: currentColor;\n    }\n  }\n}\n\n@mixin states-color($color, $query: feature-targeting.all()) {\n  @include ripple-theme.states(\n    $color,\n    $query: $query,\n    $ripple-target: variables.$ripple-target\n  );\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include icon-color($color, $query);\n  @include states-color($color, $query);\n  @include text-label-color($color, $query);\n}\n\n@mixin active-text-label-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include text-label-color($color, $query);\n  }\n}\n\n@mixin active-icon-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include icon-color($color, $query);\n  }\n}\n\n@mixin active-states-color($color, $query: feature-targeting.all()) {\n  &.mdc-tab--active {\n    @include states-color($color, $query);\n  }\n}\n\n@mixin parent-positioning($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: relative;\n  }\n}\n\n@mixin fixed-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    flex: 0 1 $width;\n  }\n}\n\n///\n/// Sets tab height\n///\n/// @param {Number} $height Height value in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    height: $height;\n  }\n}\n\n///\n/// Sets tab text transform\n///\n/// @param {String} $transform The text-transform property to apply.\n///\n@mixin text-transform($transform, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-transform: $transform;\n  }\n}\n\n///\n/// Sets tab min-width.\n///\n/// @param {Number} $min-width Minimum width value in `px`.\n///\n@mixin min-width($min-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    min-width: $min-width;\n  }\n}\n\n//\n// Private\n//\n\n@mixin base_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include typography.typography(button, $query);\n  @include text-label-color(variables.$text-label-color-default, $query);\n  @include icon-color(variables.$icon-color-default, $query);\n  @include tab-indicator-mixins.surface($query);\n\n  @include ripple-theme.focus() {\n    &.mdc-tab--active .mdc-tab__focus-ring {\n      @include focus-ring.focus-ring(\n        $query: $query,\n        $ring-radius: 10px,\n        $container-outer-padding-vertical: -6px,\n        $container-outer-padding-horizontal: -4px\n      );\n\n      @include feature-targeting.targets($feat-structure) {\n        margin-top: -2px;\n        // Set z-index to +1 above the .mdc-tab\n        z-index: 2;\n      }\n    }\n\n    .mdc-tab__focus-ring {\n      @include focus-ring.focus-ring(\n        $query: $query,\n        $ring-radius: 10px,\n        $container-outer-padding-vertical: -4px,\n        $container-outer-padding-horizontal: -4px\n      );\n\n      @include feature-targeting.targets($feat-structure) {\n        // Set z-index to +1 above the .mdc-tab\n        z-index: 2;\n      }\n    }\n  }\n}\n\n@mixin ripple_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-tab {\n    @include ripple.surface(\n      $query,\n      $ripple-target: variables.$ripple-target,\n      $include-will-change: false\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n    @include ripple-theme.states(\n      $color: primary,\n      $query: $query,\n      $ripple-target: variables.$ripple-target\n    );\n  }\n\n  #{variables.$ripple-target} {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      overflow: hidden;\n      // TODO(b/151931961): Remove the following line once resolved\n      will-change: transform, opacity;\n    }\n  }\n}\n\n@mixin content_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include tab-indicator-mixins.surface($query);\n}\n\n@mixin stacked_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    .mdc-tab__content {\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n    }\n\n    .mdc-tab__text-label {\n      padding-top: 6px;\n      padding-bottom: 4px;\n    }\n  }\n}\n\n@mixin active_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include text-label-color(variables.$text-label-color-active, $query);\n  @include icon-color(variables.$icon-color-active, $query);\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/validate';\n@use '@material/theme/theme-color';\n\n$light-theme: (\n  active-indicator-color: theme-color.$primary,\n  active-indicator-height: 3px,\n  active-indicator-shape: (\n    3px,\n    3px,\n    0,\n    0,\n  ),\n);\n$custom-property-prefix: 'tab-indicator';\n\n@mixin theme($theme) {\n  $theme: validate.theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  // TODO(b/251881053): Use theme-styles mixin from validate module\n  // all customers are migrated\n  @include theme.validate-theme-styles($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n  @include underline-color(map.get($theme, active-indicator-color));\n  @include _underline-height(map.get($theme, active-indicator-height));\n  @include _underline-shape(map.get($theme, active-indicator-shape));\n}\n\n@mixin underline-color($color) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-color, $color);\n  }\n}\n\n@mixin _underline-height($height) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-top-width, $height);\n  }\n}\n\n@mixin _underline-shape($radius) {\n  .mdc-tab-indicator__content--underline {\n    @include theme.property(border-radius, $radius);\n  }\n}\n","@use '@material/checkbox/checkbox' as mdc-checkbox;\n@use '@material/checkbox/checkbox-theme' as mdc-checkbox-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/theme/theme';\n@use 'sass:map';\n@use 'sass:color';\n@use '../core/ripple/ripple-theme';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n@use './checkbox-private';\n\n// Apply ripple colors to the MatRipple element and the MDC ripple element when the\n// checkbox is selected.\n@mixin _selected-ripple-colors($theme, $mdc-color) {\n  .mdc-checkbox--selected ~ {\n    .mat-mdc-checkbox-ripple {\n      @include ripple-theme.color((\n          foreground: (\n              base: mdc-theme-color.prop-value($mdc-color)\n          ),\n      ));\n    }\n\n    .mdc-checkbox__ripple {\n      background: $theme;\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n  $foreground: map.get($config, foreground);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-checkbox {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n      @include ripple-theme.color((\n        foreground: (\n          base: mdc-theme-color.prop-value(on-surface)\n        ),\n      ));\n\n      .mdc-checkbox__ripple {\n        background: mdc-theme-color.prop-value(on-surface);\n      }\n\n      // MDC's checkbox doesn't support a `color` property. We add support for it by adding a CSS\n      // class for accent and warn style, and applying the appropriate overrides below. Since we\n      // don't use MDC's ripple, we also need to set the color for our replacement ripple.\n      &.mat-primary {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $primary, primary);\n        @include _selected-ripple-colors($primary, primary);\n      }\n\n      &.mat-accent {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $accent, secondary);\n        @include _selected-ripple-colors($accent, secondary);\n      }\n\n      &.mat-warn {\n        @include checkbox-private.private-checkbox-styles-with-color($config, $warn, error);\n        @include _selected-ripple-colors($warn, error);\n      }\n    }\n\n    .mat-mdc-checkbox-disabled label {\n      // MDC should set the disabled color on the label, but doesn't, so we do it here instead.\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n          theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-checkbox.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  @include mdc-helpers.disable-mdc-fallback-declarations {\n    .mat-mdc-checkbox .mdc-checkbox {\n      @include mdc-checkbox-theme.density(\n        $density-scale,\n        $query: mdc-helpers.$mdc-base-styles-query\n      );\n    }\n\n    @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n      .mat-mdc-checkbox-touch-target {\n        display: none;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/button/button' as mdc-button;\n@use '@material/button/button-theme' as mdc-button-theme;\n@use '@material/button/button-text-theme' as mdc-button-text-theme;\n@use '@material/button/button-filled-theme' as mdc-button-filled-theme;\n@use '@material/button/button-protected-theme' as mdc-button-protected-theme;\n@use '@material/button/button-outlined-theme' as mdc-button-outlined-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _button-variant($color) {\n  @include mdc-button-text-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin _unelevated-button-variant($foreground, $background) {\n  @include mdc-button-filled-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _raised-button-variant($foreground, $background) {\n  @include mdc-button-protected-theme.theme((\n    container-color: $background,\n    label-text-color: $foreground,\n  ));\n}\n\n@mixin _outlined-button-variant($color) {\n  @include mdc-button-outlined-theme.theme((\n    label-text-color: $color,\n  ));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $surface: mdc-theme-color.prop-value(surface);\n    $disabled-ink-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n    $disabled-container-color: rgba($on-surface, 0.12);\n    $primary: mdc-theme-color.prop-value(primary);\n    $on-primary: mdc-theme-color.prop-value(on-primary);\n    $secondary: mdc-theme-color.prop-value(secondary);\n    $on-secondary: mdc-theme-color.prop-value(on-secondary);\n    $error: mdc-theme-color.prop-value(error);\n    $on-error: mdc-theme-color.prop-value(on-error);\n\n    .mat-mdc-button {\n      &.mat-unthemed {\n        @include _button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-text-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-label-text-color: $disabled-ink-color,\n          label-text-color: $disabled-ink-color\n        ));\n      }\n    }\n\n    .mat-mdc-unelevated-button {\n      &.mat-unthemed {\n        @include _unelevated-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _unelevated-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _unelevated-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _unelevated-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-filled-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n        ));\n      }\n    }\n\n    .mat-mdc-raised-button {\n      &.mat-unthemed {\n        @include _raised-button-variant($on-surface, $surface);\n      }\n\n      &.mat-primary {\n        @include _raised-button-variant($on-primary, $primary);\n      }\n\n      &.mat-accent {\n        @include _raised-button-variant($on-secondary, $secondary);\n      }\n\n      &.mat-warn {\n        @include _raised-button-variant($on-error, $error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-protected-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          disabled-container-color: $disabled-container-color,\n          disabled-label-text-color: $disabled-ink-color,\n          container-color: $disabled-container-color,\n          label-text-color: $disabled-ink-color,\n          container-elevation: 0,\n        ));\n      }\n    }\n\n    .mat-mdc-outlined-button {\n      @include mdc-button-outlined-theme.theme((\n        outline-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12)\n      ));\n\n      &.mat-unthemed {\n        @include _outlined-button-variant($on-surface);\n      }\n\n      &.mat-primary {\n        @include _outlined-button-variant($primary);\n      }\n\n      &.mat-accent {\n        @include _outlined-button-variant($secondary);\n      }\n\n      &.mat-warn {\n        @include _outlined-button-variant($error);\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-button-outlined-theme.theme((\n          // We need to pass both the disabled and enabled values, because the enabled\n          // ones apply to anchors while the disabled ones are for buttons.\n          label-text-color: $disabled-ink-color,\n          disabled-label-text-color: $disabled-ink-color,\n          outline-color: rgba($on-surface, 0.12),\n          disabled-outline-color: rgba($on-surface, 0.12),\n        ));\n      }\n    }\n\n    // Ripple colors\n    .mat-mdc-button, .mat-mdc-outlined-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n    }\n\n    .mat-mdc-raised-button, .mat-mdc-unelevated-button {\n      @include button-theme-private.ripple-theme-styles($config, true);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-button,\n  .mat-mdc-raised-button,\n  .mat-mdc-unelevated-button,\n  .mat-mdc-outlined-button {\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n    &.mat-mdc-button-base {\n      @include mdc-button-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n      @include button-theme-private.touch-target-density($density-scale);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/ripple/ripple-theme' as mdc-ripple-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin _ripple-color($color) {\n  --mat-mdc-button-persistent-ripple-color: #{$color};\n  --mat-mdc-button-ripple-color: #{rgba($color, 0.1)};\n}\n\n@mixin ripple-theme-styles($config, $is-filled) {\n  $opacities: if(map.get($config, is-dark),\n    mdc-ripple-theme.$light-ink-opacities, mdc-ripple-theme.$dark-ink-opacities);\n\n  // Ideally these styles would be structural, but MDC bases some of the opacities on the theme.\n  &:hover .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, hover);\n  }\n\n  &.cdk-program-focused,\n  &.cdk-keyboard-focused {\n    .mat-mdc-button-persistent-ripple::before {\n      opacity: map.get($opacities, focus);\n    }\n  }\n\n  &:active .mat-mdc-button-persistent-ripple::before {\n    opacity: map.get($opacities, press);\n  }\n\n  @include _ripple-color(mdc-theme-color.prop-value(on-surface));\n\n  &.mat-primary {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-primary, primary)));\n  }\n\n  &.mat-accent {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-secondary, secondary)));\n  }\n\n  &.mat-warn {\n    @include _ripple-color(mdc-theme-color.prop-value(if($is-filled, on-error, error)));\n  }\n}\n\n// Wraps the content style in a selector for the disabled state.\n// MDC adds theme color by using :not(:disabled), so just using [disabled] once will not\n// override this, neither will it apply to anchor tags. This needs to override the\n// previously set theme color, so it must be ordered after the theme styles.\n// TODO(andrewseguin): Discuss with the MDC team to see if we can avoid the :not(:disabled) by\n// manually styling disabled buttons with a [disabled] selector.\n@mixin apply-disabled-style() {\n  &[disabled][disabled] {\n    @content;\n  }\n}\n\n// Hides the touch target on lower densities.\n@mixin touch-target-density($scale) {\n  @include mdc-helpers.if-touch-targets-unsupported($scale) {\n    .mat-mdc-button-touch-target {\n      display: none;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/icon-button/mixins' as mdc-icon-button;\n@use '@material/icon-button/icon-button-theme' as mdc-icon-button-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $is-dark: map.get($config, is-dark);\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $disabled-color: rgba($on-surface, if($is-dark, 0.5, 0.38));\n\n    .mat-mdc-icon-button {\n      @include button-theme-private.ripple-theme-styles($config, false);\n\n      &.mat-primary {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(primary)));\n      }\n\n      &.mat-accent {\n        @include mdc-icon-button-theme.theme((icon-color: mdc-theme-color.prop-value(secondary)));\n      }\n\n      &.mat-warn {\n        @include mdc-icon-button-theme.theme((icon-color: (mdc-theme-color.prop-value(error))));\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include mdc-icon-button-theme.theme((\n          icon-color: $disabled-color,\n          disabled-icon-color: $disabled-color,\n        ));\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-icon-button.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n    // Use `mat-mdc-button-base` to increase the specificity over the button's structural styles.\n  .mat-mdc-icon-button.mat-mdc-button-base {\n    @include mdc-icon-button.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n    @include button-theme-private.touch-target-density($density-scale);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon-button') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/fab/fab' as mdc-fab;\n@use '@material/fab/fab-theme' as mdc-fab-theme;\n@use '@material/theme/theme-color' as mdc-theme-color;\n\n@use './button-theme-private';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n\n@mixin _fab-variant($foreground, $background) {\n  @include mdc-fab-theme.theme((\n    container-color: $background,\n    icon-color: $foreground,\n  ));\n\n  --mat-mdc-fab-color: #{$foreground};\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    $on-surface: mdc-theme-color.prop-value(on-surface);\n    $is-dark: map.get($config, is-dark);\n\n    .mat-mdc-fab, .mat-mdc-mini-fab {\n      @include button-theme-private.ripple-theme-styles($config, true);\n\n      &.mat-unthemed {\n        @include _fab-variant($on-surface, mdc-theme-color.prop-value(surface));\n      }\n\n      &.mat-primary {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-primary),\n          mdc-theme-color.prop-value(primary)\n        );\n      }\n\n      &.mat-accent {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-secondary),\n          mdc-theme-color.prop-value(secondary)\n        );\n      }\n\n      &.mat-warn {\n        @include _fab-variant(\n          mdc-theme-color.prop-value(on-error),\n          mdc-theme-color.prop-value(error)\n        );\n      }\n\n      @include button-theme-private.apply-disabled-style() {\n        @include _fab-variant(\n          rgba($on-surface, if(map.get($config, is-dark), 0.5, 0.38)),\n          rgba($on-surface, 0.12)\n        );\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n    theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-fab.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-fab') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/snackbar/snackbar-theme' as mdc-snackbar-theme;\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $is-dark-theme: map.get($config, is-dark);\n  $accent: map.get($config, accent);\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-snack-bar-container {\n      $button-color: if(\n        $is-dark-theme,\n        mdc-theme-color.prop-value(text-primary-on-light),\n        theming.get-color-from-palette($accent, text)\n      );\n      --mat-mdc-snack-bar-button-color: #{$button-color};\n      $on-surface: mdc-theme-color.prop-value(on-surface);\n      $surface: mdc-theme-color.prop-value(surface);\n\n      @include mdc-snackbar-theme.theme((\n        container-color: if(\n          meta.type-of($on-surface) == color and meta.type-of($surface) == color,\n          color.mix($on-surface, $surface, 80%),\n          $on-surface\n        ),\n        supporting-text-color: if(\n          meta.type-of($surface) == color,\n          rgba($surface, mdc-theme-color.text-emphasis(high)),\n          $surface\n        )\n      ));\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @if ($config) {\n      .mat-mdc-snack-bar-container {\n        @include mdc-snackbar-theme.theme((\n          supporting-text-font: typography-utils.font-family($config, body-2),\n          supporting-text-line-height: typography-utils.line-height($config, body-2),\n          supporting-text-size: typography-utils.font-size($config, body-2),\n          supporting-text-weight: typography-utils.font-weight($config, body-2),\n        ));\n      }\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/checkbox/mixins' as checkbox-mixins;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './data-table-cell';\n@use './data-table-header-cell';\n@use './data-table-pagination';\n@use './data-table-progress-indicator';\n@use './data-table-theme';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include table-styles($query: $query);\n  @include data-table-theme.sort-icon-color(\n    data-table-theme.$sort-icon-color,\n    $query: $query\n  );\n  @include data-table-theme.sort-icon-active-color(\n    data-table-theme.$sort-icon-active-color,\n    $query: $query\n  );\n\n  @include data-table-progress-indicator.static-styles($query: $query);\n  @include data-table-pagination.core-styles($query: $query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      // NOTE: Root element should not be scrollable, added this for backward\n      // compatibility.\n      -webkit-overflow-scrolling: touch;\n      display: inline-flex;\n      flex-direction: column;\n      box-sizing: border-box;\n      position: relative;\n    }\n  }\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      // Makes the table scroll smoothly in iOS.\n      -webkit-overflow-scrolling: touch;\n      overflow-x: auto;\n      width: 100%;\n    }\n  }\n\n  .mdc-data-table__table {\n    @include feature-targeting.targets($feat-structure) {\n      min-width: 100%; // Makes table full-width of its container (Firefox / IE11)\n      border: 0;\n      white-space: nowrap;\n      border-spacing: 0;\n      /**\n       * With table-layout:fixed, table and column widths are defined by the width\n       * of the first row of cells. Cells in subsequent rows do not affect column\n       * widths. This results in a predictable table layout and may also speed up\n       * rendering.\n       */\n      table-layout: fixed;\n    }\n  }\n\n  @include data-table-header-cell.static-styles($query);\n  @include data-table-cell.static-styles($query);\n  @include data-table-pagination.static-styles($query);\n  @include data-table-progress-indicator.static-styles($query);\n}\n\n// This API includes only the table styles without the sorting, pagination and\n// loading styles. It is intended to be used by frameworks that only need the\n// table styles.\n@mixin table-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define data-table\n\n  .mdc-data-table__content {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  .mdc-data-table {\n    @include data-table-theme.fill-color(\n      data-table-theme.$fill-color,\n      $query: $query\n    );\n    @include data-table-theme.shape-radius(\n      data-table-theme.$shape-radius,\n      $query: $query\n    );\n    @include data-table-theme.stroke-size(\n      data-table-theme.$stroke-size,\n      $query: $query\n    );\n    @include data-table-theme.stroke-color(\n      data-table-theme.$stroke-color,\n      $query: $query\n    );\n  }\n\n  // Note that we don't output the color styles inside the `@at-root`,\n  // because it makes it difficult to consume by projects that wrap their\n  // themes in a class (e.g. `.my-theme { @include mdc-data-table-core-style() }`).\n  @include data-table-theme.row-fill-color(\n    data-table-theme.$row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-fill-color(\n    data-table-theme.$header-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.selected-row-fill-color(\n    data-table-theme.$selected-row-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-color(\n    data-table-theme.$divider-color,\n    $query: $query\n  );\n  @include data-table-theme.divider-size(\n    data-table-theme.$divider-size,\n    $query: $query\n  );\n  @include data-table-theme.row-hover-fill-color(\n    data-table-theme.$row-hover-fill-color,\n    $query: $query\n  );\n  @include data-table-theme.header-row-text-color(\n    data-table-theme.$header-row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.row-text-color(\n    data-table-theme.$row-text-color,\n    $query: $query\n  );\n  @include data-table-theme.density(\n    data-table-theme.$default-density-scale,\n    $query: $query\n  );\n  @include data-table-theme.cell-padding(\n    $leading-padding: data-table-theme.$cell-leading-padding,\n    $trailing-padding: data-table-theme.$cell-trailing-padding,\n    $query: $query\n  );\n\n  @include data-table-cell.core-styles($query: $query);\n  @include data-table-header-cell.core-styles($query: $query);\n\n  .mdc-data-table--sticky-header {\n    @include data-table-header-cell.header-cell-sticky($query: $query);\n  }\n\n  @include static-styles($query);\n}\n\n@mixin theme-baseline($query: feature-targeting.all()) {\n  @include data-table-theme.checked-icon-color(\n    data-table-theme.$checked-icon-color,\n    $query: $query\n  );\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:meta';\n@use '@material/animation/functions';\n@use '@material/checkbox/checkbox-theme';\n@use '@material/density/density';\n@use '@material/elevation/mixins';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/list/evolution-mixins' as list-theme;\n@use '@material/rtl/rtl';\n@use '@material/select/select-theme';\n@use '@material/shape/functions' as shape-functions;\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/tokens/v0_132' as tokens;\n@use '@material/touch-target/touch-target';\n@use '@material/typography/typography';\n\n$fill-color: surface !default;\n$header-row-fill-color: surface !default;\n$row-fill-color: inherit !default;\n$selected-row-fill-color: rgba(theme-color.prop-value(primary), 0.04) !default;\n$checked-icon-color: primary !default;\n$divider-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n$divider-size: 1px !default;\n$row-hover-fill-color: rgba(theme-color.prop-value(on-surface), 0.04) !default;\n\n$header-row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$row-text-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$sort-icon-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$sort-icon-active-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.87\n) !default;\n$sort-icon-density-scale: -5 !default;\n\n$shape-radius: medium !default;\n$stroke-size: 1px !default;\n$stroke-color: rgba(theme-color.prop-value(on-surface), 0.12) !default;\n\n$row-height: 52px !default;\n$header-row-height: get-header-row-height($row-height) !default;\n$cell-leading-padding: 16px !default;\n$cell-trailing-padding: 16px !default;\n\n$minimum-row-height: 36px !default;\n$maximum-row-height: $row-height !default;\n$default-density-scale: density.$default-scale !default;\n$density-config: (\n  height: (\n    maximum: $row-height,\n    default: $row-height,\n    minimum: $minimum-row-height,\n  ),\n);\n$pagination-rows-per-page-select-height: 36px;\n\n$light-theme: tokens.md-comp-data-table-values();\n\n@function remove-unsupported-keys($theme) {\n  $theme: map.remove(\n    $theme,\n    (\n      // TODO(b/254356584): We don't set pagination background-color.\n      'footer-container-color',\n      // TODO(b/254356584): Select doesn't have Theming API support yet.\n      'footer-outlined-select-text-field-container-height',\n      // TODO(b/254356584): We don't add hover styles on header.\n      'header-hover-headline-color',\n      // TODO(b/254356584): We don't add hover styles on header.\n      'header-hover-sorting-icon-button-color',\n      // TODO(b/254356584): We don't support disabled rows.\n      'row-item-disabled-label-text-color',\n      // TODO(b/254356584): We don't support disabled rows.\n      'row-item-disabled-label-text-opacity',\n      // TODO(b/254356584): We don't add hover styles on selected rows.\n      'row-item-selected-hover-state-layer-color',\n      // TODO(b/254356584): We don't add hover styles on selected rows.\n      'row-item-selected-hover-state-layer-opacity',\n      // TODO(b/254356584): We don't have state layers on rows.\n      'row-item-unselected-hover-state-layer-color'\n        // TODO(b/254356584): We don't have state layers on rows.\n      'row-item-unselected-hover-state-layer-opacity'\n    )\n  );\n  @return $theme;\n}\n\n$_validation-theme: remove-unsupported-keys($light-theme);\n\n$custom-property-prefix: 'data-table';\n\n@mixin theme($theme) {\n  @include theme.validate-theme($_validation-theme, $theme);\n  @include keys.declare-custom-properties($theme, $custom-property-prefix);\n}\n\n@mixin theme-styles($theme, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include theme.validate-theme-styles($_validation-theme, $theme);\n  $theme: keys.create-theme-properties($theme, $custom-property-prefix);\n\n  ///////////\n  // Table //\n  ///////////\n\n  @include shape-radius(map.get($theme, 'container-shape'), $query: $query);\n  @include stroke-color(map.get($theme, 'outline-color'), $query: $query);\n  @include stroke-size(map.get($theme, 'outline-width'), $query: $query);\n\n  ////////////\n  // Header //\n  ////////////\n\n  @include header-row-fill-color(\n    map.get($theme, 'header-container-color'),\n    $query: $query\n  );\n  @include header-row-height(\n    map.get($theme, 'header-container-height'),\n    $query: $query\n  );\n  @include header-row-text-color(\n    map.get($theme, 'header-headline-color'),\n    $query: $query\n  );\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'header-headline-font');\n      $line-height: map.get($theme, 'header-headline-line-height');\n      $size: map.get($theme, 'header-headline-size');\n      $tracking: map.get($theme, 'header-headline-tracking');\n      $weight: map.get($theme, 'header-headline-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n  }\n\n  //////////\n  // Rows //\n  //////////\n\n  // Separated because row-height() sets min-height on pagination\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(\n        'height',\n        map.get($theme, 'row-item-container-height')\n      );\n    }\n  }\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'row-item-label-text-font');\n      $line-height: map.get($theme, 'row-item-label-text-line-height');\n      $size: map.get($theme, 'row-item-label-text-size');\n      $tracking: map.get($theme, 'row-item-label-text-tracking');\n      $weight: map.get($theme, 'row-item-label-text-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n\n    @include feature-targeting.targets($feat-color) {\n      // Separated because row-text-color() also sets color on pagination text\n      @include theme.property(\n        'color',\n        map.get($theme, 'row-item-label-text-color')\n      );\n    }\n  }\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because divider-color() also sets color on pagination select\n      @include theme.property(\n        'border-bottom-color',\n        map.get($theme, 'row-item-outline-color')\n      );\n    }\n  }\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because divider-color() also sets color on pagination select\n      @include theme.property(\n        'border-top-color',\n        map.get($theme, 'row-item-outline-color')\n      );\n    }\n  }\n  @include divider-size(\n    map.get($theme, 'row-item-outline-width'),\n    $query: $query\n  );\n  @include row-fill-color(\n    map.get($theme, 'row-item-unselected-container-color'),\n    $query: $query\n  );\n  @include selected-row-fill-color(\n    map.get($theme, 'row-item-selected-container-color'),\n    $query: $query\n  );\n\n  ////////////\n  // Footer //\n  ////////////\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-typography) {\n      $font: map.get($theme, 'footer-supporting-text-font');\n      $line-height: map.get($theme, 'footer-supporting-text-line-height');\n      $size: map.get($theme, 'footer-supporting-text-size');\n      $tracking: map.get($theme, 'footer-supporting-text-tracking');\n      $weight: map.get($theme, 'footer-supporting-text-weight');\n\n      @include theme.property('font-family', $font);\n      @include theme.property('line-height', $line-height);\n      @include theme.property('font-size', $size);\n      @include theme.property('letter-spacing', $tracking);\n      @include theme.property('font-weight', $weight);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      // Separated because row-height() also sets height on row\n      @include theme.property(\n        'min-height',\n        map.get($theme, 'footer-container-height')\n      );\n    }\n  }\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label {\n    @include feature-targeting.targets($feat-color) {\n      // Separated because row-text-color() also sets color on row text\n      @include theme.property(\n        'color',\n        map.get($theme, 'footer-supporting-text-color')\n      );\n    }\n  }\n}\n\n@function get-header-row-height($height) {\n  @return $height + 4px;\n}\n\n/// Sets the color of sort icon button when it is in idle state.\n/// (icon showed on header cell focus)\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n/// Sets the color of sort icon button when it is activated (sorted).\n/// @param {String} $color - Color of sort icon button\n@mixin sort-icon-active-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell--sorted .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.ink-color($color, $query: $query);\n  }\n}\n\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('background-color', $color);\n  }\n}\n\n@mixin header-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Set background color to cell instead of row to support sticky header.\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin selected-row-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row--selected {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin checked-icon-color($color, $query: feature-targeting.all()) {\n  .mdc-data-table__header-row-checkbox,\n  .mdc-data-table__row-checkbox {\n    @include checkbox-theme.focus-indicator-color($color, $query: $query);\n    @include checkbox-theme.container-colors(\n      $marked-stroke-color: $color,\n      $marked-fill-color: $color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets divider color of data table (including outline color of rows per page\n/// select). Use `stroke-color()` to set table border color.\n/// @param {Color} $color Divider color.\n///\n@mixin divider-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-rows-per-page-select--outlined {\n    @include select-theme.outline-color($color, $query: $query);\n  }\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('border-bottom-color', $color);\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('border-top-color', $color);\n    }\n  }\n}\n\n@mixin divider-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('border-bottom-width', $size);\n      border-bottom-style: solid;\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('border-top-width', $size);\n      border-top-style: solid;\n    }\n  }\n\n  .mdc-data-table__row:last-child .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      border-bottom: none;\n    }\n  }\n}\n\n@mixin row-hover-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__row:not(.mdc-data-table__row--selected):hover {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('background-color', $color);\n    }\n  }\n}\n\n@mixin header-row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets row text color (including pagination row text).\n/// @param {Color} $color Row text color\n///\n@mixin row-text-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-data-table__pagination-total,\n  .mdc-data-table__pagination-rows-per-page-label,\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property('color', $color);\n    }\n  }\n}\n\n///\n/// Sets rounded shape radius to data table.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - Set to `true` to flip radius corners in\n///     RTL context.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include shape-mixins.radius($radius, $rtl-reflexive, $query: $query);\n\n  // Apply same border radius as parent to leading/trailing header cells,\n  // and leading/trailing cells of last row.\n  // Cells that have explicit background color applied require border\n  // radius to take the parents' rounded shape.\n  $border-radius: shape-functions.unpack-radius($radius);\n  $top-left-radius: shape-functions.resolve-radius(list.nth($border-radius, 1));\n  $top-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 2)\n  );\n  $bottom-right-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 3)\n  );\n  $bottom-left-radius: shape-functions.resolve-radius(\n    list.nth($border-radius, 4)\n  );\n\n  .mdc-data-table__header-cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-left-radius, $top-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-right-radius,\n          if($rtl-reflexive, $top-left-radius, $top-right-radius)\n        );\n\n        border-top-left-radius: 0;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-top-right-radius, $top-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-top-left-radius,\n          if($rtl-reflexive, $top-right-radius, $top-left-radius)\n        );\n\n        border-top-right-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:first-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-left-radius, $bottom-left-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-right-radius,\n          if($rtl-reflexive, $bottom-left-radius, $bottom-right-radius)\n        );\n\n        border-bottom-left-radius: 0;\n      }\n    }\n  }\n\n  &.mdc-data-table--without-footer\n    .mdc-data-table__row:last-child\n    .mdc-data-table__cell:last-child {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-bottom-right-radius, $bottom-right-radius);\n\n      @include rtl.rtl {\n        @include theme.property(\n          border-bottom-left-radius,\n          if($rtl-reflexive, $bottom-right-radius, $bottom-left-radius)\n        );\n\n        border-bottom-right-radius: 0;\n      }\n    }\n  }\n}\n\n@mixin stroke-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property('border-width', $size);\n    border-style: solid;\n  }\n}\n\n@mixin stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property('border-color', $color);\n  }\n}\n\n@mixin header-row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('height', $height);\n    }\n  }\n}\n\n@mixin row-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__row {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('height', $height);\n    }\n  }\n\n  .mdc-data-table__pagination {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('min-height', $height);\n    }\n  }\n}\n\n///\n/// Sets cell padding including cell, header cell, row checkbox cell and header\n/// row checkbox cell.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $trailing-padding [$cell-trailing-padding] Trailing padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $trailing-padding: $cell-trailing-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__cell,\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0 $trailing-padding 0 $leading-padding;\n    }\n  }\n\n  @include checkbox-cell-padding(\n    $leading-padding: $leading-padding,\n    $row-checkbox-density-scale: $row-checkbox-density-scale,\n    $query: $query\n  );\n}\n\n///\n/// Sets only row checkbox cell and header row checkbox cell leading padding.\n/// Use `cell-padding()` to set all cell's padding.\n/// @param {Number} $leading-padding [$cell-leading-padding] Leading padding.\n/// @param {Number} $checkbox-touch-size [$checkbox-touch-size] Checkbox Touch\n///     Size. Use this to adjust row checkbox cell leading padding based on\n///     checkbox density scale.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to adjust alignment of row checkbox within a cell.\n///     Ignore if data table's density scale is 0.\n///     See `checkbox-theme.density()` mixin for supported density scales.\n///\n@mixin checkbox-cell-padding(\n  $leading-padding: $cell-leading-padding,\n  $row-checkbox-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell--checkbox,\n  .mdc-data-table__cell--checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      // Distance from leading cell bound to checkbox's icon bound should be\n      // 16dp (`$leading-padding`). Calculate required padding excluding\n      // checkbox bounds.\n      $checkbox-icon-size: 24px;\n      $checkbox-touch-size: touch-target.$height;\n      @if $row-checkbox-density-scale and $row-checkbox-density-scale < 0 {\n        $checkbox-touch-size: checkbox-theme.get-ripple-size(\n          $row-checkbox-density-scale\n        );\n      }\n      $leading-padding: $leading-padding -\n        math.div($checkbox-touch-size - $checkbox-icon-size, 2);\n      @include rtl.reflexive-property(padding, $leading-padding, 0);\n    }\n  }\n}\n\n@mixin column-widths($width-list, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @for $i from 1 through list.length($width-list) {\n    .mdc-data-table__row > :nth-child(#{$i}) {\n      @include feature-targeting.targets($feat-structure) {\n        width: list.nth($width-list, $i);\n      }\n    }\n  }\n}\n\n///\n/// Sets density scale for data table. Use corresponding density mixins of child components (such as Checkbox) to apply\n/// density scales which will be rendered inside data table.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-4`,\n///     `-3`, `-2`, `-1`, `0`.\n/// @param {Number} $row-checkbox-density-scale [null] Density scale of row\n///     checkbox. Use this to set density of row checkbox and also\n///     automatically adjust the alignment of row checkbox within a cell.\n///     See `checkbox.density()` mixin for supported density scales.\n///\n@mixin density(\n  $density-scale,\n  $row-checkbox-density-scale: null,\n  $pagination-select-density-scale: null,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include row-height($height, $query: $query);\n  @include header-row-height(get-header-row-height($height), $query: $query);\n\n  @if $row-checkbox-density-scale {\n    @include checkbox-cell-padding(\n      $leading-padding: $cell-leading-padding,\n      $row-checkbox-density-scale: $row-checkbox-density-scale,\n      $query: $query\n    );\n\n    .mdc-data-table__header-row-checkbox,\n    .mdc-data-table__row-checkbox {\n      @include checkbox-theme.density($row-checkbox-density-scale);\n    }\n  }\n\n  @if $pagination-select-density-scale {\n    @include select-density($pagination-select-density-scale);\n  }\n}\n\n@mixin select-density($density-scale) {\n  @include select-theme.outlined-height(\n    select-theme.$height + density.$interval * $density-scale\n  );\n  .mdc-list-item {\n    @include list-theme.one-line-item-density(\n      $density-scale + 2,\n      $exclude-variants: true\n    );\n  }\n\n  margin: 0;\n}\n\n///\n/// Sets maximum height of data table. Use this to make table vertically\n/// scrollable.\n/// @param {Number} $height\n///\n@mixin max-height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__table-container {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $height;\n    }\n  }\n}\n","@use 'sass:map';\n@use '@material/theme/theme-color' as mdc-theme-color;\n@use '@material/data-table/data-table' as mdc-data-table;\n@use '@material/data-table' as mdc-data-table-theme;\n@use '../core/theming/theming';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/typography/typography';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  // Save original values of MDC global variables. We need to save these so we can restore the\n  // variables to their original values and prevent unintended side effects from using this mixin.\n  $orig-selected-row-fill-color: mdc-data-table-theme.$selected-row-fill-color;\n  $orig-divider-color: mdc-data-table-theme.$divider-color;\n  $orig-row-hover-fill-color: mdc-data-table-theme.$row-hover-fill-color;\n  $orig-header-row-text-color: mdc-data-table-theme.$header-row-text-color;\n  $orig-row-text-color: mdc-data-table-theme.$row-text-color;\n  $orig-stroke-color: mdc-data-table-theme.$stroke-color;\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    mdc-data-table-theme.$selected-row-fill-color: rgba(mdc-theme-color.prop-value(primary), 0.04);\n    mdc-data-table-theme.$divider-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12);\n    mdc-data-table-theme.$row-hover-fill-color: rgba(mdc-theme-color.prop-value(on-surface), 0.04);\n    mdc-data-table-theme.$header-row-text-color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    mdc-data-table-theme.$row-text-color: rgba(mdc-theme-color.prop-value(on-surface), 0.87);\n    mdc-data-table-theme.$stroke-color: rgba(mdc-theme-color.prop-value(on-surface), 0.12);\n\n    @include mdc-data-table.table-styles($query: mdc-helpers.$mdc-theme-styles-query);\n  }\n\n  // Restore original values of MDC global variables.\n  mdc-data-table-theme.$selected-row-fill-color: $orig-selected-row-fill-color;\n  mdc-data-table-theme.$divider-color: $orig-divider-color;\n  mdc-data-table-theme.$row-hover-fill-color: $orig-row-hover-fill-color;\n  mdc-data-table-theme.$header-row-text-color: $orig-header-row-text-color;\n  mdc-data-table-theme.$row-text-color: $orig-row-text-color;\n  mdc-data-table-theme.$stroke-color: $orig-stroke-color;\n\n  .mat-mdc-table {\n    $background: map.get($config, background);\n    background: theming.get-color-from-palette($background, 'card');\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-data-table.table-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-table {\n    @include mdc-data-table-theme.density($density-scale,\n      $query: mdc-helpers.$mdc-base-styles-query);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '@material/circular-progress/circular-progress-theme' as mdc-circular-progress-theme;\n\n\n@mixin _palette-styles($config, $palette) {\n  $color: theming.get-color-from-palette(map.get($config, $palette));\n  @include mdc-circular-progress-theme.theme((active-indicator-color: $color));\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-progress-spinner {\n      @include _palette-styles($config, primary);\n\n      &.mat-accent {\n        @include _palette-styles($config, accent);\n      }\n\n      &.mat-warn {\n        @include _palette-styles($config, warn);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use '@angular/cdk';\n\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n\n$font-size: 12px;\n$font-weight: 600;\n$default-size: 22px !default;\n$small-size: $default-size - 6;\n$large-size: $default-size + 6;\n$_badge-structure-emitted: false !default;\n\n// Mixin for building offset given different sizes\n@mixin _badge-size($size) {\n  // This mixin isn't used in the context of a theme so we can disable the ampersand check.\n  // stylelint-disable material/no-ampersand-beyond-selector-start\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: math.div(-$size, 2);\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: math.div(-$size, 2);\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: math.div(-$size, 2);\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: math.div(-$size, 2);\n      }\n    }\n  }\n  // stylelint-enable\n}\n\n// Structural styles for the badge. They have to be included as a part of the theme,\n// because the badge is a directive and we have no other way of attaching styles to it.\n@mixin _badge-structure {\n  .mat-badge {\n    position: relative;\n  }\n\n  // The badge should make sure its host is overflow visible so that the badge content\n  // can be rendered outside of the element. Some components such as <mat-icon> explicitly\n  // style `overflow: hidden` so this requires extra specificity so that it does not\n  // depend on style load order.\n  .mat-badge.mat-badge {\n    overflow: visible;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _badge-size($small-size);\n  }\n\n  .mat-badge-medium {\n    @include _badge-size($default-size);\n  }\n\n  .mat-badge-large {\n    @include _badge-size($large-size);\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $primary: map.get($config, primary);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-badge-content {\n    color: theming.get-color-from-palette($primary, default-contrast);\n    background: theming.get-color-from-palette($primary);\n\n    @include cdk.high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: theming.get-color-from-palette($accent);\n      color: theming.get-color-from-palette($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: theming.get-color-from-palette($warn, default-contrast);\n      background: theming.get-color-from-palette($warn);\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: theming.get-color-from-palette($background, 'background');\n      $badge-color: theming.get-color-from-palette($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (meta.type-of($badge-color) == color and meta.type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: color.mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: theming.get-color-from-palette($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-badge-content {\n    font-weight: $font-weight;\n    font-size: $font-size;\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $font-size * 2;\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    // Try to reduce the number of times that the structural styles are emitted.\n    @if not $_badge-structure-emitted {\n      @include _badge-structure;\n\n      // Only flip the flag if the mixin is included at the top level. Otherwise the first\n      // inclusion might be inside of a theme class which will exclude the structural styles\n      // from all other themes.\n      @if not & {\n        $_badge-structure-emitted: true !global;\n      }\n    }\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","/// Emits a CSS class, `.cdk-visually-hidden`. This class can be applied to an element\n/// to make that element visually hidden while remaining available to assistive technology.\n@mixin a11y-visually-hidden() {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // This works around a Chrome bug that can cause the tab to crash when large amounts of\n    // non-English text get wrapped: https://bugs.chromium.org/p/chromium/issues/detail?id=1201444\n    white-space: nowrap;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n\n    // We need at least one of top/bottom/left/right in order to prevent cases where the\n    // absolute-positioned element is pushed down and can affect scrolling (see #24597).\n    // `left` was chosen here, because it's the least likely to break overrides where the\n    // element might have been positioned (e.g. `mat-checkbox`).\n    left: 0;\n\n    [dir='rtl'] & {\n      left: auto;\n      right: 0;\n    }\n  }\n}\n\n/// @deprecated Use `a11y-visually-hidden`.\n@mixin a11y() {\n  @include a11y-visually-hidden;\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param {String} selector-context The selector under which to nest the mixin's content.\n@mixin _optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param {String} target Type of high contrast setting to target. Defaults to `active`, can be\n///     `white-on-black` or `black-on-white`.\n/// @param {String} encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include private.private-theme-elevation(16, $config);\n    background: theming.get-color-from-palette($background, dialog);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-bottom-sheet-container {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use 'variables';\n@use '@material/elevation/elevation-theme' as mdc-elevation;\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// The default duration value for elevation transitions.\n$transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$transition-timing-function: variables.$fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$color: black !default;\n\n// Prefix for elevation-related selectors.\n$prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin elevation($zValue, $color: $color, $opacity: null) {\n  @if meta.type-of($color) == color and $opacity == null {\n    @include mdc-elevation.elevation($zValue, $color);\n  }\n  @else {\n    // Copied from @material/elevation/_elevation-theme.scss#_box-shadow\n    // TODO(mmalerba): Add support for graceful handling of CSS var color to MDC.\n    $shadow-color:\n      if(meta.type-of($color) == color and $opacity != null, rgba($color, $opacity), $color);\n    $umbra-z-value: map.get(mdc-elevation.$umbra-map, $zValue);\n    $penumbra-z-value: map.get(mdc-elevation.$penumbra-map, $zValue);\n    $ambient-z-value: map.get(mdc-elevation.$ambient-map, $zValue);\n    $box-shadow: (\n      #{'#{$umbra-z-value} #{$shadow-color}'},\n      #{'#{$penumbra-z-value} #{$shadow-color}'},\n      #{$ambient-z-value} $shadow-color\n    );\n    @include mdc-elevation.shadow($box-shadow);\n  }\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin overridable-elevation($zValue, $color: $color) {\n  &:not([class*='#{$prefix}']) {\n    @include elevation($zValue, $color);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function private-transition-property-value(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin elevation-transition(\n    $duration: $transition-duration,\n    $easing: $transition-timing-function) {\n  transition: private-transition-property-value($duration, $easing);\n}\n","@use 'sass:map';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './button-toggle-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $divider-color: theming.get-color-from-palette($foreground, divider);\n  $theme-divider-color: map.get($foreground, divider);\n\n  // By default the theme usually has an rgba color for the dividers, which can\n  // stack up with the background of a button toggle. This can cause the border\n  // of a selected toggle to look different from an deselected one. We use a solid\n  // color to ensure that the border always stays the same.\n  $divider-color: if(type-of($theme-divider-color) == color,\n    theming.private-rgba-to-hex($theme-divider-color, map.get($background, card)),\n    $theme-divider-color\n  );\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include private.private-theme-overridable-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    &:not([class*='mat-elevation-z']) {\n      box-shadow: none;\n    }\n  }\n\n  .mat-button-toggle {\n    color: theming.get-color-from-palette($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: theming.get-color-from-palette($foreground, text);\n    background: theming.get-color-from-palette($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: theming.get-color-from-palette($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: theming.get-color-from-palette($background, selected-button);\n    color: theming.get-color-from-palette($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n    background-color: theming.get-color-from-palette($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: theming.get-color-from-palette($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: theming.get-color-from-palette($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-button-toggle {\n    font-family: typography-utils.font-family($config);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $standard-height: compatibility.private-density-prop-value(\n      button-toggle-variables.$standard-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../button/icon-button-theme';\n\n$selected-today-box-shadow-width: 1px;\n$selected-fade-amount: 0.6;\n$range-fade-amount: 0.2;\n$today-fade-amount: 0.2;\n$calendar-body-font-size: 13px !default;\n$calendar-weekday-table-font-size: 11px !default;\n\n@mixin _color($palette) {\n  @include date-range-colors(\n    theming.get-color-from-palette($palette, default, $range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: theming.get-color-from-palette($palette);\n    color: theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: theming.get-color-from-palette($palette);\n\n    @if (meta.type-of($background) == color) {\n      background-color: color.adjust($background, $alpha: -$selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $selected-today-box-shadow-width\n                theming.get-color-from-palette($palette, default-contrast);\n  }\n\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    @include _highlighted-cell($palette);\n  }\n\n  @media (hover: hover) {\n    .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover {\n      @include _highlighted-cell($palette);\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n// Styles for a highlighted calendar cell (e.g. hovered or focused).\n@mixin _highlighted-cell($palette) {\n  & > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      background-color: theming.get-color-from-palette($palette, 0.3);\n    }\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $disabled-color: theming.get-color-from-palette($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    fill: theming.get-color-from-palette($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: theming.get-color-from-palette($foreground, icon);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-calendar-table-header,\n  .mat-calendar-body-label {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: theming.get-color-from-palette($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: theming.get-color-from-palette($foreground, divider);\n\n    @if meta.type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, math.min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: theming.get-color-from-palette($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _unselected-cell {\n      $color: theming.get-color-from-palette($foreground, hint-text);\n\n      @if (meta.type-of($color) == color) {\n        border-color: color.adjust($color, $alpha: -$today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _color(map.get($config, primary));\n\n  .mat-datepicker-content {\n    @include private.private-theme-elevation(4, $config);\n    background-color: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-accent {\n      @include _color(map.get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _color(map.get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include private.private-theme-elevation(24, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: theming.get-color-from-palette(map.get($config, primary), text);\n\n    &.mat-accent {\n      color: theming.get-color-from-palette(map.get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette(map.get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: theming.get-color-from-palette($foreground, disabled-text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-calendar {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: typography-utils.font-size($config, button);\n      weight: typography-utils.font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $calendar-weekday-table-font-size;\n      weight: typography-utils.font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: color.adjust($overlap-color, $lightness: -30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n\n  // Regardless of the user-passed density, we want the calendar previous/next buttons to remain at\n  // density -2\n  .mat-calendar-controls {\n    @include icon-button-theme.density(-2);\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n\n  .mat-divider {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/style/private';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './expansion-variables';\n@use './expansion-mixins';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-expansion-panel {\n    @include private.private-theme-overridable-elevation(2, $config);\n    background: theming.get-color-from-palette($background, card);\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  @include expansion-mixins.private-expansion-focus {\n    background: theming.get-color-from-palette($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: theming.get-color-from-palette($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: theming.get-color-from-palette($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: theming.get-color-from-palette($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-expansion-panel-header {\n    font: {\n      family: typography-utils.font-family($config, subheading-1);\n      size: typography-utils.font-size($config, subheading-1);\n      weight: typography-utils.font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include typography-utils.typography-level($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $expanded-height: compatibility.private-density-prop-value(\n        expansion-variables.$header-density-config, $density-scale, expanded-height);\n  $collapsed-height: compatibility.private-density-prop-value(\n      expansion-variables.$header-density-config, $density-scale, collapsed-height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-expansion') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@mixin private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: theming.get-color-from-palette($primary, text);\n    }\n\n    &.mat-accent {\n      color: theming.get-color-from-palette($accent, text);\n    }\n\n    &.mat-warn {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/style/private';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  $drawer-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-container-background-color:  theming.get-color-from-palette($background, background);\n  $drawer-push-background-color: theming.get-color-from-palette($background, dialog);\n  $drawer-side-border: solid 1px theming.get-color-from-palette($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include private.private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: theming.get-color-from-palette($background, card, $opacity);\n\n    @if (meta.type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: color.invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/density/private/compatibility';\n@use './stepper-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $foreground: map.get($config, foreground);\n  $background: map.get($config, background);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover:not([aria-disabled]),\n    &:hover[aria-disabled='false'] {\n      background-color: theming.get-color-from-palette($background, hover);\n    }\n\n    &:hover[aria-disabled='true'] {\n      cursor: default;\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: theming.get-color-from-palette($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: theming.get-color-from-palette($foreground, secondary-text);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: theming.get-color-from-palette($primary);\n      color: theming.get-color-from-palette($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($accent);\n        color: theming.get-color-from-palette($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: theming.get-color-from-palette($warn);\n        color: theming.get-color-from-palette($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: theming.get-color-from-palette($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: theming.get-color-from-palette($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: theming.get-color-from-palette($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: theming.get-color-from-palette($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: theming.get-color-from-palette($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: theming.get-color-from-palette($foreground, divider);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: typography-utils.font-size($config, body-1);\n      weight: typography-utils.font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: typography-utils.font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: typography-utils.font-size($config, body-2);\n      weight: typography-utils.font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(stepper-variables.$density-config,\n    $density-scale, height);\n  $vertical-padding: math.div($height - stepper-variables.$label-header-height, 2);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding stepper-variables.$side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: stepper-variables.$line-gap - $vertical-padding;\n      bottom: stepper-variables.$line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + math.div(stepper-variables.$label-header-height, 2);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:color';\n@use 'sass:map';\n@use 'sass:meta';\n@use '../core/theming/theming';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: theming.get-color-from-palette($background, 'card');\n    $text-color: theming.get-color-from-palette($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (meta.type-of($table-background) == color and meta.type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: color.mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/style/variables';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './toolbar-variables';\n\n@mixin _height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _palette-styles($palette) {\n  background: theming.get-color-from-palette($palette);\n  color: theming.get-color-from-palette($palette, default-contrast);\n}\n\n@mixin _form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: map.get($config, primary);\n  $accent: map.get($config, accent);\n  $warn: map.get($config, warn);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-toolbar {\n    background: theming.get-color-from-palette($background, app-bar);\n    color: theming.get-color-from-palette($foreground, text);\n\n    &.mat-primary {\n      @include _palette-styles($primary);\n    }\n\n    &.mat-accent {\n      @include _palette-styles($accent);\n    }\n\n    &.mat-warn {\n      @include _palette-styles($warn);\n    }\n\n    @include _form-field-overrides;\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include typography-utils.typography-level($config, title);\n    margin: 0;\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height-desktop: compatibility.private-density-prop-value(\n      toolbar-variables.$desktop-density-config, $density-scale, height);\n  $height-mobile: compatibility.private-density-prop-value(\n      toolbar-variables.$mobile-density-config, $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media (variables.$xsmall) {\n      @include _height($height-mobile);\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use 'sass:map';\n@use '../core/density/private/compatibility';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use './tree-variables';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $background: map.get($config, background);\n  $foreground: map.get($config, foreground);\n\n  .mat-tree {\n    background: theming.get-color-from-palette($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: theming.get-color-from-palette($foreground, text);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-tree {\n    font-family: typography-utils.font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: typography-utils.font-weight($config, body-1);\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  $height: compatibility.private-density-prop-value(tree-variables.$density-config,\n    $density-scale, height);\n\n  @include compatibility.private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n\n","@import \"../../var\";\n\n.vex-style-light {\n  $sidenav-background: white;\n\n  --navigation-background: var(--background-foreground);\n  --sidenav-background: #{$sidenav-background};\n\n  // Sidenav\n  --toolbar-background: var(--background-foreground);\n  --sidenav-color: var(--text-color);\n\n  // Sidenav Item\n  --sidenav-item-background-hover: #{darken($sidenav-background, 5)};\n  --sidenav-item-background-active: #{darken($sidenav-background, 3)};\n  --sidenav-item-color: var(--text-color);\n  --sidenav-item-color-hover: var(--text-color);\n  --sidenav-item-color-active: var(--text-color);\n  --sidenav-item-dropdown-background: #{darken($sidenav-background, 3)};\n  --sidenav-item-dropdown-background-hover: #{darken($sidenav-background, 8)};\n  --sidenav-item-dropdown-color-hover: var(--text-color);\n  --sidenav-item-dropdown-background-active: #{darken($sidenav-background, 10)};\n  --sidenav-item-dropdown-color-active: var(--text-color);\n  --sidenav-item-icon-color-active: rgb(var(--color-primary));\n  --sidenav-toolbar-background: #{$sidenav-background};\n  --sidenav-toolbar-background-rgb: #{red($sidenav-background)}, #{green($sidenav-background)}, #{blue($sidenav-background)};\n  --sidenav-section-divider-color: #{map-get($vex-theme-foreground, divider)};\n\n  .sidenav {\n    @apply border-r border-r-gray-200;\n\n    .vex-sidenav-user {\n      .vex-sidenav-user__subtitle,\n      .vex-sidenav-user__dropdown-icon {\n        @apply text-contrast-black/50;\n      }\n\n      &:hover {\n        @apply bg-gray-100 text-gray-900;\n      }\n    }\n\n    .vex-sidenav-search {\n      @apply bg-gray-100 text-gray-600;\n\n      &:hover {\n        @apply bg-gray-200 text-gray-900;\n      }\n    }\n  }\n\n  .vex-sidenav-user--open {\n    @apply bg-gray-100;\n  }\n}\n","@use '@angular/material' as mat;\n@import \"../../var\";\n\n// @formatter:off\n:root {\n  // Generic\n  --padding-gutter: 1rem;\n  --padding: 1.5rem;\n  --padding-16: 1rem;\n  --padding-12: 0.75rem;\n  --padding-8: 0.5rem;\n  --padding-6: 0.375rem;\n  --padding-4: 0.25rem;\n\n  --color-primary: 99, 102, 241;\n  --color-primary-rgb: rgb(99, 102, 241);\n  --color-primary-contrast: 255, 255, 255;\n  --color-primary-contrast-rgb: rgb(255, 255, 255);\n\n  --color-accent: 255, 64, 129;\n  --color-accent-rgb: rgb(255, 64, 129);\n  --color-accent-contrast: 255, 255, 255;\n  --color-accent-contrast-rgb: rgb(255, 255, 255);\n\n  --color-warn: 244, 67, 54;\n  --color-warn-rgb: rgb(244, 67, 54);\n  --color-warn-contrast: 255, 255, 255;\n  --color-warn-contrast-rgb: rgb(255, 255, 255);\n\n  @screen lg {\n    --padding-gutter: 1.5rem;\n  }\n\n  // Typography\n  --font: theme('fontFamily.sans');\n  --font-weight-medium: 500;\n\n  // Transitions\n  --trans-ease-in-out: all var(--trans-ease-in-out-duration) var(--trans-ease-in-out-timing-function);\n  --trans-ease-in-out-duration: #{$swift-ease-in-out-duration};\n  --trans-ease-in-out-timing-function: #{$swift-ease-in-out-timing-function};\n  --trans-ease-out: all var(--trans-ease-out-duration) var(--trans-ease-out-timing-function);\n  --trans-ease-out-duration: #{$swift-ease-out-duration};\n  --trans-ease-out-timing-function: #{$swift-ease-out-timing-function};\n  --trans-ease-in: all var(--trans-ease-in-duration) var(--trans-ease-in-timing-function);\n  --trans-ease-in-duration: #{$swift-ease-in-duration};\n  --trans-ease-in-timing-function: #{$swift-ease-in-timing-function};\n  --trans-shadow-duration: 280ms;\n  --trans-shadow-timing-function: #{cubic-bezier(0.4, 0, 0.2, 1)};\n  --trans-shadow: box-shadow var(--trans-shadow-duration) var(--trans-shadow-timing-function);\n\n  --text-color: #{$dark-primary-text};\n  --text-color-light: #{$light-primary-text};\n  --text-secondary: #{$dark-secondary-text};\n  --text-secondary-light: #{$light-secondary-text};\n  --text-hint: #{$dark-disabled-text};\n  --text-hint-light: #{$light-disabled-text};\n\n  // Foreground\n  --foreground-divider: #{map-get(map-get($vex-theme, foreground), divider)};\n\n  // Background\n  --background-base: rgb(245, 245, 248);\n  --background-foreground: #{map-get(map-get($vex-theme, background), card)};\n  --background-foreground-rgb: #{red(map-get(map-get($vex-theme, background), card))}, #{green(map-get(map-get($vex-theme, background), card))}, #{blue(map-get(map-get($vex-theme, background), card))};\n  --background-app-bar: #{map-get(map-get($vex-theme, background), app-bar)};\n  --background-hover: #{map-get(map-get($vex-theme, background), hover)};\n\n  // Elevation\n  --elevation-default: var(--elevation-z6);\n  --elevation-z0: none;\n  --elevation-z1: #{vex-elevation(1)};\n  --elevation-z2: #{vex-elevation(2)};\n  --elevation-z3: #{vex-elevation(3)};\n  --elevation-z4: #{vex-elevation(4)};\n  --elevation-z5: #{vex-elevation(5)};\n  --elevation-z6: #{vex-elevation(6)};\n  --elevation-z7: #{vex-elevation(7)};\n  --elevation-z8: #{vex-elevation(8)};\n  --elevation-z9: #{vex-elevation(9)};\n  --elevation-z10: #{vex-elevation(10)};\n  --elevation-z11: #{vex-elevation(11)};\n  --elevation-z12: #{vex-elevation(12)};\n  --elevation-z13: #{vex-elevation(13)};\n  --elevation-z14: #{vex-elevation(14)};\n  --elevation-z15: #{vex-elevation(15)};\n  --elevation-z16: #{vex-elevation(16)};\n  --elevation-z17: #{vex-elevation(17)};\n  --elevation-z18: #{vex-elevation(18)};\n  --elevation-z19: #{vex-elevation(19)};\n  --elevation-z20: #{vex-elevation(20)};\n\n  // Sidenav\n  --sidenav-width: 280px;\n  --sidenav-collapsed-width: 72px;\n  --sidenav-background: #{$sidenav-background};\n  --sidenav-color: white;\n\n  --sidenav-toolbar-background: #{darken($sidenav-background, 1.5)};\n  --sidenav-toolbar-background-rgb: #{red(darken($sidenav-background, 1.5))}, #{green(darken($sidenav-background, 1.5))}, #{blue(darken($sidenav-background, 1.5))};\n  --sidenav-section-divider-color: #{map-get(map-get($vex-dark-theme, foreground), divider)};\n\n  // Sidenav Item\n  --sidenav-item-min-height: 48px;\n  --sidenav-item-padding-vertical: var(--padding-8);\n  --sidenav-item-padding-horizontal: var(--padding);\n  --sidenav-item-background-hover: #{darken($sidenav-background, 3)};\n  --sidenav-item-background-active: #{darken($sidenav-background, 3)};\n  --sidenav-item-font-weight: 500;\n  --sidenav-item-color: #A1A2B6;\n  --sidenav-item-color-hover: #{$light-primary-text};\n  --sidenav-item-color-active: #{$light-primary-text};\n  --sidenav-item-icon-color: #494B74;\n  --sidenav-item-icon-color-hover: rgb(var(--color-primary));\n  --sidenav-item-icon-color-active: rgb(var(--color-primary));\n  --sidenav-item-icon-gap: 16px;\n  --sidenav-item-icon-size: 24px;\n  --sidenav-item-dropdown-background: #{darken($sidenav-background, 3)};\n  --sidenav-item-dropdown-background-hover: #{darken($sidenav-background, 4)};\n  --sidenav-item-dropdown-color-hover: var(--sidenav-item-color-hover);\n  --sidenav-item-dropdown-background-active: var(--sidenav-item-dropdown-background-hover);\n  --sidenav-item-dropdown-color-active: var(--sidenav-item-color-active);\n  --sidenav-item-ripple-color: #{rgb(map-get(map-get($vex-theme, foreground), base), 0.1)};\n\n  --sidenav-item-dropdown-gap: 12px;\n  --sidenav-subheading-color: #6b6e7f;\n\n  // Toolbar\n  --toolbar-height: 64px;\n  --toolbar-background: white;\n  --toolbar-color: #{$dark-primary-text};\n  --toolbar-icon-color: rgb(var(--color-primary));\n\n  // Secondary Toolbar\n  --secondary-toolbar-background: var(--background-foreground);\n  --secondary-toolbar-height: 54px;\n\n  // Navigation\n  --navigation-height: 64px;\n  --navigation-background: var(--background-foreground);\n  --navigation-color: var(--text-secondary);\n\n  // Footer\n  --footer-height: 56px;\n  --footer-z-index: 100;\n  --footer-background: var(--background-foreground);\n  --footer-color: var(--text-color);\n  --footer-elevation: 0 -10px 30px 0 rgba(82, 63, 104, .06);\n\n  // Page Layouts\n  --page-layout-header-height: 200px;\n  --page-layout-toolbar-height: 64px;\n\n  // Misc\n  --blink-scrollbar-width: 12px;\n  --default-icon-size: 24px;\n  --border-radius: 0.25rem;\n}\n// @formatter:on\n","@use '@angular/cdk';\n\n@mixin ripple() {\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n\n    // We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    transform: scale3d(0, 0, 0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk.high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n","// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$overlay-container-z-index: 1000 !default;\n$overlay-z-index: 1000 !default;\n$overlay-backdrop-z-index: 1000 !default;\n\n// Background color for all of the backdrops\n$overlay-backdrop-color: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n/// Emits structural styles required for cdk/overlay to function.\n@mixin overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $overlay-container-z-index;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $overlay-z-index;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $overlay-z-index;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $overlay-backdrop-z-index;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $overlay-backdrop-color;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Define a transition on the visibility so that the `transitionend` event can fire immediately.\n    transition: visibility 1ms linear, opacity 1ms linear;\n    visibility: hidden;\n    opacity: 1;\n\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .cdk-overlay-backdrop-noop-animation {\n    transition: none;\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $overlay-z-index;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n","// Structural styles for the autosize text fields.\n@mixin text-field-autosize() {\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin text-field-autofill() {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n}\n\n@mixin _autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$autofill-color-frame-count} both;\n  }\n\n  $autofill-color-frame-count: $autofill-color-frame-count + 1 !global;\n}\n\n// @deprecated Use `autosize` and `autofill` instead.\n@mixin text-field {\n  @include text-field-autosize();\n  @include text-field-autofill();\n}\n","@use 'sass:map';\n@use 'sass:meta';\n@use '@angular/cdk';\n@use '../style/layout-common';\n@use '../theming/theming';\n\n// Private sass variables that will be used as reference throughout component stylesheets.\n$default-border-width: 3px;\n$default-border-style: solid;\n$default-border-color: transparent;\n$default-border-radius: 4px;\n\n// Mixin that renders the focus indicator structural styles.\n@mixin structural-styling($prefix) {\n  .#{$prefix}-focus-indicator {\n    position: relative;\n\n    &::before {\n      @include layout-common.fill();\n      box-sizing: border-box;\n      pointer-events: none;\n      display: var(--#{$prefix}-focus-indicator-display, none); // Hide the indicator by default.\n      border: var(\n          --#{$prefix}-focus-indicator-border-width,\n          #{$default-border-width}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-style,\n          #{$default-border-style}\n        )\n        var(\n          --#{$prefix}-focus-indicator-border-color,\n          #{$default-border-color}\n        );\n      border-radius: var(\n        --#{$prefix}-focus-indicator-border-radius,\n        #{$default-border-radius}\n      );\n    }\n\n    // By default, render the focus indicator when the focus indicator host element takes focus.\n    // Defining a pseudo element's content will cause it to render.\n    &:focus::before {\n      content: '';\n    }\n  }\n\n  // Enable the indicator in high contrast mode.\n  @include cdk.high-contrast(active, off) {\n    @include customize-focus-indicators((display: block), $prefix);\n  }\n}\n\n// Generates CSS variable declarations from a map.\n@mixin _output-variables($map) {\n  @each $key, $value in $map {\n    @if ($value) {\n      --#{$key}: #{$value};\n    }\n  }\n}\n\n// Mixin that dedups CSS variables for the strong-focus-indicators mixin.\n@mixin customize-focus-indicators($config, $prefix) {\n  $border-style: map.get($config, border-style);\n  $border-width: map.get($config, border-width);\n  $border-radius: map.get($config, border-radius);\n  $border-color: map.get($config, border-color);\n  $display: map.get($config, display);\n  $map: (\n    '#{$prefix}-focus-indicator-border-style': $border-style,\n    '#{$prefix}-focus-indicator-border-width': $border-width,\n    '#{$prefix}-focus-indicator-border-radius': $border-radius,\n    '#{$prefix}-focus-indicator-border-color': $border-color,\n    '#{$prefix}-focus-indicator-display': $display,\n  );\n\n  @if (&) {\n    @include _output-variables($map);\n  }\n  @else {\n    // We use `html` here instead of `:root`, because the\n    // latter causes some issues with internal tooling.\n    html {\n      @include _output-variables($map);\n    }\n  }\n}\n\n@mixin strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat');\n}\n\n@mixin mdc-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n      border-color: black,\n      display: block,\n  );\n\n  // Merge default config with user config.\n  $config: map.merge($default-config, $config);\n\n  @include customize-focus-indicators($config, 'mat-mdc');\n}\n\n@mixin strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat');\n  }\n}\n\n@mixin strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n@mixin mdc-strong-focus-indicators-color($config-or-theme-or-color) {\n  @if meta.type-of($config-or-theme-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $config-or-theme-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $config: theming.get-color-config($config-or-theme-or-color);\n    $border-color: theming.get-color-from-palette(map.get($config, primary));\n    @include customize-focus-indicators((\n        border-color: $border-color\n    ), 'mat-mdc');\n  }\n}\n\n@mixin mdc-strong-focus-indicators-theme($theme-or-color-config-or-color) {\n  @if meta.type-of($theme-or-color-config-or-color) == 'color' {\n    @include customize-focus-indicators((\n        border-color: $theme-or-color-config-or-color\n    ), 'mat-mdc');\n  }\n  @else {\n    $theme: theming.private-legacy-get-theme($theme-or-color-config-or-color);\n    @include theming.private-check-duplicate-theme-styles($theme, 'mat-mdc-focus-indicators') {\n      $color: theming.get-color-config($theme);\n      @if $color != null {\n        @include mdc-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n","// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:string';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n\n/// @deprecated Avoid calling this function directly. Instead, configure the\n/// `$styles-<style>` variable Maps.\n@function set-styles_($base-styles, $scale-styles, $override-styles) {\n  $options: (\n    custom-property-prefix: typography,\n  );\n\n  $base-styles: keys.set-values($base-styles, $options: $options);\n\n  @each $style, $style-props in $scale-styles {\n    @each $base-key in map.keys($base-styles) {\n      // Ignore the return result, it's not needed\n      $unused: keys.add-link(keys.combine($style, $base-key), $base-key);\n    }\n\n    // Merge base properties for all styles.\n    $style-props: map.merge($base-styles, $style-props);\n\n    // Merge overrides onto each style.\n    $style-props: map.merge($style-props, map.get($override-styles, $style));\n\n    // Register keys for this style\n    @each $property, $value in $style-props {\n      $unused: keys.set-value(\n        keys.combine($style, $property),\n        $value,\n        $options: $options\n      );\n    }\n\n    // Override original styles with new styles.\n    $scale-styles: map.merge($scale-styles, (#{$style}: $style-props));\n  }\n\n  @return $scale-styles;\n}\n\n@function get-letter-spacing_($tracking, $font-size) {\n  @return math.div($tracking, $font-size * 16) * 1em;\n}\n\n@function px-to-rem($px) {\n  @if custom-properties.is-custom-prop($px) {\n    @return custom-properties.set-fallback(\n      $px,\n      _px-to-rem(custom-properties.get-fallback($px))\n    );\n  }\n  @return _px-to-rem($px);\n}\n\n@function _px-to-rem($px) {\n  @if $px == null {\n    @return null;\n  }\n  @return math.div($px, 16px) * 1rem;\n}\n\n$font-family: string.unquote('Roboto, sans-serif') !default;\n\n// Override styles\n$styles-headline1: () !default;\n$styles-headline2: () !default;\n$styles-headline3: () !default;\n$styles-headline4: () !default;\n$styles-headline5: () !default;\n$styles-headline6: () !default;\n$styles-subtitle1: () !default;\n$styles-subtitle2: () !default;\n$styles-body1: () !default;\n$styles-body2: () !default;\n$styles-caption: () !default;\n$styles-button: () !default;\n$styles-overline: () !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead, or $font-family to set the base font family.\n$base: (\n  font-family: $font-family,\n) !default;\n\n$font-weight-values: (\n  thin: 100,\n  light: 300,\n  regular: 400,\n  medium: 500,\n  bold: 700,\n  black: 900,\n) !default;\n\n/// @deprecated Do not override this variable. Use the $styles-<style> override\n/// Map variables instead.\n$styles: set-styles_(\n  $base,\n  (\n    headline1: (\n      font-size: px-to-rem(96px),\n      line-height: px-to-rem(96px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-1.5, 6),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline2: (\n      font-size: px-to-rem(60px),\n      line-height: px-to-rem(60px),\n      font-weight: map.get($font-weight-values, light),\n      letter-spacing: get-letter-spacing_(-0.5, 3.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline3: (\n      font-size: px-to-rem(48px),\n      line-height: px-to-rem(50px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline4: (\n      font-size: px-to-rem(34px),\n      line-height: px-to-rem(40px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 2.125),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline5: (\n      font-size: px-to-rem(24px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: normal,\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    headline6: (\n      font-size: px-to-rem(20px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.25, 1.25),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(28px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.15, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    subtitle2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(22px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(0.1, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body1: (\n      font-size: px-to-rem(16px),\n      line-height: px-to-rem(24px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.5, 1),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    body2: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.25, 0.875),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    caption: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(20px),\n      font-weight: map.get($font-weight-values, regular),\n      letter-spacing: get-letter-spacing_(0.4, 0.75),\n      text-decoration: inherit,\n      text-transform: inherit,\n    ),\n    button: (\n      font-size: px-to-rem(14px),\n      line-height: px-to-rem(36px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(1.25, 0.875),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n    overline: (\n      font-size: px-to-rem(12px),\n      line-height: px-to-rem(32px),\n      font-weight: map.get($font-weight-values, medium),\n      letter-spacing: get-letter-spacing_(2, 0.75),\n      text-decoration: none,\n      text-transform: uppercase,\n    ),\n  ),\n  (\n    headline1: $styles-headline1,\n    headline2: $styles-headline2,\n    headline3: $styles-headline3,\n    headline4: $styles-headline4,\n    headline5: $styles-headline5,\n    headline6: $styles-headline6,\n    subtitle1: $styles-subtitle1,\n    subtitle2: $styles-subtitle2,\n    body1: $styles-body1,\n    body2: $styles-body2,\n    caption: $styles-caption,\n    button: $styles-button,\n    overline: $styles-overline,\n  )\n) !default;\n\n// A copy of the styles Map that is used to detect compile-time changes for\n// Angular support.\n$_styles-copy: $styles;\n\n@function is-typography-style($style) {\n  @return map.has-key($styles, $style);\n}\n\n@function get-typography-styles() {\n  @return map.keys($styles);\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-typography {\n    @include base($query: $query);\n  }\n\n  @each $style in get-typography-styles() {\n    .mdc-typography--#{$style} {\n      @include typography($style, $query: $query);\n    }\n  }\n}\n\n@mixin base($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, font-family);\n  }\n}\n\n@mixin typography($style, $query: feature-targeting.all(), $exclude-props: ()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @if not is-typography-style($style) {\n    @error \"Invalid style specified! #{$style} doesn't exist. Choose one of #{get-typography-styles()}\";\n  }\n\n  @include smooth-font($query: $query);\n  @include feature-targeting.targets($feat-typography) {\n    @each $key in keys.get-keys($style) {\n      // <style>-<property>: headline1-font-size\n      // Slice the string past the first key separator to retrieve the\n      // property name\n      $property: string.slice($key, string.index($key, '-') + 1);\n      @if list.index($exclude-props, $property) == null {\n        $current-global-value: map.get($styles, $style, $property);\n        $configured-global-value: map.get($_styles-copy, $style, $property);\n        @if $current-global-value != $configured-global-value {\n          // A compile time change was made to $mdc-typography-styles. To\n          // support Angular, use this value instead of the key's value.\n          @if $current-global-value {\n            // Only emit if the overridden value exists\n            $custom-prop: keys.create-custom-property($key);\n            $custom-prop: custom-properties.set-fallback(\n              $custom-prop,\n              $current-global-value\n            );\n            @include theme.property($property, $custom-prop);\n          }\n        } @else {\n          // Otherwise, use the key, which may be different from the original\n          // configured global value.\n          @include theme.property($property, $key);\n        }\n      }\n    }\n  }\n}\n\n/// Applies antialiasing via font-smoothing to text.\n@mixin smooth-font($query: feature-targeting.all()) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  @include feature-targeting.targets($feat-typography) {\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n  }\n}\n\n// Element must be `display: block` or `display: inline-block` for this to work.\n@mixin overflow-ellipsis($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow: hidden;\n  }\n}\n\n/// Sets a container's baseline that text content will align to.\n///\n/// If the `$display` is set to a flexbox display, only `$top` baseline may be\n/// set. A separate element must be added as a child of the container with a\n/// `$bottom` baseline.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {String} $display - the display type of the container. May be `flex`,\n///     `inline-flex`, `block`, or `inline-block`.\n@mixin baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (flex, inline-flex, block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $isFlexbox: $display == 'flex' or $display == 'inline-flex';\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: $display;\n\n    @if $isFlexbox {\n      align-items: baseline;\n    }\n  }\n\n  @if $top > 0 {\n    @include baseline-top($top, $query: $query);\n  }\n\n  @if $bottom > 0 {\n    @if $isFlexbox {\n      @error \"mdc-typography: invalid baseline with display type. #{$display} cannot specifiy $bottom. Add a separate child element with its own $bottom.\";\n    }\n\n    @include baseline-bottom($bottom, $query: $query);\n  }\n}\n\n/// Sets the baseline of flow text content.\n///\n/// Separate `$top` and `$bottom` baselines may be specified. You should ensure\n/// that the `$top` baseline matches the previous text content's $bottom\n/// baseline to ensure text is positioned appropriately.\n///\n/// See go/css-baseline for reference on how this mixin works.\n///\n/// This is intended for text flow content only (e.g. `<h1>`, `<p>`, `<span>`,\n/// or `<div>` with only text content). Use `baseline()` to set the baseline of\n/// containers that are flexbox or have non-flow content children.\n///\n/// @param {Number} $top - the distance from the top of the container to the\n///     text's baseline.\n/// @param {Number} $bottom - the distance from the text's baseline to the\n///     bottom of the container.\n/// @param {Boolean} $lineHeight - the line-height to use for the text. This\n///     is the distance between baselines of multiple lines of text.\n/// @param {String} $display - the display type of the container. May be `block`\n///     or `inline-block`.\n@mixin text-baseline(\n  $top: 0,\n  $bottom: 0,\n  $display: block,\n  $lineHeight: normal,\n  $query: feature-targeting.all()\n) {\n  $validDisplayTypes: (block, inline-block);\n\n  @if list.index($validDisplayTypes, $display) == null {\n    @error \"mdc-typography: invalid display specified! #{$display} must be one of #{$validDisplayTypes}\";\n  }\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include baseline(\n    $display: $display,\n    $top: $top,\n    $bottom: $bottom,\n    $query: $query\n  );\n  @include feature-targeting.targets($feat-structure) {\n    @if $top > 0 {\n      margin-top: 0;\n      /* @alternate */\n      line-height: #{$lineHeight};\n    }\n\n    @if $bottom > 0 {\n      margin-bottom: -1 * $bottom;\n    }\n  }\n}\n\n/// Creates a baseline strut from the top of a container. This mixin is for\n/// advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the top of the container to\n///     the text's baseline.\n@mixin baseline-top($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: 0;\n    }\n  }\n}\n\n/// Creates a baseline strut from the baseline to the bottom of a container.\n/// This mixin is for advanced users, prefer `baseline()`.\n///\n/// @param {Number} $distance - The distance from the text's baseline to the\n///     bottom of the container.\n@mixin baseline-bottom($distance, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::after {\n    @include feature-targeting.targets($feat-structure) {\n      @include baseline-strut_($distance);\n\n      vertical-align: -1 * $distance;\n    }\n  }\n}\n\n/// Adds an invisible, zero-width prefix to a container's text.\n/// This ensures that the baseline is always where the text would be, instead\n/// of defaulting to the container bottom when text is empty. Do not use this\n/// mixin if the `baseline` mixin is already applied.\n@mixin zero-width-prefix($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &::before {\n    @include feature-targeting.targets($feat-structure) {\n      content: '\\200b';\n    }\n  }\n}\n\n@mixin baseline-strut_($distance) {\n  display: inline-block;\n  width: 0;\n  height: $distance;\n  content: '';\n}\n\n@function get-font($typography) {\n  @return map.get($styles, $typography, font-family);\n}\n\n@function get-line-height($typography) {\n  @return map.get($styles, $typography, line-height);\n}\n\n@function get-size($typography) {\n  @return map.get($styles, $typography, font-size);\n}\n\n@function get-weight($typography) {\n  @return map.get($styles, $typography, font-weight);\n}\n\n@function get-tracking($typography) {\n  @return map.get($styles, $typography, letter-spacing);\n}\n\n$_typography-theme: (\n  font: null,\n  line-height: null,\n  size: null,\n  weight: null,\n  tracking: null,\n);\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($_typography-theme, $theme);\n\n  @include theme.property(font-family, map.get($theme, font));\n  @include theme.property(line-height, map.get($theme, line-height));\n  @include theme.property(font-size, map.get($theme, size));\n  @include theme.property(font-weight, map.get($theme, weight));\n  @include theme.property(letter-spacing, map.get($theme, tracking));\n}\n\n/// Resolves a theme's typography tokens for the given prefix.\n///\n/// @example - scss\n///   // $theme has the following tokens:\n///   // - label-text-font\n///   // - label-text-line-height\n///   // - label-text-size\n///   // - label-text-tracking\n///   // - label-text-weight\n///   $theme: resolve-theme($theme, map.get($resolvers, typography), label-text);\n///\n/// @param {Map} $theme - The theme to resolve tokens for.\n/// @param {Function} $resolver - The typography resolver to use.\n/// @param {String...} $token-prefixes - The prefix(es) of a typography token\n///     set.\n/// @return {Map} The theme with resolved typography tokens.\n@function resolve-theme($theme, $resolver, $token-prefixes...) {\n  @if $resolver == null {\n    @return $theme;\n  }\n\n  @each $token-prefix in $token-prefixes {\n    $typography-theme: meta.call(\n      $resolver,\n      $font: map.get($theme, '#{$token-prefix}-font'),\n      $line-height: map.get($theme, '#{$token-prefix}-line-height'),\n      $size: map.get($theme, '#{$token-prefix}-size'),\n      $tracking: map.get($theme, '#{$token-prefix}-tracking'),\n      $weight: map.get($theme, '#{$token-prefix}-weight')\n    );\n\n    $theme: map.merge(\n      $theme,\n      (\n        '#{$token-prefix}-font': map.get($typography-theme, font),\n        '#{$token-prefix}-line-height': map.get($typography-theme, line-height),\n        '#{$token-prefix}-size': map.get($typography-theme, size),\n        '#{$token-prefix}-tracking': map.get($typography-theme, tracking),\n        '#{$token-prefix}-weight': map.get($typography-theme, weight),\n      )\n    );\n  }\n\n  @return $theme;\n}\n","@use 'sass:map';\n@use 'sass:math';\n@use '@material/density' as mdc-density;\n@use '@material/textfield' as mdc-textfield;\n@use '../core/theming/theming';\n\n@use './form-field-sizing';\n\n// Mixin that sets the vertical spacing for the infix container of filled form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-filled($with-label-padding, $no-label-padding) {\n  .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-form-field-infix {\n    padding-top: map.get($with-label-padding, top);\n    padding-bottom: map.get($with-label-padding, bottom);\n  }\n\n  .mdc-text-field--no-label:not(.mdc-text-field--outlined):not(.mdc-text-field--textarea)\n  .mat-mdc-form-field-infix {\n    padding-top: map.get($no-label-padding, top);\n    padding-bottom: map.get($no-label-padding, bottom);\n  }\n}\n\n// Mixin that sets the vertical spacing for the infix container of outlined form fields.\n// We need to apply spacing to the infix container because we removed the input padding\n// provided by MDC in order to support arbitrary form-field controls.\n@mixin _infix-vertical-spacing-outlined($padding) {\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mat-mdc-form-field-infix {\n    padding-top: map.get($padding, top);\n    padding-bottom: map.get($padding, bottom);\n  }\n}\n\n// Mixin that includes the density styles for form fields. MDC provides their own density\n// styles for MDC text-field which we cannot use. MDC relies on input elements to stretch\n// vertically when the height is reduced as per density scale. This doesn't work for our\n// form field since we support custom form field controls without a fixed height. Instead, we\n// provide spacing that makes arbitrary controls align as specified in the Material Design\n// specification. In order to support density, we need to adjust the vertical spacing to be\n// based on the density scale.\n@mixin private-form-field-density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  // Height of the form field that is based on the current density scale.\n  $height: mdc-density.prop-value(\n    $density-config: mdc-textfield.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  // Whether floating labels for filled form fields should be hidden. MDC hides the label in\n  // their density styles when the height decreases too much. We match their density styles.\n  $hide-filled-floating-label: $height < mdc-textfield.$minimum-height-for-filled-label;\n  // We computed the desired height of the form-field using the density configuration. The\n  // spec only describes vertical spacing/alignment in non-dense mode. This means that we\n  // cannot update the spacing to explicit numbers based on the density scale. Instead, we\n  // determine the height reduction and equally subtract it from the default `top` and `bottom`\n  // padding that is provided by the Material Design specification.\n  $vertical-deduction: math.div(mdc-textfield.$height - $height, 2);\n  // Map that describes the padding for form-fields with label.\n  $with-label-padding: (\n    top: form-field-sizing.$mat-form-field-with-label-input-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-with-label-input-padding-bottom - $vertical-deduction,\n  );\n  // Map that describes the padding for form-fields without label.\n  $no-label-padding: (\n    top: form-field-sizing.$mat-form-field-no-label-padding-top - $vertical-deduction,\n    bottom: form-field-sizing.$mat-form-field-no-label-padding-bottom - $vertical-deduction,\n  );\n\n  // We add a minimum height to the infix container in order to ensure that custom controls have\n  // the same default vertical space as text-field inputs (with respect to the vertical padding).\n  .mat-mdc-form-field-infix {\n    min-height: $height;\n  }\n\n  // By default, MDC aligns the label using percentage. This will be overwritten based\n  // on whether a textarea is used. This is not possible in our implementation of the\n  // form-field because we do not know what type of form-field control is set up. Hence\n  // we always use a fixed position for the label. This does not have any implications.\n  .mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label {\n    top: math.div($height, 2);\n  }\n\n  // For the outline appearance, we re-create the active floating label transform. This is\n  // necessary because the transform for docked floating labels can be updated to account for\n  // the width of prefix container.\n  .mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded\n  .mdc-floating-label--float-above {\n    --mat-mdc-form-field-label-transform: translateY(\n            -#{mdc-textfield.get-outlined-label-position-y($height)})\n            scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));\n    transform: var(--mat-mdc-form-field-label-transform);\n  }\n\n  // Add vertical spacing to the infix to ensure that outlined form fields have their controls\n  // aligned as if there is no label. This is done similarly in MDC and is specified in the\n  // Material Design specification. Outline form fields position the control as if there is no\n  // label. This is because the label overflows the form-field and doesn't need space at the top.\n  @include _infix-vertical-spacing-outlined($no-label-padding);\n\n  // MDC hides labels for filled form fields when the form field height decreases. We match\n  // this behavior in our custom density styles.\n  @if $hide-filled-floating-label {\n    // Update the spacing for filled form fields to account for the hidden floating label.\n    @include _infix-vertical-spacing-filled(\n          $no-label-padding, $no-label-padding);\n    .mat-mdc-text-field-wrapper:not(.mdc-text-field--outlined) .mat-mdc-floating-label {\n        display: none;\n    }\n  }\n  @else {\n    // By default, filled form fields align their controls differently based on whether there\n    // is a label or not. MDC does this too, but we cannot rely on their styles as we support\n    // arbitrary form field controls and MDC only applies their spacing to the `<input>` elements.\n    @include _infix-vertical-spacing-filled(\n          $with-label-padding, $no-label-padding);\n  }\n}\n","//\n// Copyright 2017 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:math';\n@use 'sass:color';\n@use '@material/density/variables' as density-variables;\n@use '@material/floating-label/variables' as floating-label-variables;\n@use '@material/notched-outline/variables' as notched-outline-variables;\n@use '@material/theme/custom-properties';\n@use '@material/theme/theme-color';\n\n///\n/// Returns outlined text field floating label position for given height.\n///\n/// @todo Instead of adjusting `$positionY` with label box height that might change based on floating label font size\n///     wrap label in a child element to apply `transitionY(-50%)` to automatically offset based on box height.\n///\n@function get-outlined-label-position-y($text-field-height) {\n  $offset: math.div(notched-outline-variables.$label-box-height, 2);\n\n  // If $text-field-height is not a primitive value, but a custom property or a custom property map,\n  // we cannot compute the label Y position at compilation time.\n  // We will have to defer it to the browser, using calc().\n  @if custom-properties.is-custom-prop($text-field-height) {\n    $text-field-height: custom-properties.get-declaration-value(\n      $text-field-height\n    );\n    @return calc($offset + $text-field-height / 2); // Evaluated in the browser.\n  }\n\n  @if custom-properties.is-custom-prop-string($text-field-height) {\n    @return calc($offset + $text-field-height / 2); // Evaluated in the browser.\n  }\n\n  @return $offset + math.div($text-field-height, 2); // Evaluated statically.\n}\n\n$error: error !default;\n$disabled-border: rgba(theme-color.prop-value(on-surface), 0.06) !default;\n$disabled-icon: rgba(theme-color.prop-value(on-surface), 0.3) !default;\n$bottom-line-hover: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$bottom-line-idle: rgba(theme-color.prop-value(on-surface), 0.42) !default;\n$label: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$ink-color: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n$helper-text-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n$icon-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$focused-label-color: rgba(theme-color.prop-value(primary), 0.87) !default;\n$placeholder-ink-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$affix-color: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$disabled-label-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-placeholder-ink-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-helper-text-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.38\n) !default;\n$disabled-affix-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  4%\n) !default;\n$disabled-background: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  2%\n) !default;\n$secondary-text: rgba(theme-color.prop-value(on-surface), 0.6) !default;\n\n$outlined-idle-border: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$outlined-disabled-border: rgba(\n  theme-color.prop-value(on-surface),\n  0.06\n) !default;\n$outlined-hover-border: rgba(theme-color.prop-value(on-surface), 0.87) !default;\n\n$textarea-border: rgba(theme-color.prop-value(on-surface), 0.73) !default;\n$textarea-background: rgba(theme-color.prop-value(surface), 1) !default;\n$textarea-disabled-border-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.26\n) !default;\n// cannot be transparent because multiline textarea input\n// will make text unreadable\n$textarea-disabled-background: rgba(249, 249, 249, 1) !default;\n\n$ripple-target: '.mdc-text-field__ripple';\n$outlined-stroke-width: 2px !default;\n$height: 56px !default;\n$minimum-height: 36px !default;\n$minimum-height-for-filled-label: 52px !default;\n$maximum-height: $height !default;\n$padding-horizontal: 16px !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n$shape-radius: small !default;\n$label-position-y: floating-label-variables.$position-y !default;\n$label-offset: 16px !default;\n// TODO(b/154350788): Remove this variable, it's not used internally but it is\n// externally in Angular\n/// @deprecated this variable will be removed in the future.\n/// Use get-outlined-label-position-y($height) instead\n$outlined-label-position-y: get-outlined-label-position-y($height) !default;\n$outlined-with-leading-icon-label-position-x: 32px !default;\n$textarea-outlined-label-position-y: 24.75px !default; // visually ~4dp from top to baseline\n$textarea-filled-label-position-y: 10.25px !default; // visually ~20dp from top to label baseline\n$helper-line-padding: 16px !default;\n$filled-baseline-top: 40px !default;\n$input-height: 28px !default;\n$textarea-label-top: 19px !default; // visually ~32dp from top to label baseline\n$textarea-outlined-label-top: $textarea-label-top -\n  notched-outline-variables.$border-width !default;\n$textarea-line-height: 1.5rem !default; // 24dp from baseline to baseline\n$textarea-input-handle-margin: 1px !default;\n// Outlined textarea's first line should be placed at the same position as\n// outlined textfield, and should look identical if it is 1 row. Since textfield\n// is centered and font metrics vary for where the baseline is, the best way to\n// ensure textarea and textfield align is with padding. At 56px height with a\n// 24px line-height, a centered textfield has 16px of top and bottom padding.\n// Textarea should use this to position itself.\n$textarea-outlined-input-margin-top: 16px !default;\n$textarea-outlined-input-margin-bottom: 16px !default;\n$textarea-outlined-density-config: (\n  margin-top: (\n    default: $textarea-outlined-input-margin-top,\n    maximum: $textarea-outlined-input-margin-top,\n    minimum: $textarea-outlined-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-outlined-input-margin-bottom,\n    maximum: $textarea-outlined-input-margin-bottom,\n    minimum: $textarea-outlined-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-outlined-label-density-config: (\n  top: (\n    default: $textarea-outlined-label-top,\n    maximum: $textarea-outlined-label-top,\n    minimum: $textarea-outlined-label-top - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-filled-input-margin-top: 23px !default; // visually ~40dp from top to baseline\n$textarea-filled-input-margin-bottom: 9px !default; // visually ~16dp from baseline to bottom\n$textarea-filled-density-config: (\n  margin-bottom: (\n    default: $textarea-filled-input-margin-bottom,\n    maximum: $textarea-filled-input-margin-bottom,\n    minimum: $textarea-filled-input-margin-bottom - 4,\n  ),\n) !default; // scale to -1 for minimum\n$textarea-filled-label-density-config: (\n  top: (\n    default: $textarea-label-top,\n    maximum: $textarea-label-top,\n    minimum: $textarea-label-top - 2,\n  ),\n) !default; // remove 1/2 of scale to -1 for minimm\n$textarea-filled-no-label-input-margin-top: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-input-margin-bottom: 16px !default; // see above explanation for outlined textarea margin\n$textarea-filled-no-label-density-config: (\n  margin-top: (\n    default: $textarea-filled-no-label-input-margin-top,\n    maximum: $textarea-filled-no-label-input-margin-top,\n    minimum: $textarea-filled-no-label-input-margin-top - 8,\n  ),\n  margin-bottom: (\n    default: $textarea-filled-no-label-input-margin-bottom,\n    maximum: $textarea-filled-no-label-input-margin-bottom,\n    minimum: $textarea-filled-no-label-input-margin-bottom - 8,\n  ),\n) !default; // remove 1/2 of scale to -4 for minimum\n$textarea-internal-counter-input-margin-bottom: 2px !default; // visually ~20dp from baseline to counter baseline\n$textarea-internal-counter-baseline-bottom: 16px !default;\n// Note that the scale factor is an eyeballed approximation of what's shown in the mocks.\n\n$prefix-padding: 2px !default;\n$prefix-end-aligned-padding: 12px !default;\n$suffix-padding: 12px !default;\n$suffix-end-aligned-padding: 2px !default;\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:meta';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/animation/variables' as animation-variables;\n@use '@material/typography/typography';\n@use './variables';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  // postcss-bem-linter: define floating-label\n  .mdc-floating-label {\n    @include typography.typography(\n      subtitle1,\n      $exclude-props: (line-height),\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n      @include rtl.ignore-next-line();\n      left: 0;\n      @include rtl.ignore-next-line();\n      -webkit-transform-origin: left top;\n      @include rtl.ignore-next-line();\n      transform-origin: left top;\n      line-height: 1.15rem;\n      text-align: left;\n      text-overflow: ellipsis;\n      white-space: nowrap;\n      cursor: text;\n      overflow: hidden;\n\n      /* @alternate */\n      // Force the label into its own layer to prevent visible layer promotion adjustments\n      // when the ripple is activated behind it.\n      will-change: transform;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        right: 0;\n        @include rtl.ignore-next-line();\n        left: auto;\n        @include rtl.ignore-next-line();\n        -webkit-transform-origin: right top;\n        @include rtl.ignore-next-line();\n        transform-origin: right top;\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: transform variables.$transition-duration\n          animation-variables.$standard-curve-timing-function,\n        color variables.$transition-duration\n          animation-variables.$standard-curve-timing-function;\n    }\n  }\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: auto;\n    }\n  }\n\n  .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker) {\n    &::after {\n      @include _required-content($query);\n    }\n\n    @include rtl.rtl {\n      &::after {\n        @include _required-content-rtl($query);\n      }\n    }\n  }\n\n  @at-root {\n    @include float-position(variables.$position-y, $query: $query);\n    @include shake-animation(standard, $query: $query);\n  }\n\n  @include shake-keyframes(standard, variables.$position-y, $query: $query);\n}\n\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n// Used for textarea in case of scrolling\n@mixin fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(background-color, $color);\n  }\n}\n\n@mixin shake-keyframes(\n  $modifier,\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    @keyframes mdc-floating-label-shake-float-above-#{$modifier} {\n      0% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      33% {\n        animation-timing-function: cubic-bezier(0.5, 0, 0.701732, 0.495819);\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      66% {\n        animation-timing-function: cubic-bezier(\n          0.302435,\n          0.381352,\n          0.55,\n          0.956352\n        );\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(-4% - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n\n      100% {\n        @include rtl.ignore-next-line();\n        transform: translateX(calc(0 - #{$positionX}))\n          translateY(-#{$positionY}) scale(#{$scale});\n      }\n    }\n  }\n}\n\n@mixin float-position(\n  $positionY,\n  $positionX: 0%,\n  $scale: variables.$float-scale,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $translateY: if(\n    meta.type-of($positionY) == 'calculation',\n    calc(-1 * $positionY),\n    -1 * $positionY\n  );\n\n  .mdc-floating-label--float-above {\n    @include feature-targeting.targets($feat-structure) {\n      @if $positionX > 0 or $positionX < 0 {\n        @include rtl.ignore-next-line();\n        transform: translateY($translateY)\n          translateX(-1 * $positionX)\n          scale($scale);\n\n        @include rtl.rtl {\n          @include rtl.ignore-next-line();\n          transform: translateY($translateY) translateX($positionX)\n            scale($scale);\n        }\n      } @else {\n        transform: translateY($translateY) scale($scale);\n      }\n    }\n  }\n}\n\n@mixin shake-animation($modifier, $query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-floating-label--shake {\n    @include feature-targeting.targets($feat-animation) {\n      animation: mdc-floating-label-shake-float-above-#{$modifier} 250ms 1;\n    }\n  }\n}\n\n@mixin max-width($max-width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    max-width: $max-width;\n  }\n}\n\n///\n/// Sets the CSS transition for the floating animation.\n///\n/// @param {Number} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin float-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: color $duration-ms $timing-function,\n      transform $duration-ms $timing-function;\n  }\n}\n\n@mixin _required-content($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 1px;\n    @include rtl.ignore-next-line();\n    margin-right: 0px;\n    content: '*';\n  }\n}\n\n// Need to specify LTR/RTL manually since rtl mixins will add ::after[dir=rtl]\n// selector and that breaks some browsers\n@mixin _required-content-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include rtl.ignore-next-line();\n    margin-left: 0;\n    @include rtl.ignore-next-line();\n    margin-right: 1px;\n  }\n}\n","@use '@material/menu-surface/mixins' as mdc-menu-surface;\n@use '@material/list/evolution-mixins' as mdc-list;\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/mdc-helpers/mdc-helpers';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  @include mdc-helpers.using-mdc-theme($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-theme-styles-query);\n    @include mdc-list.without-ripple(mdc-helpers.$mdc-theme-styles-query);\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-menu-surface.core-styles(mdc-helpers.$mdc-typography-styles-query);\n\n    .mat-mdc-autocomplete-panel {\n      // Note that we include this private mixin, because the public one adds\n      // a bunch of styles that we aren't using for the autocomplete panel.\n      @include mdc-list.list-base(mdc-helpers.$mdc-typography-styles-query);\n    }\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","@use '@material/radio/radio' as mdc-radio;\n@use '@material/radio/radio-theme' as mdc-radio-theme;\n@use '@material/form-field' as mdc-form-field;\n@use '../core/mdc-helpers/mdc-helpers';\n@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use './radio-private';\n@use 'sass:map';\n\n@mixin color($config-or-theme) {\n  $config: theming.get-color-config($config-or-theme);\n  $primary: theming.get-color-from-palette(map.get($config, primary));\n  $accent: theming.get-color-from-palette(map.get($config, accent));\n  $warn: theming.get-color-from-palette(map.get($config, warn));\n\n  @include mdc-helpers.using-mdc-theme($config) {\n    .mat-mdc-radio-button {\n      @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-theme-styles-query);\n\n      &.mat-primary {\n        @include radio-private.private-radio-color($config, $primary);\n      }\n\n      &.mat-accent {\n        @include radio-private.private-radio-color($config, $accent);\n      }\n\n      &.mat-warn {\n        @include radio-private.private-radio-color($config, $warn);\n      }\n    }\n  }\n}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2018-config(\n      theming.get-typography-config($config-or-theme));\n  @include mdc-helpers.using-mdc-typography($config) {\n    @include mdc-radio.without-ripple($query: mdc-helpers.$mdc-typography-styles-query);\n    @include mdc-form-field.core-styles($query: mdc-helpers.$mdc-typography-styles-query);\n  }\n}\n\n@mixin density($config-or-theme) {\n  $density-scale: theming.get-density-config($config-or-theme);\n  .mat-mdc-radio-button .mdc-radio {\n    @include mdc-radio-theme.density($density-scale, $query: mdc-helpers.$mdc-base-styles-query);\n  }\n\n  @include mdc-helpers.if-touch-targets-unsupported($density-scale) {\n    .mat-mdc-radio-touch-target {\n      display: none;\n    }\n  }\n}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/density/variables' as density-variables;\n@use '@material/theme/theme-color';\n@use '@material/ripple/ripple-theme';\n\n$ripple-size: 40px !default;\n$icon-size: 20px !default;\n$transition-duration: 120ms !default;\n$ripple-opacity: 0.14 !default;\n$baseline-theme-color: secondary !default;\n$unchecked-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-circle-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-radio__ripple';\n$unselected-ripple-target: '.mdc-radio__native-control:enabled:not(:checked) ~ #{$ripple-target}';\n$custom-property-prefix: 'radio';\n\n// TODO(b/188417756): `icon-size` token key is not supported.\n$light-theme: (\n  disabled-selected-icon-color: theme-color.$on-surface,\n  disabled-selected-icon-opacity: 0.38,\n  disabled-unselected-icon-color: theme-color.$on-surface,\n  disabled-unselected-icon-opacity: 0.38,\n  selected-focus-icon-color: theme-color.$primary,\n  selected-focus-state-layer-color: theme-color.$primary,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: theme-color.$primary,\n  selected-hover-state-layer-color: theme-color.$primary,\n  selected-hover-state-layer-opacity: 0.04,\n  selected-icon-color: theme-color.$primary,\n  selected-pressed-icon-color: theme-color.$primary,\n  selected-pressed-state-layer-color: theme-color.$primary,\n  selected-pressed-state-layer-opacity: 0.1,\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: theme-color.$on-surface,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity: 0.12,\n  unselected-hover-icon-color: theme-color.$on-surface,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity: 0.04,\n  unselected-icon-color: theme-color.$on-surface,\n  unselected-pressed-icon-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity: 0.1,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include _disabled-selected-icon-color(\n    map.get($theme, disabled-selected-icon-color)\n  );\n  @include _disabled-selected-icon-opacity(\n    map.get($theme, disabled-selected-icon-opacity)\n  );\n  @include _disabled-unselected-icon-color(\n    map.get($theme, disabled-unselected-icon-color)\n  );\n  @include _disabled-unselected-icon-opacity(\n    map.get($theme, disabled-unselected-icon-opacity)\n  );\n\n  // selected\n  @include ripple-theme.focus() {\n    @include _selected-icon-color(map.get($theme, selected-focus-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-focus-state-layer-color)\n    );\n    @include _selected-focus-state-layer-opacity(\n      map.get($theme, selected-focus-state-layer-opacity)\n    );\n  }\n  @include ripple-theme.hover() {\n    @include _selected-icon-color(map.get($theme, selected-hover-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-hover-state-layer-color)\n    );\n    @include _selected-hover-state-layer-opacity(\n      map.get($theme, selected-hover-state-layer-opacity)\n    );\n  }\n  @include _selected-icon-color(map.get($theme, selected-icon-color));\n  @include ripple-theme.active() {\n    @include _selected-icon-color(map.get($theme, selected-pressed-icon-color));\n    @include _selected-state-layer-color(\n      map.get($theme, selected-pressed-state-layer-color)\n    );\n    @include _selected-pressed-state-layer-opacity(\n      map.get($theme, selected-pressed-state-layer-opacity)\n    );\n  }\n\n  // unselected\n  @include ripple-theme.focus() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-focus-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-focus-state-layer-color)\n    );\n    @include _unselected-focus-state-layer-opacity(\n      map.get($theme, unselected-focus-state-layer-opacity)\n    );\n  }\n  @include ripple-theme.hover() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-hover-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-hover-state-layer-color)\n    );\n    @include _unselected-hover-state-layer-opacity(\n      map.get($theme, unselected-hover-state-layer-opacity)\n    );\n  }\n  @include _unselected-icon-color(map.get($theme, unselected-icon-color));\n  @include ripple-theme.active() {\n    @include _unselected-icon-color(\n      map.get($theme, unselected-pressed-icon-color)\n    );\n    @include _unselected-state-layer-color(\n      map.get($theme, unselected-pressed-state-layer-color)\n    );\n    @include _unselected-pressed-state-layer-opacity(\n      map.get($theme, unselected-pressed-state-layer-opacity)\n    );\n  }\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target size same as ripple size.\n  @include touch-target(\n    $size: map.get($theme, state-layer-size),\n    $ripple-size: map.get($theme, state-layer-size)\n  );\n}\n\n@mixin _disabled-selected-icon-color($color) {\n  @include disabled-checked-stroke-color($color);\n  @include disabled-ink-color($color);\n}\n\n@mixin _disabled-selected-icon-opacity($opacity) {\n  @include _disabled-checked-stroke-opacity($opacity);\n  @include _disabled-ink-opacity($opacity);\n}\n\n@mixin _disabled-unselected-icon-color($color) {\n  @include disabled-unchecked-stroke-color($color);\n}\n\n@mixin _disabled-unselected-icon-opacity($opacity) {\n  @include _disabled-unchecked-stroke-opacity($opacity);\n}\n\n@mixin _selected-icon-color($color) {\n  @include checked-stroke-color($color);\n  @include ink-color($color);\n}\n\n@mixin _selected-state-layer-color($color) {\n  @include ripple-theme.states-base-color(\n    $color: $color,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-hover-state-layer-opacity($opacity) {\n  @include ripple-theme.states-hover-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-focus-state-layer-opacity($opacity) {\n  @include ripple-theme.states-focus-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _selected-pressed-state-layer-opacity($opacity) {\n  @include ripple-theme.states-press-opacity(\n    $opacity: $opacity,\n    $ripple-target: $ripple-target\n  );\n}\n\n@mixin _unselected-icon-color($color) {\n  @include unchecked-stroke-color($color);\n}\n\n@mixin _unselected-state-layer-color($color) {\n  @include ripple-theme.states-base-color(\n    $color: $color,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-hover-state-layer-opacity($opacity) {\n  @include ripple-theme.states-hover-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-focus-state-layer-opacity($opacity) {\n  @include ripple-theme.states-focus-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n@mixin _unselected-pressed-state-layer-opacity($opacity) {\n  @include ripple-theme.states-press-opacity(\n    $opacity: $opacity,\n    $ripple-target: $unselected-ripple-target\n  );\n}\n\n///\n/// Sets the stroke color of an unchecked, enabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin unchecked-stroke-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled-unchecked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the stroke color of a checked, enabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin checked-stroke-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled-checked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of an enabled radio button.\n/// @param {Color} $color - The desired ink color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @include _if-enabled {\n    @include _ink-color($color, $query: $query);\n  }\n}\n\n///\n/// Sets the stroke color of an unchecked, disabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin disabled-unchecked-stroke-color(\n  $color,\n  $query: feature-targeting.all()\n) {\n  @include _if-disabled-unchecked {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-unchecked-stroke-opacity($opacity) {\n  @include _if-disabled-unchecked {\n    @include _stroke-opacity($opacity);\n  }\n}\n\n///\n/// Sets the stroke color of a checked, disabled radio button.\n/// @param {Color} $color - The desired stroke color.\n///\n@mixin disabled-checked-stroke-color($color, $query: feature-targeting.all()) {\n  @include if-disabled-checked_ {\n    @include _stroke-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-checked-stroke-opacity($opacity) {\n  @include if-disabled-checked_ {\n    @include _stroke-opacity($opacity);\n  }\n}\n\n///\n/// Sets the ink color of a disabled radio button.\n/// @param {Color} $color - The desired ink color\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include _ink-color($color, $query: $query);\n  }\n}\n\n@mixin _disabled-ink-opacity($opacity) {\n  @include if-disabled_ {\n    @include _ink-opacity($opacity);\n  }\n}\n\n@mixin focus-indicator-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background::before {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets radio touch target size which can be more than the ripple size. Param `$ripple-size` is required for custom\n/// ripple size.\n///\n/// @param {Number} $size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`. Required only for custom ripple size.\n///\n@mixin touch-target(\n  $size: $ripple-size,\n  $ripple-size: $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $offset: 'calc((__ripple_size - __size) / 2)';\n  $replace: (\n    __ripple_size: $ripple-size,\n    __size: $size,\n  );\n\n  .mdc-radio__native-control {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property('top', $offset, $replace: $replace);\n      @include theme.property('right', $offset, $replace: $replace);\n      @include theme.property('left', $offset, $replace: $replace);\n      @include theme.property('width', $size);\n      @include theme.property('height', $size);\n    }\n  }\n}\n\n///\n/// Sets density scale for radio.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include ripple-size($size, $query: $query);\n  // Sets touch target size same as ripple size.\n  @include touch-target($size: $size, $ripple-size: $size, $query: $query);\n\n  @if $density-scale != 0 {\n    @include touch-target-reset_($query: $query);\n  }\n}\n\n///\n/// Sets radio ripple size.\n///\n/// @param {Number} $size - Ripple size in `px`.\n///\n@mixin ripple-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $replace: (\n    __size: $size,\n    __icon_size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    $padding: 'calc((__size - __icon_size) / 2)';\n\n    @include theme.property('padding', $padding, $replace: $replace);\n  }\n\n  .mdc-radio__background::before {\n    @include feature-targeting.targets($feat-structure) {\n      $padding-offset: 'calc(-1 * (__size - __icon_size) / 2)';\n\n      @include theme.property('top', $padding-offset, $replace: $replace);\n      @include theme.property('left', $padding-offset, $replace: $replace);\n      @include theme.property('width', $size);\n      @include theme.property('height', $size);\n    }\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin touch-target-reset_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin: 0;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled state.\n/// @access private\n///\n@mixin _if-enabled {\n  .mdc-radio__native-control:enabled + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled & unchecked state.\n/// @access private\n///\n@mixin _if-enabled-unchecked {\n  .mdc-radio__native-control:enabled:not(:checked) + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// enabled & checked state.\n/// @access private\n///\n@mixin _if-enabled-checked {\n  .mdc-radio__native-control:enabled:checked + {\n    @content;\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    + {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled & unchecked state.\n/// @access private\n///\n@mixin _if-disabled-unchecked {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    &:not(:checked) + {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the radio background only when its native control is in the\n/// disabled & checked state.\n/// @access private\n///\n@mixin if-disabled-checked_ {\n  [aria-disabled='true'] .mdc-radio__native-control,\n  .mdc-radio__native-control:disabled {\n    &:checked + {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the ink color for radio. This is wrapped in a mixin\n/// that qualifies state such as `_if-enabled`\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background .mdc-radio__inner-circle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin _ink-opacity($opacity) {\n  .mdc-radio__background .mdc-radio__inner-circle {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the stroke color for radio. This is wrapped in a mixin\n/// that qualifies state such as `_if-enabled`\n/// @access private\n///\n@mixin _stroke-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-radio__background .mdc-radio__outer-circle {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $color);\n    }\n  }\n}\n\n@mixin _stroke-opacity($opacity) {\n  .mdc-radio__background .mdc-radio__outer-circle {\n    @include theme.property(opacity, $opacity);\n  }\n}\n","@use 'sass:list';\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use 'sass:string';\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map.get(map.get($config, $level), $name);\n}\n\n/// Gets the font size for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n/// Gets the line height for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n/// Gets the font weight for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n/// Gets the letter spacing for a level inside a typography config.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n/// Gets the font-family from a typography config and removes the quotes around it.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@function font-family($config, $level: null) {\n  $font-family: map.get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(meta.type-of($font-family) == string, string.unquote($font-family), $font-family);\n}\n\n/// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n/// the individual properties if a value that isn't allowed in the shorthand is passed in.\n/// @param {String} $font-size The font-size value.\n/// @param {String | Number} $font-weight The font-weight value.\n/// @param {String | Number} $line-height The line-height value.\n/// @param {String} $font-family The font-family value.\n/// @returns {String} The `font` shorthand value combining the given parts.\n@mixin font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes.\n    font: $font-weight list.slash($font-size, $line-height) $font-family;\n  }\n}\n\n/// Emits CSS styles for the given typography level.\n/// @param {Map} $config A typography config.\n/// @param {Map} $level A typography level.\n@mixin typography-level($config, $level) {\n  $font-size: font-size($config, $level);\n  $font-weight: font-weight($config, $level);\n  $line-height: line-height($config, $level);\n  $font-family: font-family($config, $level);\n\n  @include font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: letter-spacing($config, $level);\n}\n\n/// Coerce a value to `em` if it is a unitless number, otherwise returns\n/// the value provided.\n@function private-coerce-unitless-to-em($value) {\n  @return if(math.is-unitless($value), 1em * $value, $value);\n}\n","//\n// Copyright 2018 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/tab-scroller/mixins' as tab-scroller-mixins;\n@use '@material/tab/mixins' as tab-mixins;\n@use './variables';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  .mdc-tab-bar {\n    @include width(100%, $query);\n  }\n}\n\n@mixin core-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define tab-bar\n  @include static-styles($query: $query);\n  @include density(variables.$density-scale, $query: $query);\n  @include stacked-density(variables.$stacked-density-scale, $query: $query);\n  // postcss-bem-linter: end\n}\n\n@mixin width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $width;\n  }\n}\n\n///\n/// Sets density scale to default tab bar variant. Use `mdc-tab-bar-stacked-density()` mixin for stacked tab bar\n/// variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets density scale to stacked tab bar variant.\n///\n/// @param {Number} $density-scale Density scale value. Supported density scales `-4`, `-3`, `-2`, `-1` and `0`.\n///\n@mixin stacked-density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: variables.$stacked-density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  .mdc-tab--stacked {\n    @include tab-mixins.height($height, $query: $query);\n  }\n}\n\n///\n/// Sets the CSS transition for the tab scrolling animation. This mixin is a proxy to `mdc-tab-scroller-transition`\n/// mixin.\n///\n/// @param {Number | String} $duration-ms - Duration (in ms) of the animation.\n/// @param {String} $timing-function - Optionally overrides the default animation timing function.\n///\n@mixin tab-scroller-transition(\n  $duration-ms,\n  $timing-function: animation-variables.$standard-curve-timing-function,\n  $query: feature-targeting.all()\n) {\n  .mdc-tab-scroller {\n    @include tab-scroller-mixins.transition(\n      $duration-ms,\n      $timing-function: $timing-function,\n      $query: $query\n    );\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/theme/keys';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/theme/shadow-dom';\n@use '@material/touch-target/touch-target';\n@use './checkbox-custom-properties';\n\n$baseline-theme-color: secondary !default;\n$mark-color: theme-color.prop-value(on-secondary) !default;\n$border-color: rgba(theme-color.prop-value(on-surface), 0.54) !default;\n$disabled-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n\n$ripple-size: 40px !default;\n$icon-size: 18px !default;\n$mark-stroke-size: math.div(2, 15) * $icon-size !default;\n$border-width: 2px !default;\n$transition-duration: 90ms !default;\n$item-spacing: 4px !default;\n$focus-indicator-opacity: map.get(\n  ripple-theme.$dark-ink-opacities,\n  focus\n) !default;\n\n$minimum-size: 28px !default;\n$maximum-size: $ripple-size !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    minimum: $minimum-size,\n    default: $ripple-size,\n    maximum: $maximum-size,\n  ),\n) !default;\n\n$ripple-target: '.mdc-checkbox__ripple';\n$custom-property-prefix: 'checkbox';\n\n// TODO(b/188417756): State layer (ripple) size token is missing including\n//     `state-layer-size`.\n// TODO(b/188529841): `selected-checkmark-color` and `disabled-selected-checkmark-color` does not exist in tokens.\n$light-theme: (\n  disabled-selected-checkmark-color: $mark-color,\n  disabled-selected-icon-color: $disabled-color,\n  disabled-selected-icon-opacity: null,\n  disabled-unselected-icon-color: $disabled-color,\n  disabled-unselected-icon-opacity: null,\n  selected-checkmark-color: $mark-color,\n  selected-focus-icon-color: $baseline-theme-color,\n  selected-focus-state-layer-color: theme-color.$on-surface,\n  selected-focus-state-layer-opacity: 0.12,\n  selected-hover-icon-color: $baseline-theme-color,\n  selected-hover-state-layer-color: $baseline-theme-color,\n  selected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  selected-icon-color: $baseline-theme-color,\n  selected-pressed-icon-color: $baseline-theme-color,\n  selected-pressed-state-layer-color: theme-color.$on-surface,\n  selected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n  state-layer-size: $ripple-size,\n  unselected-focus-icon-color: $baseline-theme-color,\n  unselected-focus-state-layer-color: theme-color.$on-surface,\n  unselected-focus-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, focus),\n  unselected-hover-icon-color: $baseline-theme-color,\n  unselected-hover-state-layer-color: theme-color.$on-surface,\n  unselected-hover-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, hover),\n  unselected-icon-color: $border-color,\n  unselected-pressed-icon-color: $border-color,\n  unselected-pressed-state-layer-color: theme-color.$on-surface,\n  unselected-pressed-state-layer-opacity:\n    map.get(ripple-theme.$dark-ink-opacities, pressed),\n);\n\n$forced-colors-theme: (\n  disabled-selected-checkmark-color: ButtonFace,\n  disabled-selected-icon-color: GrayText,\n  disabled-selected-icon-opacity: 1,\n  disabled-unselected-icon-color: GrayText,\n  disabled-unselected-icon-opacity: 1,\n  selected-checkmark-color: ButtonText,\n);\n\n@mixin theme($theme) {\n  // TODO(b/251881053): Replace with `validate-theme`.\n  @include theme.validate-theme-styles($light-theme, $theme);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $custom-property-prefix\n  );\n\n  @include disabled-container-colors(\n    $unmarked-stroke-color: map.get($theme, disabled-unselected-icon-color),\n    $marked-fill-color: map.get($theme, disabled-selected-icon-color)\n  );\n\n  @include ink-color(map.get($theme, selected-checkmark-color));\n  @include disabled-ink-color(\n    map.get($theme, disabled-selected-checkmark-color)\n  );\n\n  @include _icon-color(\n    map.get($theme, unselected-icon-color),\n    map.get($theme, selected-icon-color)\n  );\n\n  &:hover {\n    @include _icon-color(\n      map.get($theme, unselected-hover-icon-color),\n      map.get($theme, selected-hover-icon-color)\n    );\n  }\n\n  @include ripple-theme.focus() {\n    @include _icon-color(\n      map.get($theme, unselected-focus-icon-color),\n      map.get($theme, selected-focus-icon-color)\n    );\n  }\n\n  @include ripple-theme.active() {\n    @include _icon-color(\n      map.get($theme, unselected-pressed-icon-color),\n      map.get($theme, selected-pressed-icon-color)\n    );\n  }\n\n  @include ripple-color(\n    $color: map.get($theme, unselected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, unselected-hover-state-layer-opacity),\n      focus: map.get($theme, unselected-focus-state-layer-opacity),\n      press: map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include focus-indicator-color(\n    $color: map.get($theme, selected-hover-state-layer-color),\n    $opacity-map: (\n      hover: map.get($theme, selected-hover-state-layer-opacity),\n      focus: map.get($theme, selected-focus-state-layer-opacity),\n      press: map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n\n  @include ripple-size(map.get($theme, state-layer-size));\n  // Set touch target to ripple size.\n  @include touch-target(\n    map.get($theme, state-layer-size),\n    map.get($theme, state-layer-size)\n  );\n}\n\n$light-theme-deprecated: (\n  density-scale: 0,\n  checkmark-color: $mark-color,\n  container-checked-color: $baseline-theme-color,\n  container-checked-hover-color: null,\n  container-disabled-color: $disabled-color,\n  outline-color: $border-color,\n  outline-hover-color: null,\n  ripple-color: theme-color.$on-surface,\n  ripple-opacity: ripple-theme.$dark-ink-opacities,\n  ripple-checked-color: $baseline-theme-color,\n  ripple-checked-opacity: ripple-theme.$dark-ink-opacities,\n);\n\n/// Sets theme to checkbox based on provided theme configuration.\n/// Only emits theme related styles.\n/// @param {Map} $theme - Theme configuration to use for theming checkbox.\n@mixin theme-deprecated($theme, $query: feature-targeting.all()) {\n  @include theme.validate-theme($light-theme-deprecated, $theme);\n\n  $ripple-color: map.get($theme, ripple-color);\n  $ripple-opacity: map.get($theme, ripple-opacity);\n  @if $ripple-opacity == null {\n    $ripple-opacity: ();\n  }\n  @if $ripple-color {\n    @include ripple-color(\n      $color: $ripple-color,\n      $opacity-map: $ripple-opacity,\n      $query: $query\n    );\n  }\n\n  $ripple-checked-color: map.get($theme, ripple-checked-color);\n  $ripple-checked-opacity: map.get($theme, ripple-checked-opacity);\n  @if $ripple-checked-opacity == null {\n    $ripple-checked-opacity: ();\n  }\n  @if $ripple-checked-color {\n    @include focus-indicator-color(\n      $color: $ripple-checked-color,\n      $opacity-map: $ripple-checked-opacity,\n      $query: $query\n    );\n  }\n\n  $density-scale: map.get($theme, density-scale);\n  @if $density-scale != null {\n    @include density($density-scale: $density-scale, $query: $query);\n  }\n\n  $outline-color: map.get($theme, outline-color);\n  $container-checked-color: map.get($theme, container-checked-color);\n  @if (\n    ($outline-color and not $container-checked-color) or\n      (not $outline-color and $container-checked-color)\n  ) {\n    @error 'Both `outline-color` and `container-checked-color` keys should be provided.';\n  }\n  @if ($outline-color and $container-checked-color) {\n    @include container-colors(\n      $unmarked-stroke-color: $outline-color,\n      $marked-stroke-color: $container-checked-color,\n      $marked-fill-color: $container-checked-color,\n      $query: $query\n    );\n  }\n\n  $outline-hover-color: map.get($theme, outline-hover-color);\n  $container-checked-hover-color: map.get(\n    $theme,\n    container-checked-hover-color\n  );\n  @if (\n    ($outline-hover-color and not $container-checked-hover-color) or\n      (not $outline-hover-color and $container-checked-hover-color)\n  ) {\n    @error 'Both `outline-hover-color` and `container-checked-hover-color` keys should be provided.';\n  }\n  @if ($outline-hover-color and $container-checked-hover-color) {\n    @include ripple-theme.states-selector() {\n      @include container-colors(\n        $unmarked-stroke-color: $outline-hover-color,\n        $marked-stroke-color: $container-checked-hover-color,\n        $marked-fill-color: $container-checked-hover-color,\n        $query: $query\n      );\n    }\n  }\n\n  $container-disabled-color: map.get($theme, container-disabled-color);\n  @if $container-disabled-color {\n    @include disabled-container-colors(\n      $unmarked-stroke-color: $container-disabled-color,\n      $marked-fill-color: $container-disabled-color,\n      $query: $query\n    );\n  }\n\n  $checkmark-color: map.get($theme, checkmark-color);\n  @if $checkmark-color {\n    @include ink-color($checkmark-color, $query: $query);\n    @include disabled-ink-color($checkmark-color, $query: $query);\n  }\n}\n\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values `-3`, `-2`, `-1`, `0`.\n/// @return Returns ripple size of checkbox for given density scale.\n///\n@function get-ripple-size($density-scale) {\n  @return density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size\n  );\n}\n\n///\n/// Sets density scale for checkbox.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values\n///     `-3`, `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: get-ripple-size($density-scale);\n\n  @include ripple-size($size, $query: $query);\n  @include touch-target($size, $ripple-size: $size, $query: $query);\n}\n\n/// Sets ripple size of checkbox and optionally set touch target size which can\n/// be more than the size of ripple.\n/// @param {Number} $ripple-size - Visual ripple size of checkbox.\n@mixin ripple-size($ripple-size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $ripple-size and not custom-properties.is-custom-prop($ripple-size) {\n    $ripple-size: custom-properties.create(\n      checkbox-custom-properties.$ripple-size,\n      $ripple-size\n    );\n  }\n  $checkbox-padding: 'calc((_ripple-size - _icon-size) / 2)';\n  $replace: (\n    _ripple-size: $ripple-size,\n    _icon-size: $icon-size,\n  );\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(padding, $checkbox-padding, $replace: $replace);\n  }\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(top, $checkbox-padding, $replace: $replace);\n      @include theme.property(left, $checkbox-padding, $replace: $replace);\n    }\n  }\n}\n\n/// Sets the touch target size and appropriate margin to accommodate the\n/// touch target.\n/// @param {Number} $touch-target-size Size of touch target (Native input) in `px`.\n/// @param {Number} $ripple-size Size of ripple in `px`.\n@mixin touch-target(\n  $touch-target-size,\n  $ripple-size,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $touch-target-size {\n    @if not custom-properties.is-custom-prop($touch-target-size) {\n      $touch-target-size: custom-properties.create(\n        checkbox-custom-properties.$touch-target-size,\n        $touch-target-size\n      );\n    }\n\n    $margin: 'calc((_touch-target-size - _ripple-size) / 2)';\n    $replace: (\n      _touch-target-size: $touch-target-size,\n      _ripple-size: $ripple-size,\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(margin, $margin, $replace: $replace);\n    }\n\n    $offset: 'calc((_ripple-size - _touch-target-size) / 2)';\n\n    @include feature-targeting.targets($feat-structure) {\n      .mdc-checkbox__native-control {\n        @include theme.property(top, $offset, $replace: $replace);\n        @include theme.property(right, $offset, $replace: $replace);\n        @include theme.property(left, $offset, $replace: $replace);\n        @include theme.property(width, $touch-target-size);\n        @include theme.property(height, $touch-target-size);\n      }\n    }\n  }\n}\n\n@mixin _icon-color($unselected-color, $selected-color) {\n  @if $unselected-color and $selected-color {\n    @include container-colors(\n      $unmarked-stroke-color: $unselected-color,\n      $marked-stroke-color: $selected-color,\n      $marked-fill-color: $selected-color\n    );\n  } @else if $unselected-color or $selected-color {\n    @error 'Both unselected and selected icon colors should be provided.';\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of enabled checkbox.\n/// Set $generate-keyframes to false to prevent the mixin from generating @keyframes\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n/// @param {Boolean} $generate-keyframes [true] - Whether animation keyframes should be generated\n///\n@mixin container-colors(\n  $unmarked-stroke-color: $border-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: $baseline-theme-color,\n  $marked-fill-color: $baseline-theme-color,\n  $generate-keyframes: true,\n  $query: feature-targeting.all()\n) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  // Unchecked colors\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$unchecked-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @include if-unmarked-enabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  // Checked colors\n  @if (\n    $marked-stroke-color and not\n      custom-properties.is-custom-prop($marked-stroke-color)\n  ) {\n    $marked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-stroke-color)\n      )\n    );\n  }\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$checked-color,\n      custom-properties.create(\n        color-custom-properties.$secondary,\n        theme-color.prop-value($marked-fill-color)\n      )\n    );\n  }\n\n  @include if-marked-enabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if $generate-keyframes and\n    $unmarked-stroke-color and\n    $marked-stroke-color and\n    $unmarked-fill-color and\n    $marked-fill-color\n  {\n    $uid: theme-color.color-hash($unmarked-stroke-color) +\n      theme-color.color-hash($marked-stroke-color) +\n      theme-color.color-hash($unmarked-fill-color) +\n      theme-color.color-hash($marked-fill-color);\n\n    $anim-selector: if(&, '&.mdc-checkbox--anim', '.mdc-checkbox--anim');\n\n    @include feature-targeting.targets($feat-animation, $feat-color) {\n      @include container-keyframes_(\n        $from-stroke-color: $unmarked-stroke-color,\n        $to-stroke-color: $marked-stroke-color,\n        $from-fill-color: $unmarked-fill-color,\n        $to-fill-color: $marked-fill-color,\n        $uid: #{$uid}\n      );\n    }\n\n    #{$anim-selector} {\n      &-unchecked-checked,\n      &-unchecked-indeterminate {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-in-background-#{$uid};\n          }\n        }\n      }\n\n      &-checked-unchecked,\n      &-indeterminate-unchecked {\n        .mdc-checkbox__native-control:enabled ~ .mdc-checkbox__background {\n          @include feature-targeting.targets($feat-animation) {\n            animation-name: mdc-checkbox-fade-out-background-#{$uid};\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets stroke & fill colors for both marked and unmarked state of disabled checkbox.\n/// @param {Color} $unmarked-stroke-color - The desired stroke color for the unmarked state\n/// @param {Color} $unmarked-fill-color - The desired fill color for the unmarked state\n/// @param {Color} $marked-stroke-color - The desired stroke color for the marked state\n/// @param {Color} $marked-fill-color - The desired fill color for the marked state\n///\n@mixin disabled-container-colors(\n  $unmarked-stroke-color: $disabled-color,\n  $unmarked-fill-color: transparent,\n  $marked-stroke-color: transparent,\n  $marked-fill-color: $disabled-color,\n  $query: feature-targeting.all()\n) {\n  @if (\n    $unmarked-stroke-color and not\n      custom-properties.is-custom-prop($unmarked-stroke-color)\n  ) {\n    $unmarked-stroke-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($unmarked-stroke-color)\n    );\n  }\n\n  @if $unmarked-stroke-color == null {\n    $unmarked-fill-color: null;\n  }\n\n  @include if-unmarked-disabled_ {\n    @include container-colors_(\n      $unmarked-stroke-color,\n      $unmarked-fill-color,\n      $query: $query\n    );\n  }\n\n  @if (\n    $marked-fill-color and not\n      custom-properties.is-custom-prop($marked-fill-color)\n  ) {\n    $marked-fill-color: custom-properties.create(\n      checkbox-custom-properties.$disabled-color,\n      theme-color.prop-value($marked-fill-color)\n    );\n  }\n\n  @if $marked-fill-color and\n    custom-properties.get-fallback($marked-fill-color) ==\n    GrayText\n  {\n    // Transparent appears white in HCM\n    $marked-stroke-color: GrayText;\n  }\n\n  @if $marked-fill-color == null {\n    $marked-stroke-color: null;\n  }\n\n  @include if-marked-disabled_ {\n    @include container-colors_(\n      $marked-stroke-color,\n      $marked-fill-color,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for an enabled checkbox\n/// @param {Color} $color - The desired ink color in enabled state\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-enabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a disabled checkbox\n/// @param {Color} $color - The desired ink color in disabled state\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @if ($color and not custom-properties.is-custom-prop($color)) {\n    $color: custom-properties.create(\n      checkbox-custom-properties.$ink-color,\n      $color\n    );\n  }\n\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n/// Sets ripple color when checkbox is not in checked state.\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: $ripple-target\n  );\n}\n\n/// Sets focus indicator color when checkbox is in checked state.\n@mixin focus-indicator-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  &.mdc-checkbox--selected {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n\n  &.mdc-ripple-upgraded--background-focused.mdc-checkbox--selected {\n    @include ripple-theme.states-base-color(\n      $color: $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n//\n// Private\n//\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// enabled state.\n/// @access private\n///\n@mixin if-enabled_ {\n  .mdc-checkbox__native-control:enabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  .mdc-checkbox__native-control:disabled ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & enabled state.\n/// @access private\n///\n@mixin if-unmarked-enabled_ {\n  .mdc-checkbox__native-control:enabled:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// unmarked & disabled state.\n/// @access private\n///\n@mixin if-unmarked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:not(:checked):not(:indeterminate):not([data-indeterminate='true'])\n    ~ {\n    @content;\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & enabled state.\n/// @access private\n///\n@mixin if-marked-enabled_ {\n  .mdc-checkbox__native-control:enabled:checked,\n  .mdc-checkbox__native-control:enabled:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true']:enabled {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Helps select the checkbox background only when its native control is in\n/// marked & disabled state.\n/// @access private\n///\n@mixin if-marked-disabled_ {\n  // Note: we must use `[disabled]` instead of `:disabled` below because Edge does not always recalculate the style\n  // property when the `:disabled` pseudo-class is followed by a sibling combinator. See:\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/11295231/\n  .mdc-checkbox__native-control[disabled]:checked,\n  .mdc-checkbox__native-control[disabled]:indeterminate,\n  .mdc-checkbox__native-control[data-indeterminate='true'][disabled] {\n    ~ {\n      @content;\n    }\n  }\n}\n\n///\n/// Sets the stroke & fill colors for the checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked-enabled_`.\n/// @access private\n///\n@mixin container-colors_(\n  $stroke-color,\n  $fill-color,\n  $query: feature-targeting.all()\n) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(border-color, $stroke-color);\n      @include theme.property(background-color, $fill-color);\n    }\n  }\n}\n\n///\n/// Sets the ink color of the checked and indeterminate icons for a checkbox.\n/// This mixin should be wrapped in a mixin that qualifies state such as\n/// `mdc-checkbox-if-unmarked_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(border-color, $color);\n      }\n    }\n  }\n}\n\n@mixin container-keyframes_(\n  $from-stroke-color,\n  $to-stroke-color,\n  $from-fill-color,\n  $to-fill-color,\n  $uid\n) {\n  @keyframes mdc-checkbox-fade-in-background-#{$uid} {\n    0% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n\n    50% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n  }\n\n  @keyframes mdc-checkbox-fade-out-background-#{$uid} {\n    0%,\n    80% {\n      @include theme.property(border-color, $to-stroke-color);\n      @include theme.property(background-color, $to-fill-color);\n    }\n\n    100% {\n      @include theme.property(border-color, $from-stroke-color);\n      @include theme.property(background-color, $from-fill-color);\n    }\n  }\n}\n","//\n// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use '@material/animation/functions' as functions2;\n@use '@material/animation/variables' as animation-variables;\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/dom';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/theme/theme-color';\n@use './checkbox-custom-properties';\n@use '@material/theme/theme';\n@use '@material/theme/color-custom-properties';\n@use '@material/theme/custom-properties';\n@use '@material/touch-target/variables' as touch-target-variables;\n@use './checkbox-theme';\n\n///\n/// Checkbox and ripple styles.\n///\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple-styles($query);\n}\n\n/// Checkbox styles (Excluding ripple styles).\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n// TODO(b/162887560): Rename to `checkbox-without-ripple-styles()`\n@mixin without-ripple($query: feature-targeting.all()) {\n  // TODO(b/165005345): Include theme-styles() after static-styles().\n  @include theme-styles($query: $query);\n  @include static-styles($query: $query);\n}\n\n/// Checkbox static styles.\n/// Checkbox styles that are not customizable should go here.\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n\n  @include feature-targeting.targets($feat-animation) {\n    @include mark-keyframes_;\n  }\n\n  .mdc-checkbox {\n    @include feature-targeting.targets($feat-structure) {\n      @include base_;\n    }\n\n    @include ripple-theme.focus {\n      .mdc-checkbox__focus-ring {\n        @include focus-ring.focus-ring(\n          $query: $query,\n          $container-outer-padding-vertical: 0,\n          $container-outer-padding-horizontal: 0\n        );\n      }\n    }\n\n    // Turn off focus ring for IE when HCM is turn off. For some reason this\n    // adds space to the bottom on the focused checkbox inside a dialog.\n    @media all and (-ms-high-contrast: none) {\n      .mdc-checkbox__focus-ring {\n        display: none;\n      }\n    }\n  }\n\n  @include dom.forced-colors-mode {\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        margin: 0 1px; // Extra horizontal space around mixedmark symbol.\n      }\n    }\n  }\n\n  // Needed to disable hover effects on CSS-only (non-JS) checkboxes\n  .mdc-checkbox--disabled {\n    @include feature-targeting.targets($feat-structure) {\n      @include disabled_;\n    }\n  }\n\n  .mdc-checkbox__background {\n    @include background_($query);\n  }\n\n  .mdc-checkbox__checkmark {\n    @include checkmark_($query);\n  }\n\n  .mdc-checkbox__checkmark-path {\n    @include checkmark-path_($query);\n  }\n\n  .mdc-checkbox__mixedmark {\n    @include mixedmark_($query);\n  }\n\n  .mdc-checkbox--anim {\n    @include feature-targeting.targets($feat-animation) {\n      @include anim_;\n    }\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    @include feature-targeting.targets($feat-animation) {\n      @include background--marked_;\n    }\n\n    .mdc-checkbox__checkmark-path {\n      @include feature-targeting.targets($feat-structure) {\n        @include checkmark-path--marked_;\n      }\n    }\n  }\n\n  .mdc-checkbox__native-control {\n    @include feature-targeting.targets($feat-structure) {\n      @include native-control_;\n    }\n\n    &:disabled {\n      @include feature-targeting.targets($feat-structure) {\n        @include disabled_;\n      }\n    }\n  }\n\n  .mdc-checkbox--touch {\n    @include checkbox-theme.touch-target(\n      custom-properties.create(\n        checkbox-state-layer-size,\n        touch-target-variables.$height\n      ),\n      custom-properties.create(\n        checkbox-state-layer-size,\n        checkbox-theme.$ripple-size\n      ),\n      $query: $query\n    );\n  }\n\n  .mdc-checkbox__native-control:checked ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--checked_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--checked_;\n      }\n    }\n  }\n  .mdc-checkbox__native-control:indeterminate ~ .mdc-checkbox__background,\n  .mdc-checkbox__native-control[data-indeterminate='true']\n    ~ .mdc-checkbox__background {\n    .mdc-checkbox__checkmark {\n      @include checkmark--indeterminate_($query);\n    }\n\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-structure) {\n        @include mixedmark--indeterminate_;\n      }\n    }\n  }\n\n  // JS checkbox\n  .mdc-checkbox.mdc-checkbox--upgraded {\n    .mdc-checkbox__background,\n    .mdc-checkbox__checkmark,\n    .mdc-checkbox__checkmark-path,\n    .mdc-checkbox__mixedmark {\n      @include feature-targeting.targets($feat-animation) {\n        @include child--upgraded_;\n      }\n    }\n  }\n}\n\n/// Checkbox theme styles.\n/// Checkbox styles that are customizable should go here.\n@mixin theme-styles($query: feature-targeting.all()) {\n  .mdc-checkbox {\n    @include checkbox-theme.theme-deprecated(\n      checkbox-theme.$light-theme-deprecated,\n      $query: $query\n    );\n  }\n}\n\n/// Checkbox's ripple styles.\n///\n/// NOTE: This API is intended for use by frameworks that may want to separate the ripple-related styles from the other\n/// checkbox styles. It is recommended that most users use `mdc-checkbox-core-styles` instead.\n@mixin ripple-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-checkbox {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple.radius-unbounded(\n      $query: $query,\n      $ripple-target: checkbox-theme.$ripple-target\n    );\n    @include ripple-theme.behind-content(\n      checkbox-theme.$ripple-target,\n      $query: $query\n    );\n  }\n\n  #{checkbox-theme.$ripple-target} {\n    @include ripple.target-common($query: $query);\n  }\n}\n\n@mixin base_ {\n  display: inline-block;\n  &[hidden] {\n    display: none;\n  }\n  position: relative;\n  flex: 0 0 checkbox-theme.$icon-size;\n  box-sizing: content-box;\n  width: checkbox-theme.$icon-size;\n  height: checkbox-theme.$icon-size;\n  line-height: 0;\n  white-space: nowrap;\n  cursor: pointer;\n  vertical-align: bottom;\n}\n\n@mixin disabled_ {\n  cursor: default;\n  pointer-events: none;\n}\n\n@mixin child--upgraded_ {\n  transition: none;\n}\n\n// Animation\n\n@mixin anim_ {\n  $mdc-checkbox-indeterminate-change-duration_: 500ms;\n\n  // stylelint-disable no-unknown-animations -- allow unknown animations\n\n  &-unchecked-checked,\n  &-unchecked-indeterminate,\n  &-checked-unchecked,\n  &-indeterminate-unchecked {\n    .mdc-checkbox__background {\n      animation-duration: checkbox-theme.$transition-duration * 2;\n      animation-timing-function: linear;\n    }\n  }\n\n  &-unchecked-checked {\n    .mdc-checkbox__checkmark-path {\n      // Instead of delaying the animation, we simply multiply its length by 2 and begin the\n      // animation at 50% in order to prevent a flash of styles applied to a checked checkmark\n      // as the background is fading in before the animation begins.\n      animation: mdc-checkbox-unchecked-checked-checkmark-path\n        checkbox-theme.$transition-duration * 2 linear 0s;\n      transition: none;\n    }\n  }\n\n  &-unchecked-indeterminate {\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-unchecked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-unchecked {\n    .mdc-checkbox__checkmark-path {\n      animation: mdc-checkbox-checked-unchecked-checkmark-path\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-checked-indeterminate {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-checked-indeterminate-checkmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-checked-indeterminate-mixedmark\n        checkbox-theme.$transition-duration linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-checked {\n    .mdc-checkbox__checkmark {\n      animation: mdc-checkbox-indeterminate-checked-checkmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-indeterminate-checked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ linear 0s;\n      transition: none;\n    }\n  }\n\n  &-indeterminate-unchecked {\n    .mdc-checkbox__mixedmark {\n      animation: mdc-checkbox-indeterminate-unchecked-mixedmark\n        $mdc-checkbox-indeterminate-change-duration_ * 0.6 linear 0s;\n      transition: none;\n    }\n  }\n\n  // stylelint-enable no-unknown-animations\n}\n\n@mixin background_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: absolute;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: checkbox-theme.$icon-size;\n    height: checkbox-theme.$icon-size;\n    // border-color is overridden by the mdc-checkbox-unmarked-stroke-color() mixin\n    border: checkbox-theme.$border-width solid currentColor;\n    border-radius: 2px;\n    background-color: transparent;\n    pointer-events: none;\n    will-change: background-color, border-color;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(background-color), transition-exit(border-color);\n  }\n}\n\n@mixin background--marked_ {\n  transition: transition-enter(border-color), transition-enter(background-color);\n}\n\n// stylelint-disable block-no-empty -- For backward compatibility.\n@mixin focus-indicator_($query: feature-targeting.all()) {\n}\n@mixin focus-indicator--focused_($query: feature-targeting.all()) {\n}\n// stylelint-enable block-no-empty\n\n// Native input\n\n@mixin native-control_ {\n  position: absolute;\n  margin: 0;\n  padding: 0;\n  opacity: 0;\n  cursor: inherit;\n}\n\n// Check mark\n\n@mixin checkmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      opacity,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  .mdc-checkbox--upgraded & {\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 1;\n    }\n  }\n}\n\n@mixin checkmark--checked_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-enter(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration * 2\n      ),\n      transition-enter(transform, 0ms, checkbox-theme.$transition-duration * 2);\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    opacity: 1;\n  }\n}\n\n@mixin checkmark--indeterminate_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: rotate(45deg);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n        opacity,\n        0ms,\n        checkbox-theme.$transition-duration\n      ),\n      transition-exit(transform, 0ms, checkbox-theme.$transition-duration);\n  }\n}\n\n// Check mark path\n\n@mixin checkmark-path_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(\n      stroke-dashoffset,\n      0ms,\n      checkbox-theme.$transition-duration * 2\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    stroke: currentColor;\n    stroke-width: checkbox-theme.$mark-stroke-size * 1.3;\n    stroke-dashoffset: $mark-path-length_;\n    stroke-dasharray: $mark-path-length_;\n  }\n}\n\n@mixin checkmark-path--marked_ {\n  stroke-dashoffset: 0;\n}\n\n// Mixed mark\n\n@mixin mixedmark_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: 100%;\n    height: 0;\n    transform: scaleX(0) rotate(0deg);\n    border-width: math.div(math.floor(checkbox-theme.$mark-stroke-size), 2);\n    border-style: solid;\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: transition-exit(opacity), transition-exit(transform);\n  }\n}\n\n@mixin mixedmark--checked_ {\n  transform: scaleX(1) rotate(-45deg);\n}\n\n@mixin mixedmark--indeterminate_ {\n  transform: scaleX(1) rotate(0deg);\n  opacity: 1;\n}\n\n@function transition-enter(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.enter($property, $duration, $delay);\n}\n\n@function transition-exit(\n  $property,\n  $delay: 0ms,\n  $duration: checkbox-theme.$transition-duration\n) {\n  @return functions2.exit-temporary($property, $duration, $delay);\n}\n\n// Manual calculation done on SVG\n$mark-path-length_: 29.7833385 !default;\n$indeterminate-checked-easing-function_: cubic-bezier(0.14, 0, 0, 1) !default;\n\n@mixin mark-keyframes_ {\n  @keyframes mdc-checkbox-unchecked-checked-checkmark-path {\n    0%,\n    50% {\n      stroke-dashoffset: $mark-path-length_;\n    }\n\n    50% {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n    }\n\n    100% {\n      stroke-dashoffset: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-unchecked-indeterminate-mixedmark {\n    0%,\n    68.2% {\n      transform: scaleX(0);\n    }\n\n    68.2% {\n      animation-timing-function: cubic-bezier(0, 0, 0, 1);\n    }\n\n    100% {\n      transform: scaleX(1);\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-unchecked-checkmark-path {\n    from {\n      animation-timing-function: animation-variables.$acceleration-curve-timing-function;\n      opacity: 1;\n      stroke-dashoffset: 0;\n    }\n\n    to {\n      opacity: 0;\n      stroke-dashoffset: $mark-path-length_ * -1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-checkmark {\n    from {\n      animation-timing-function: animation-variables.$deceleration-curve-timing-function;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-checkmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(360deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-checked-indeterminate-mixedmark {\n    from {\n      animation-timing-function: mdc-animation-deceleration-curve-timing-function;\n      transform: rotate(-45deg);\n      opacity: 0;\n    }\n\n    to {\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-checked-mixedmark {\n    from {\n      animation-timing-function: $indeterminate-checked-easing-function_;\n      transform: rotate(0deg);\n      opacity: 1;\n    }\n\n    to {\n      transform: rotate(315deg);\n      opacity: 0;\n    }\n  }\n\n  @keyframes mdc-checkbox-indeterminate-unchecked-mixedmark {\n    0% {\n      animation-timing-function: linear;\n      transform: scaleX(1);\n      opacity: 1;\n    }\n\n    32.8%,\n    100% {\n      transform: scaleX(0);\n      opacity: 0;\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/elevation/elevation';\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/touch-target/touch-target';\n@use '@material/focus-ring/focus-ring';\n@use '@material/typography/typography';\n@use './button-shared-theme';\n\n@mixin static-styles($query: feature-targeting.all()) {\n  @include _static-styles-base($query: $query);\n  @include _typography-styles($query: $query);\n}\n\n@mixin _static-styles-base($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include touch-target.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  // postcss-bem-linter: define button\n  .mdc-button {\n    @include _root-structure($query);\n    // The icon CSS class overrides styles defined in the .material-icons CSS\n    // class, which is loaded separately so the order of CSS definitions is not\n    // guaranteed. Therefore, increase specifity by nesting this class to ensure\n    // overrides apply.\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include _icon-structure;\n      }\n    }\n\n    .mdc-button__progress-indicator {\n      @include feature-targeting.targets($feat-structure) {\n        font-size: 0;\n        position: absolute;\n        transform: translate(-50%, -50%);\n        top: 50%;\n        left: 50%;\n        line-height: initial;\n      }\n    }\n\n    .mdc-button__label {\n      @include feature-targeting.targets($feat-structure) {\n        // Necessary such that label is stacked on top of ripple\n        // (since ripple is a positioned element, non-positioned elements\n        // appear under it).\n        position: relative;\n      }\n    }\n\n    .mdc-button__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n      @include feature-targeting.targets($feat-structure) {\n        display: none;\n      }\n    }\n\n    @include ripple-theme.focus {\n      .mdc-button__focus-ring {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include feature-targeting.targets($feat-structure) {\n            display: block;\n          }\n        }\n      }\n    }\n\n    .mdc-button__touch {\n      @include touch-target.touch-target($query: $query);\n    }\n  }\n\n  .mdc-button__label + .mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-trailing;\n    }\n  }\n\n  svg.mdc-button__icon {\n    @include feature-targeting.targets($feat-structure) {\n      @include icon-svg;\n    }\n  }\n\n  .mdc-button--touch {\n    // Touch target doesn't change with height. It simply gets removed if\n    // density (height) changes. Therefore, it is a static style.\n    @include touch-target.margin(\n      $component-height: button-shared-theme.$height,\n      $query: $query\n    );\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin _typography-styles($query) {\n  .mdc-button {\n    // Exclude properties declared in theme styles.\n    @include typography.typography(\n      button,\n      $exclude-props: (\n        font-size,\n        line-height,\n        font-weight,\n        letter-spacing,\n        text-transform\n      ),\n      $query: $query\n    );\n  }\n}\n\n/// @deprecated Contains typography declarations now part of theme-styles.\n@mixin deprecated-static-styles-without-ripple(\n  $query: feature-targeting.all()\n) {\n  @include _deprecated-typography-styles($query: $query);\n  @include _static-styles-base($query: $query);\n}\n\n@mixin _deprecated-typography-styles($query) {\n  .mdc-button {\n    @include typography.typography(button, $query);\n  }\n}\n\n@mixin deprecated-base($query) {\n  @include base($query);\n}\n\n@mixin base($query) {\n  @include typography.typography(button, $query);\n  @include _root-structure($query: $query);\n}\n\n@mixin _root-structure($query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    // position: relative; already set in mdc-elevation-overlay-surface-position\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    min-width: 64px;\n    border: none;\n    outline: none;\n    /* @alternate */\n    line-height: inherit;\n    user-select: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    vertical-align: middle;\n    background: transparent;\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  // postcss-bem-linter: ignore\n  &:active {\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  &:disabled {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: default;\n      pointer-events: none;\n    }\n  }\n\n  &[hidden] {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n@mixin icon {\n  @include _icon-structure;\n  @include _icon-size(18px);\n}\n\n@mixin _icon-structure {\n  @include rtl.reflexive-box(margin, right, 8px);\n\n  display: inline-block;\n  position: relative;\n  vertical-align: top;\n}\n\n@mixin _icon-size($size-px) {\n  $icon-size: typography.px-to-rem($size-px);\n\n  font-size: $icon-size;\n  height: $icon-size;\n  width: $icon-size;\n}\n\n@mixin icon-trailing {\n  @include rtl.reflexive-box(margin, left, 8px);\n}\n\n@mixin icon-svg {\n  fill: currentColor;\n}\n\n@mixin icon-contained {\n  @include rtl.reflexive-property(margin, -4px, 8px);\n}\n\n@mixin icon-contained-trailing {\n  @include rtl.reflexive-property(margin, 8px, -4px);\n}\n\n@mixin raised-transition($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: elevation-theme.transition-value();\n  }\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon {\n  @include icon;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-trailing {\n  @include icon-trailing;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-svg {\n  @include icon-svg;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained {\n  @include icon-contained;\n}\n\n/// @deprecated Private style mixin for partners; not available for public use.\n@mixin deprecated-icon-contained-trailing {\n  @include icon-contained-trailing;\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use 'sass:map';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/dom/dom';\n@use '@material/theme/keys';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n\n$ripple-target: '.mdc-icon-button__ripple';\n\n$icon-size: 24px !default;\n$size: 48px !default;\n$minimum-height: 28px !default;\n$maximum-height: $size !default;\n$container-shape: 50%;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  size: (\n    default: $size,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$_custom-property-prefix: 'icon-button';\n\n$light-theme: (\n  disabled-icon-color: theme-color.$on-surface,\n  disabled-icon-opacity: 0.38,\n  icon-color: theme-color.$primary,\n  icon-size: $icon-size,\n  focus-icon-color: theme-color.$primary,\n  focus-state-layer-color: theme-color.$primary,\n  focus-state-layer-opacity: 0.12,\n  hover-icon-color: theme-color.$primary,\n  hover-state-layer-color: theme-color.$primary,\n  hover-state-layer-opacity: 0.08,\n  pressed-icon-color: theme-color.$primary,\n  pressed-state-layer-color: theme-color.$primary,\n  pressed-state-layer-opacity: 0.12,\n  state-layer-size: $size,\n);\n\n@mixin theme($theme) {\n  @include theme.validate-theme($light-theme, $theme);\n\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n@mixin theme-styles($theme) {\n  @include theme.validate-theme-styles($light-theme, $theme);\n\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _state-layer-size($size: map.get($theme, state-layer-size));\n  @include _icon-size(map.get($theme, icon-size));\n  @include _disabled-icon-opacity(map.get($theme, disabled-icon-opacity));\n  @include _icon-color-with-map(\n    (\n      default: map.get($theme, icon-color),\n      disabled: map.get($theme, disabled-icon-color),\n      focus: map.get($theme, focus-icon-color),\n      hover: map.get($theme, hover-icon-color),\n      pressed: map.get($theme, pressed-icon-color),\n    )\n  );\n\n  // States styles\n  @include ripple-theme.theme-styles(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    ),\n    $ripple-target: $ripple-target\n  );\n}\n\n///\n/// Sets the density scale for icon button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values range from `-5` to `0`, with `0` being the default.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $size: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: size,\n  );\n\n  @include size($size, $query: $query);\n}\n\n///\n/// Sets the size of the icon-button.\n///\n/// @param {Number} $size - Size value for icon-button.\n///     Size will set the width, height, and padding for the overall component.\n///\n@mixin size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $size;\n    height: $size;\n    padding: calc(($size - $icon-size) / 2);\n  }\n\n  .mdc-icon-button__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      max-height: $size;\n      max-width: $size;\n    }\n  }\n\n  &.mdc-icon-button--reduced-size {\n    $component-size: $size;\n    // Icon button ripple size is capped at 40px for icon buttons with\n    // densities -1 and 0 (icon buttons with sizes 44x44 and 48x48px).\n    // See http://b/192353968 for more info.\n    @if math.unit($size) == 'px' and ($size >= 40px and $size <= 48px) {\n      $component-size: 40px;\n    }\n\n    .mdc-icon-button__ripple {\n      @include feature-targeting.targets($feat-structure) {\n        width: $component-size;\n        height: $component-size;\n      }\n\n      @include touch-target-mixins.margin(\n        $component-height: $component-size,\n        $component-width: $component-size,\n        $touch-target-height: $size,\n        $touch-target-width: $size,\n        $query: $query\n      );\n    }\n\n    .mdc-icon-button__focus-ring {\n      @include feature-targeting.targets($feat-structure) {\n        max-height: $component-size;\n        max-width: $component-size;\n      }\n    }\n  }\n\n  .mdc-icon-button__touch {\n    @include touch-target-mixins.touch-target(\n      $set-width: true,\n      $query: $query,\n      $height: $size,\n      $width: $size\n    );\n  }\n}\n\n///\n/// Sets the width, height and padding of icon button. Also changes the size of\n/// the icon itself based on button size.\n///\n/// @param {Number} $width - Width value for icon-button.\n/// @param {Number} $height - Height value for icon-button. (default: $width)\n/// @param {Number} $padding - Padding value for icon-button. (default: max($width, $height) / 2)\n/// @deprecated\n///     This mixin provides too much of low level customization.\n///     Please use mdc-icon-button-size instead.\n///\n@mixin icon-size(\n  $width,\n  $height: $width,\n  $padding: math.div(math.max($width, $height), 2),\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  $component-width: $width + $padding * 2;\n  $component-height: $height + $padding * 2;\n\n  @include feature-targeting.targets($feat-structure) {\n    width: $component-width;\n    height: $component-height;\n    padding: $padding;\n    font-size: math.max($width, $height);\n  }\n\n  svg,\n  img {\n    @include feature-targeting.targets($feat-structure) {\n      width: $width;\n      height: $height;\n    }\n  }\n}\n\n///\n/// Sets the font color and the ripple color to the provided color value.\n/// @param {Color} $color - The desired font and ripple color.\n///\n@mixin ink-color($color, $query: feature-targeting.all()) {\n  @if $color {\n    @include ink-color_($color, $query: $query);\n    @include ripple-theme.states(\n      $color,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Flips icon only in RTL context.\n///\n@mixin flip-icon-in-rtl($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-button__icon {\n    @include rtl.rtl {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.ignore-next-line();\n        transform: rotate(180deg);\n      }\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value for a disabled icon button.\n/// @param {Color} $color - The desired font color.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include if-disabled_ {\n    @include ink-color_($color, $query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // TODO(b/175806874): Use the DOM border mixin after the ripple is moved\n    // away from :before to a dedicated element.\n    outline: solid 3px transparent;\n\n    &:focus {\n      outline: double 5px transparent;\n    }\n  }\n}\n\n///\n/// Sets the font color to the provided color value. This can be wrapped in\n/// a state qualifier such as `mdc-icon-button-if-disabled_`.\n/// @access private\n///\n@mixin ink-color_($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @include theme.property(color, $color);\n  }\n}\n\n@mixin _state-layer-size($size) {\n  @include theme.property(height, $size);\n  @include theme.property(width, $size);\n}\n\n@mixin _icon-size($size) {\n  .mdc-button__icon {\n    @include theme.property(font-size, $size);\n  }\n  svg,\n  img {\n    @include theme.property(width, $size);\n    @include theme.property(height, $size);\n  }\n}\n\n///\n/// Sets the icon opacity to the given opacity.\n/// @access private\n///\n@mixin _disabled-icon-opacity($opacity) {\n  &:disabled {\n    @include theme.property(opacity, $opacity);\n  }\n}\n\n///\n/// Sets the icon color to the given color.\n/// @param {map} $color-map - The desired icon color, specified as a map of\n///     colors with states {default, disabled, focus, hover, pressed} as keys.\n/// @access private\n///\n@mixin _icon-color-with-map($color-map) {\n  @include ink-color_(state.get-default-state($color-map));\n\n  $disabled: state.get-disabled-state($color-map);\n  @if $disabled {\n    &:disabled {\n      @include ink-color_($disabled);\n    }\n  }\n\n  $focus: state.get-focus-state($color-map);\n  @if $focus {\n    @include ripple-theme.focus {\n      @include ink-color_($focus);\n    }\n  }\n\n  $hover: state.get-hover-state($color-map);\n  @if $hover {\n    &:hover {\n      @include ink-color_($hover);\n    }\n  }\n\n  $pressed: state.get-pressed-state($color-map);\n  @if $pressed {\n    @include ripple-theme.active {\n      @include ink-color_($pressed);\n    }\n  }\n}\n\n@mixin _states-colors($color-map) {\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  $hover: map.get($color-map, hover);\n  @if $hover {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Helps style the icon button in its disabled state.\n/// @access private\n///\n@mixin if-disabled_ {\n  &:disabled {\n    @content;\n  }\n}\n","//\n// Copyright 2019 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:math';\n@use '@material/base/mixins' as base-mixins;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/theme/custom-properties';\n\n$height: 48px !default;\n$width: $height !default;\n\n/// Styles applied to the component's touch target wrapper element.\n@mixin wrapper($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-touch-target-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      // Ensure that styles are only emitted once across all components that\n      // have increased touch targets.\n      @include base-mixins.emit-once('mdc-touch-target/wrapper') {\n        // NOTE: Will change to `inline-block` in the future, but keeping as is\n        // temporarily for backwards-compatibility.\n        display: inline;\n      }\n    }\n  }\n}\n\n/// Styles applied to the component's inner touch target element.\n/// By default, only sets the inner element height to the minimum touch target\n/// height ($mdc-touch-target-height).\n/// @param {Boolean} $set-width [false] - Sets the inner element width to the\n///     minimum touch target width ($mdc-touch-target-width).\n/// @param $height [$mdc-touch-target-height] - Touch target height.\n/// @param $width [$mdc-touch-target-width] - Touch target width.\n@mixin touch-target(\n  $set-width: false,\n  $query: feature-targeting.all(),\n  $height: $height,\n  $width: $width\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    position: absolute;\n    top: 50%;\n    height: $height;\n  }\n\n  @if $set-width {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.ignore-next-line();\n      left: 50%;\n      width: $width;\n      transform: translate(-50%, -50%);\n    }\n  } @else {\n    @include feature-targeting.targets($feat-structure) {\n      left: 0;\n      right: 0;\n      transform: translateY(-50%);\n    }\n  }\n}\n\n/// Applies margin to the component with the increased touch target,\n/// to compensate for the touch target.\n@mixin margin(\n  $component-height,\n  $component-width: null,\n  $touch-target-height: $height,\n  $touch-target-width: $width,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @if keys.is-key($touch-target-height) or\n      keys.is-key($component-height) or\n      custom-properties.is-custom-prop($touch-target-height) or\n      custom-properties.is-custom-prop($component-height)\n    {\n      // Custom properties\n      @include theme.property(\n        margin-top,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n      @include theme.property(\n        margin-bottom,\n        'max((touch-target-height - component-height) / 2, 0px)',\n        $replace: (\n          component-height: $component-height,\n          touch-target-height: $touch-target-height\n        )\n      );\n    } @else {\n      // Static values\n      $vertical-margin-value: math.div(\n        $touch-target-height - $component-height,\n        2\n      );\n      margin-top: $vertical-margin-value;\n      margin-bottom: $vertical-margin-value;\n    }\n  }\n\n  @if $component-width {\n    @include feature-targeting.targets($feat-structure) {\n      @if keys.is-key($touch-target-width) or\n        keys.is-key($component-width) or\n        custom-properties.is-custom-prop($touch-target-width) or\n        custom-properties.is-custom-prop($component-width)\n      {\n        // Custom properties\n        @include theme.property(\n          margin-right,\n          'max((touch-target-width - component-width) / 2, 0px)',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n        @include theme.property(\n          margin-left,\n          'max((touch-target-width - component-width) / 2), 0px',\n          $replace: (\n            component-width: $component-width,\n            touch-target-width: $touch-target-width\n          )\n        );\n      } @else {\n        // Static values\n        $horizontal-margin-value: math.div(\n          $touch-target-width - $component-width,\n          2\n        );\n        margin-right: $horizontal-margin-value;\n        margin-left: $horizontal-margin-value;\n      }\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n@use 'sass:list';\n@use 'sass:map';\n@use 'sass:meta';\n\n/// Adds optional GSS annotation comments. Useful for theme mixins where one or\n/// more properties are set indirectly.\n///\n/// Annotations may be provided as a Map of annotations or as named arguments.\n///\n/// @example - scss\n///   @include annotate((noflip: true));\n///   left: 0;\n///\n/// @example - scss\n///   @include annotate($noflip: true);\n///   left: 0;\n///\n/// @example - css\n///   /* @noflip */ /*rtl:ignore*/\n///   left: 0;\n///\n/// @param {Map} $annotations - Map of annotations. Values must be set to `true`\n///     for an annotation to be added.\n@mixin annotate($annotations...) {\n  $keywords: meta.keywords($annotations);\n  @if list.length($annotations) > 0 {\n    $annotations: list.nth($annotations, 1);\n  } @else {\n    $annotations: $keywords;\n  }\n\n  @if (map.get($annotations, alternate) == true) {\n    /* @alternate */\n  }\n\n  // noflip must be the last tag right before the property\n  @if (map.get($annotations, noflip) == true) {\n    /* @noflip */ /*rtl:ignore*/\n  }\n}\n","// Copyright 2016 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use '@material/animation/functions' as animation-functions;\n@use '@material/elevation/elevation-theme';\n@use '@material/elevation/elevation';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/ripple/ripple';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/shape/functions' as shape-functions;\n@use '@material/theme/css';\n@use '@material/theme/custom-properties';\n@use '@material/theme/replace';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/theme/theme';\n@use '@material/touch-target/mixins' as touch-target-mixins;\n@use '@material/typography/typography';\n@use './fab-custom-properties';\n@use './extended-fab-theme';\n@use './fab-theme';\n@use 'sass:math';\n@use 'sass:list';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  @include without-ripple($query);\n  @include ripple($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  // postcss-bem-linter: define fab\n\n  @include touch-target-mixins.wrapper($query); // COPYBARA_COMMENT_THIS_LINE\n  // prettier-ignore\n  @include elevation.overlay-common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include base_($query: $query);\n  }\n\n  .mdc-fab--mini {\n    @include mini_($query: $query);\n  }\n\n  .mdc-fab--extended {\n    @include extended_($query: $query);\n  }\n\n  .mdc-fab--touch {\n    @include touch-target-mixins.margin(\n      $component-height: fab-theme.$mini-height,\n      $component-width: fab-theme.$mini-height,\n      $query: $query\n    );\n\n    .mdc-fab__touch {\n      @include touch-target-mixins.touch-target(\n        $set-width: true,\n        $query: $query\n      );\n    }\n  }\n\n  .mdc-fab::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n\n  .mdc-fab__label {\n    @include label_($query: $query);\n  }\n\n  .mdc-fab__icon {\n    @include icon_($query: $query);\n  }\n\n  // Increase specificity for FAB icon styles that need to override styles defined for .material-icons\n  // (which is loaded separately so the order of CSS definitions is not guaranteed)\n  .mdc-fab .mdc-fab__icon {\n    @include icon-overrides_($query: $query);\n  }\n\n  .mdc-fab--exited {\n    @include exited_($query: $query);\n  }\n  // postcss-bem-linter: end\n}\n\n@mixin without-ripple($query: feature-targeting.all()) {\n  @include static-styles($query: $query);\n\n  .mdc-fab {\n    @include fab-theme.container-color(secondary, $query: $query);\n    @include fab-theme.icon-size(24px, $query: $query);\n    @include fab-theme.ink-color(on-secondary, $query: $query);\n    @include fab-theme.shape-radius(fab-theme.$shape-radius, $query: $query);\n    @include elevation-theme.elevation(6, $query: $query);\n  }\n}\n\n@mixin ripple($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include ripple.common($query); // COPYBARA_COMMENT_THIS_LINE\n\n  .mdc-fab {\n    @include ripple.surface(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    @include ripple.radius-bounded(\n      $query: $query,\n      $ripple-target: fab-theme.$ripple-target\n    );\n    // Set `$opacity-map` to null to apply default opacity-map.\n    @include fab-theme.ripple-color(\n      on-secondary,\n      $opacity-map: null,\n      $query: $query\n    );\n\n    #{fab-theme.$ripple-target} {\n      @include ripple.target-common($query: $query);\n\n      @include feature-targeting.targets($feat-structure) {\n        overflow: hidden;\n      }\n    }\n    @include ripple-theme.behind-content(\n      fab-theme.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n$icon-enter-delay_: 90ms;\n$icon-enter-duration_: 180ms;\n\n@mixin base_($query: feature-targeting.all()) {\n  @include elevation-theme.overlay-surface-position($query: $query);\n  @include elevation-theme.overlay-dimensions(100%, $query: $query);\n\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    position: relative;\n    align-items: center;\n    justify-content: center;\n    box-sizing: border-box;\n    width: fab-theme.$height;\n    height: fab-theme.$height;\n    padding: 0;\n    border: none;\n    fill: currentColor;\n    text-decoration: none;\n    cursor: pointer;\n    user-select: none;\n    -moz-appearance: none;\n    -webkit-appearance: none;\n    // Even though `visible` is the default, IE 11 computes the property as\n    // `hidden` in some cases, unless it's explicitly defined here.\n    overflow: visible;\n    &[hidden] {\n      display: none;\n    }\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: box-shadow elevation-theme.$transition-duration\n        elevation-theme.$transition-timing-function,\n      opacity 15ms linear 30ms,\n      animation-functions.enter(\n        transform,\n        $icon-enter-duration_ + $icon-enter-delay_\n      );\n  }\n\n  &::-moz-focus-inner {\n    @include feature-targeting.targets($feat-structure) {\n      padding: 0;\n      border: 0;\n    }\n  }\n\n  &:hover {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  @include ripple-theme.focus() {\n    @include elevation-theme.elevation(8, $query: $query);\n  }\n\n  .mdc-fab__focus-ring {\n    @include feature-targeting.targets($feat-structure) {\n      position: absolute;\n    }\n  }\n\n  @include ripple-theme.focus() {\n    .mdc-fab__focus-ring {\n      @include focus-ring.focus-ring($query: $query);\n    }\n  }\n\n  // Increase active state specificity due to ripple-theme.focus().\n  &:active,\n  &:focus:active {\n    @include elevation-theme.elevation(12, $query: $query);\n  }\n\n  &:active,\n  &:focus {\n    // TODO(acdvorak): Should this be paired with states and/or ripple? We don't want to disable outline\n    // (an accessibility/usability feature) unless we're confident that there is also a visual indication that the\n    // element has focus. If the client has customized the DOM in some unexpected way, and is certain that another\n    // element will receive focus instead, they can always override this property manually in their CSS.\n    @include feature-targeting.targets($feat-structure) {\n      outline: none;\n    }\n  }\n\n  &:hover {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  // stylelint-disable selector-max-type --\n  // This allows for using SVGs within them to align properly in all browsers.\n  // Can remove once: https://bugzilla.mozilla.org/show_bug.cgi?id=1294515 is resolved.\n\n  // postcss-bem-linter: ignore\n  > svg {\n    @include feature-targeting.targets($feat-structure) {\n      width: 100%;\n    }\n  }\n  // stylelint-enable selector-max-type\n}\n\n@mixin mini_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: fab-theme.$mini-height;\n    height: fab-theme.$mini-height;\n  }\n}\n\n@mixin extended_($query: feature-targeting.all()) {\n  @include typography.typography(button, $query: $query);\n  @include extended-fab-theme.extended-shape-radius(\n    fab-theme.$shape-radius,\n    $query: $query\n  );\n  $extended-icon-padding: custom-properties.create(\n    fab-custom-properties.$extended-icon-padding,\n    extended-fab-theme.$extended-icon-padding\n  );\n  $extended-label-padding: custom-properties.create(\n    fab-custom-properties.$extended-label-padding,\n    extended-fab-theme.$extended-label-padding\n  );\n  @include extended-fab-theme.extended-padding(\n    extended-fab-theme.$extended-icon-padding,\n    extended-fab-theme.$extended-label-padding,\n    $query: $query\n  );\n\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    width: auto;\n    max-width: 100%;\n    height: extended-fab-theme.$extended-height;\n    // This allows the text within the extended fab to be centered for varying font sizes.\n    /* @alternate */\n    line-height: normal;\n  }\n}\n\n@mixin icon_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: animation-functions.enter(\n      transform,\n      $icon-enter-duration_,\n      $icon-enter-delay_\n    );\n  }\n\n  @include feature-targeting.targets($feat-structure) {\n    fill: currentColor;\n    will-change: transform;\n  }\n}\n\n@mixin label_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    justify-content: flex-start;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n    overflow-x: hidden;\n    overflow-y: visible;\n  }\n}\n\n@mixin icon-overrides_($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n@mixin exited_($query: feature-targeting.all()) {\n  $feat-animation: feature-targeting.create-target($query, animation);\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    transform: scale(0);\n    opacity: 0;\n  }\n\n  @include feature-targeting.targets($feat-animation) {\n    transition: opacity 15ms linear 150ms,\n      animation-functions.exit-permanent(transform, 180ms);\n  }\n\n  .mdc-fab__icon {\n    @include feature-targeting.targets($feat-structure) {\n      transform: scale(0);\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: animation-functions.exit-permanent(transform, 135ms);\n    }\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-data-table__cell {\n    @include typography.typography(body2, $query: $query);\n  }\n\n  @include static-styles($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-typography: feature-targeting.create-target($query, typography);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__cell {\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      overflow: hidden;\n      text-align: left;\n      text-overflow: ellipsis;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__cell--checkbox {\n    @include adaptive-width($query: $query);\n  }\n}\n\n@mixin adaptive-width($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // Set to lowest width to adapt to cell content. Cell width should adapt\n    // to row checkbox size when it is dense.\n    // NOTE: `min-width` does not seem to work on table cells.\n    width: 1px;\n  }\n}\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// NOTE: We disable `selector-class-pattern` above to allow using `mdc-` class\n// selectors.\n\n@use 'sass:list';\n@use '@material/animation/functions';\n@use '@material/density/functions' as density-functions;\n@use '@material/dom/mixins' as dom;\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/icon-button/icon-button-theme';\n@use '@material/rtl/rtl';\n@use '@material/typography/typography';\n@use './data-table-theme';\n@use './data-table-cell';\n\n@mixin core-styles($query: feature-targeting.all()) {\n  .mdc-data-table__header-cell {\n    @include typography.typography(subtitle2, $query: $query);\n  }\n\n  @include static-styles($query);\n}\n\n@mixin static-styles($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  $feat-animation: feature-targeting.create-target($query, animation);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      box-sizing: border-box;\n      text-overflow: ellipsis;\n      overflow: hidden;\n      outline: none;\n\n      @include rtl.ignore-next-line();\n      text-align: left;\n\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: right;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell--checkbox {\n    @include data-table-cell.adaptive-width($query: $query);\n  }\n\n  .mdc-data-table__header-cell--numeric {\n    @include feature-targeting.targets($feat-structure) {\n      text-align: right;\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.rtl {\n        @include rtl.ignore-next-line();\n        text-align: left;\n      }\n    }\n  }\n\n  .mdc-data-table__sort-icon-button {\n    @include icon-button-theme.density(\n      $density-scale: data-table-theme.$sort-icon-density-scale,\n      $query: $query\n    );\n\n    @include feature-targeting.targets($feat-structure) {\n      // Apply dummy `transform` to avoid pixel shift on sort down animation.\n      transform: rotate(0.0001deg);\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-box(margin, left, 4px);\n    }\n\n    .mdc-data-table__header-cell--numeric & {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-box(margin, right, 4px);\n      }\n    }\n\n    @include feature-targeting.targets($feat-animation) {\n      transition: functions.standard(transform, $duration: 150ms);\n    }\n\n    .mdc-data-table__header-cell--sorted-descending & {\n      @include feature-targeting.targets($feat-structure) {\n        transform: rotate(-180deg);\n      }\n    }\n\n    @include feature-targeting.targets($feat-structure) {\n      opacity: 0;\n    }\n\n    &:focus,\n    .mdc-data-table__header-cell:hover &,\n    .mdc-data-table__header-cell--sorted & {\n      @include feature-targeting.targets($feat-structure) {\n        opacity: 1;\n      }\n    }\n  }\n\n  .mdc-data-table__header-cell-wrapper {\n    @include feature-targeting.targets($feat-structure) {\n      align-items: center;\n      display: inline-flex;\n      vertical-align: middle;\n    }\n  }\n\n  .mdc-data-table__header-cell--with-sort {\n    @include feature-targeting.targets($feat-structure) {\n      cursor: pointer;\n    }\n  }\n\n  .mdc-data-table__sort-status-label {\n    @include dom.visually-hidden($query: $query);\n  }\n}\n\n/// Sets header cell in sticky position on table content vertical scroll.\n@mixin header-cell-sticky($query: $query) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-data-table__header-cell {\n    @include feature-targeting.targets($feat-structure) {\n      position: sticky;\n      top: 0;\n      z-index: 1;\n    }\n  }\n}\n","@use '../core/theming/theming';\n@use '../core/typography/typography';\n@use '../core/typography/typography-utils';\n@use '../core/style/list-common';\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin color($config-or-theme) {}\n\n@mixin typography($config-or-theme) {\n  $config: typography.private-typography-to-2014-config(\n      theming.get-typography-config($config-or-theme));\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include list-common.base(typography-utils.font-size($config, caption));\n    font-size: typography-utils.font-size($config, body-1);\n  }\n}\n\n@mixin density($config-or-theme) {}\n\n@mixin theme($theme-or-color-config) {\n  $theme: theming.private-legacy-get-theme($theme-or-color-config);\n  @include theming.private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: theming.get-color-config($theme);\n    $density: theming.get-density-config($theme);\n    $typography: theming.get-typography-config($theme);\n\n    @if $color != null {\n      @include color($color);\n    }\n    @if $density != null {\n      @include density($density);\n    }\n    @if $typography != null {\n      @include typography($typography);\n    }\n  }\n}\n","// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin base($secondary-font-size) {\n  .mat-line {\n    @include truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin wrapper-base() {\n  @include normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n",".horizontal-layout {\r\n  // Workaround: CSS calc() functions can't deal with values without a unit (e.g. 0 instead of 0px), when this is 0, SCSS or PostCSS make it a 0 instead of 0px, breaking the layout.\r\n  --navigation-height: 0.00001px;\r\n  --toolbar-width: 100%;\r\n\r\n  @screen lg {\r\n    --toolbar-width: calc(100% - var(--sidenav-width));\r\n\r\n    &.sidenav-collapsed {\r\n      --toolbar-width: calc(100% - var(--sidenav-collapsed-width));\r\n    }\r\n  }\r\n\r\n  .sidenav-container {\r\n    /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\r\n       causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\r\n    flex: 1;\r\n  }\r\n\r\n  &.has-fixed-footer {\r\n    &.scroll-disabled .content {\r\n      height: calc(100% - var(--toolbar-height) - var(--footer-height));\r\n    }\r\n  }\r\n}\r\n\r\n@screen lg {\r\n  body:not([dir=\"rtl\"]) {\r\n    .horizontal-layout {\r\n      &.sidenav-collapsed .sidenav-content {\r\n        margin-left: var(--sidenav-collapsed-width) !important;\r\n        margin-right: 0 !important;\r\n      }\r\n\r\n      &:not(.sidenav-collapsed) .sidenav-content {\r\n        margin-left: var(--sidenav-width) !important;\r\n        margin-right: 0 !important;;\r\n      }\r\n    }\r\n  }\r\n\r\n  [dir=\"rtl\"] {\r\n    .horizontal-layout {\r\n      &.sidenav-collapsed .sidenav-content {\r\n        margin-right: var(--sidenav-collapsed-width) !important;\r\n        margin-left: 0 !important;\r\n      }\r\n\r\n      &:not(.sidenav-collapsed) .sidenav-content {\r\n        margin-right: var(--sidenav-width) !important;\r\n        margin-left: 0 !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/** SCROLLBARS */\nbody.is-blink {\n  ::-webkit-scrollbar {\n    background-color: rgba(0, 0, 0, 0);\n    height: var(--blink-scrollbar-width);\n    width: var(--blink-scrollbar-width);\n  }\n\n  ::-webkit-scrollbar:hover {\n    background-color: rgba(0, 0, 0, 0.12);\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border: 2px solid transparent;\n    border-radius: var(--blink-scrollbar-width);\n    box-shadow: inset 0 0 0 12px rgba(0, 0, 0, 0.37);\n  }\n\n  ::-webkit-scrollbar-thumb:active {\n    border-radius: var(--blink-scrollbar-width);\n    box-shadow: inset 0 0 0 12px rgba(0, 0, 0, 0.54);\n  }\n}\n\n/** SCROLLBLOCK */\n.vex-scrollblock {\n  position: fixed;\n  width: 100%;\n}\n\n/** GLOSSY DIALOG */\n.vex-dialog-glossy .mat-mdc-dialog-container {\n  @apply rounded;\n}\n\n.is-blink {\n  .vex-dialog-glossy .mat-mdc-dialog-container .mdc-dialog__surface {\n    backdrop-filter: saturate(180%) blur(20px);\n    @apply bg-foreground/60;\n  }\n}\n\n",".vertical-layout {\r\n  --toolbar-width: 100%;\r\n\r\n  vex-secondary-toolbar {\r\n\r\n    .h-14 {\r\n      display: none;\r\n    }\r\n\r\n    .fixed {\r\n      background: none;\r\n      border-top: none;\r\n      box-shadow: none;\r\n      margin-bottom: calc(var(--padding-16) * -1);\r\n      padding-top: var(--padding-12);\r\n      position: relative;\r\n      top: 0;\r\n    }\r\n  }\r\n\r\n  &.content-container > .sidenav-container > .sidenav-content > .content {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n\r\n  &.has-fixed-footer {\r\n    &.scroll-disabled .content {\r\n      height: calc(100% - var(--toolbar-height) - var(--footer-height));\r\n    }\r\n  }\r\n}\r\n","@media print {\r\n  html, body {\r\n    height: auto !important;\r\n    overflow: initial !important;\r\n  }\r\n\r\n  .vex-toolbar, .sidenav {\r\n    display: none !important;\r\n  }\r\n\r\n  .content {\r\n    margin-top: 0 !important;\r\n  }\r\n\r\n  .mat-drawer-container {\r\n    overflow: visible !important;\r\n  }\r\n\r\n  .mat-drawer-side {\r\n    border-right: none !important;\r\n  }\r\n\r\n  .sidenav-content {\r\n    margin-left: 0 !important;\r\n    @apply bg-foreground;\r\n  }\r\n\r\n  .vex-footer {\r\n    display: none !important;\r\n  }\r\n\r\n  .config-panel-toggle {\r\n    display: none !important;\r\n  }\r\n}\r\n","@use '@angular/material' as mat;\n// Typography\n\n/*\n  InterDynamicTracking takes the font size in points\n  or pixels and returns the compensating tracking in EM.\n  function InterDynamicTracking(fontSize) {\n    const a = -0.0223\n    const b = 0.185\n    const c = -0.1745;\n    // tracking = a + b * e ^ (c * fontSize)\n    return a + b * Math.pow(Math.E, c * fontSize)\n  }\n*/\n\n.display-4 {\n  @include mat.typography-level($config, headline-1);\n}\n\n.display-3 {\n  @include mat.typography-level($config, headline-2);\n}\n\n.display-2 {\n  @include mat.typography-level($config, headline-3);\n}\n\n.display-1, h1 {\n  @include mat.typography-level($config, headline-4);\n}\n\n.headline, h2 {\n  @include mat.typography-level($config, headline-5);\n}\n\n.title, h3 {\n  @include mat.typography-level($config, headline-6);\n}\n\n.subheading-2, h4 {\n  @include mat.typography-level($config, subtitle-1);\n}\n\n.subheading-1, h5 {\n  @include mat.typography-level($config, subtitle-2);\n}\n\n.body-2, h6 {\n  @include mat.typography-level($config, body-2);\n}\n\n.body-1, p {\n  @include mat.typography-level($config, body-1);\n}\n\n.caption {\n  @include mat.typography-level($config, caption);\n}\n\n.text-xs {\n  letter-spacing: 0;\n}\n\n.text-sm {\n  letter-spacing: -0.009em;\n}\n\n.text-base {\n  letter-spacing: -0.011em;\n}\n\n.text-lg {\n  letter-spacing: -0.014em;\n}\n\n.text-2xl {\n  letter-spacing: -0.019em;\n}\n\n.text-3xl {\n  letter-spacing: -0.021em;\n}\n",":root {\n  .mat-mdc-raised-button, .mat-mdc-unelevated-button, .mat-mdc-fab, .mat-mdc-mini-fab {\n    &:not(:disabled):not(.mat-unthemed) {\n      @apply text-primary-contrast;\n    }\n  }\n\n  .mat-mdc-button, .mat-mdc-outlined-button, .mat-mdc-unelevated-button, .mat-mdc-raised-button {\n    @apply rounded-button min-w-[6rem];\n  }\n\n  .mat-button-toggle-group:not(.mat-button-toggle-vertical) {\n    @apply rounded-button;\n\n    .mat-button-toggle:first-child .mat-button-toggle-label-content {\n      @apply pl-4;\n    }\n\n    .mat-button-toggle:last-child .mat-button-toggle-label-content {\n      @apply pr-4;\n    }\n  }\n\n  .mat-button-toggle-button {\n    @apply font-medium;\n  }\n\n  .mat-mdc-icon-button {\n    .mat-icon {\n      @apply inline-flex items-center justify-center;\n    }\n  }\n}\n",".mat-mdc-checkbox {\n  &.mat-primary {\n    --mdc-checkbox-selected-checkmark-color: theme('textColor.primary-contrast');\n  }\n}\n",":root {\n  .mat-mdc-dialog-container .mdc-dialog__surface {\n    @apply rounded-lg;\n  }\n\n  .mat-mdc-dialog-title {\n    @apply pt-3;\n  }\n\n  /** Reset default height placeholder */\n  .mdc-dialog__title::before {\n    content: none;\n    height: auto;\n  }\n}\n",".mdc-notched-outline__notch {\n  border-right: none;\n}\n",":root {\n  .mat-mdc-menu-panel {\n    @apply rounded shadow;\n  }\n\n  .mat-mdc-menu-content {\n    @apply p-2;\n  }\n\n  .mat-mdc-menu-item {\n    @apply flex items-center rounded text-sm font-medium min-h-[40px] pl-2 pr-6 transition duration-100 ease-out;\n\n    &:hover:not([disabled]) {\n      @apply bg-primary/10;\n\n      .mat-icon {\n        @apply text-primary;\n      }\n    }\n\n    .mat-icon {\n      @apply transition duration-100 ease-out;\n      font-size: 1.25rem;\n      height: 1.25rem;\n      width: 1.25rem;\n    }\n  }\n\n  .mat-mdc-menu-item-submenu-trigger {\n    @apply pr-12;\n  }\n}\n\n.mat-mdc-menu-item .mat-icon-no-color {\n  color: currentColor;\n}\n",".mat-mdc-icon-button .mat-mdc-button-wrapper > *,\n.mat-menu-item .mat-icon,\n.mat-button .mat-icon {\n  vertical-align: middle !important;\n}\n\n.mat-mdc-table .mat-mdc-cell,\n.mat-table .mat-mdc-header-cell {\n  box-sizing: content-box;\n  white-space: nowrap;\n}\n\n.mat-mdc-select-panel {\n  @apply text-base;\n}\n\n.mat-drawer-side {\n  border: 0;\n}\n",":root {\n  .mat-mdc-select-panel {\n    @apply rounded shadow p-2;\n  }\n\n  .mat-mdc-option {\n    @apply rounded text-sm font-medium h-10 transition duration-100 ease-out;\n\n    &:hover, &.mat-active {\n      @apply bg-primary/10;\n\n      .mat-icon {\n        @apply text-primary;\n      }\n    }\n\n    .mat-icon {\n      @apply transition duration-100 ease-out;\n      font-size: 1.25rem;\n      height: 1.25rem;\n      width: 1.25rem;\n    }\n\n    &.mat-mdc-selected:not(.mat-mdc-option-multiple) {\n      @apply bg-primary/20;\n    }\n  }\n\n  .mat-mdc-menu-item-submenu-trigger {\n    @apply pr-12;\n  }\n}\n",".mat-mdc-progress-bar, .mat-mdc-progress-bar.mat-accent, .mat-mdc-progress-bar.mat-warn {\n  .mdc-linear-progress__buffer-bar {\n    background: #e2e2e2;\n  }\n}\n\n.vex-style-dark {\n  .mat-mdc-progress-bar, .mat-mdc-progress-bar.mat-accent, .mat-mdc-progress-bar.mat-warn {\n    .mdc-linear-progress__buffer-bar {\n      background: rgba(255, 255, 255, 0.5);\n    }\n  }\n}\n",".apexcharts-legend-text {\n  margin-left: 4px;\n  top: -1px;\n}\n\nbody .apexcharts-tooltip.light {\n  background: var(--background-foreground);\n}\n",".vex-layout-ares {\n\n  --footer-background: var(--background-base);\n  --sidenav-background: var(--background-base);\n  --toolbar-background: var(--background-base);\n\n  --sidenav-color: var(--text-color);\n  --sidenav-section-divider-color: transparent;\n  --sidenav-item-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-background-active: var(--background-foreground);\n  --sidenav-item-color: var(--text-color);\n  --sidenav-item-color-hover: var(--text-color);\n  --sidenav-item-color-active: var(--text-color);\n  --sidenav-item-dropdown-color-active: var(--sidenav-item-color-active);\n  --sidenav-item-dropdown-background-active: var(--background-hover);\n\n  --sidenav-item-dropdown-background: var(--background-base);\n  --sidenav-item-dropdown-background-hover: var(--background-hover);\n\n  --secondary-toolbar-background: var(--background-base);\n\n  --sidenav-toolbar-background: var(--background-base);\n\n  --secondary-toolbar-height: 64px;\n\n  .sidenav {\n    border: none;\n\n    vex-sidenav-item {\n      .vex-sidenav-item {\n        width: unset;\n        @apply rounded-full py-2 mx-4;\n\n        &.vex-sidenav-item--active {\n          @apply shadow;\n        }\n      }\n\n      .item-level-0 > .vex-sidenav-item {\n        @apply my-1;\n      }\n\n      .item-level-1 .vex-sidenav-item.vex-sidenav-item--active {\n        @apply shadow-none font-medium;\n\n        .vex-sidenav-item__label {\n          @apply text-black;\n        }\n      }\n\n      .item-level-1 .vex-sidenav-item:hover .vex-sidenav-item__label {\n        @apply text-black;\n      }\n    }\n  }\n\n  .sidenav-collapsed .sidenav vex-sidenav-item .vex-sidenav-item {\n    @apply mx-0;\n  }\n\n  vex-secondary-toolbar {\n    @apply rounded-b overflow-hidden;\n\n    .secondary-toolbar {\n      @apply shadow-none border-t-0 -mb-gutter;\n    }\n  }\n\n  vex-footer {\n    @apply rounded-t overflow-hidden;\n  }\n\n  .vex-page-layout-header {\n    background: var(--background-base);\n    color: var(--text-color);\n\n    vex-breadcrumbs {\n      .text-hint {\n        color: var(--text-hint) !important;\n      }\n    }\n  }\n\n  &.vex-style-default {\n    --sidenav-item-background-active: theme('backgroundColor.primary');\n    --sidenav-item-color-active: theme('textColor.primary-contrast');\n    --sidenav-item-dropdown-color-active: var(--sidenav-item-color);\n    --sidenav-item-dropdown-color-hover: var(--text-color);\n    --sidenav-item-icon-color-active: theme('textColor.primary-contrast');\n  }\n}\n",".vex-layout-hermes {\r\n  --toolbar-height: 100px;\r\n  --secondary-toolbar-background: var(--background-base);\r\n  --secondary-toolbar-height: 64px;\r\n\r\n  &.vex-style-light {\r\n    --toolbar-background: var(--background-base);\r\n  }\r\n\r\n  &.vex-style-default {\r\n    --navigation-background: #{$sidenav-background};\r\n    --toolbar-background: #{lighten($sidenav-background, 5)};\r\n    --navigation-color: white;\r\n    --toolbar-color: white;\r\n  }\r\n\r\n  &.vex-style-dark {\r\n    --toolbar-background: var(--background-base);\r\n  }\r\n\r\n  // Hide sidenav on vertical layout:\r\n  // Global Search displays it, even when it's out of the view\r\n  @screen lg {\r\n    .sidenav {\r\n      @apply hidden;\r\n    }\r\n  }\r\n\r\n  vex-secondary-toolbar .secondary-toolbar {\r\n    @apply shadow-none -mb-gutter border-t-0;\r\n  }\r\n}\r\n",".vex-layout-ikaros {\r\n  // Workaround: CSS calc() functions can't deal with values without a unit (e.g. 0 instead of 0px), when this is 0, SCSS or PostCSS make it a 0 instead of 0px, breaking the layout.\r\n  --navigation-height: 0.00001px;\r\n\r\n  &.vex-style-default {\r\n    --toolbar-background: #{$sidenav-background};\r\n    --navigation-color: white;\r\n    --toolbar-color: white;\r\n  }\r\n}\r\n",".vex-layout-poseidon {\n  $sidenav-background: #0a1929;\n  --sidenav-item-min-height: 40px;\n\n  --sidenav-item-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-background-active: rgba(var(--color-primary), 0.2);\n  --sidenav-item-dropdown-background: var(--sidenav-background);\n  --sidenav-item-dropdown-background-hover: rgba(var(--color-primary), 0.1);\n  --sidenav-item-dropdown-background-active: rgba(var(--color-primary), 0.2);\n\n  --sidenav-item-padding-vertical: var(--padding-8);\n  --sidenav-item-padding-horizontal: var(--padding-12);\n\n  .vex-sidenav-item {\n    @apply mx-3 mb-1 rounded;\n  }\n\n  .vex-sidenav-toolbar__divider {\n    margin: 0 var(--sidenav-item-padding-horizontal);\n  }\n\n  &.vex-style-light {\n    --sidenav-item-color: rgba(0, 0, 0, 1);\n    --sidenav-item-color-hover: rgba(0, 0, 0, 1);\n    --sidenav-item-dropdown-color-hover: rgba(0, 0, 0, 1);\n    --sidenav-item-dropdown-color-active: rgba(0, 0, 0, 1);\n  }\n\n  &.vex-style-default {\n    --sidenav-background: #{$sidenav-background};\n    --sidenav-toolbar-background: var(--sidenav-background);\n    --sidenav-item-color: rgba(255, 255, 255, 0.8);\n    --sidenav-item-color-hover: rgba(255, 255, 255, 1);\n    --sidenav-item-ripple-color: rgb(255, 255, 255, 0.06);\n  }\n\n  &.vex-style-dark {\n    --sidenav-toolbar-background: theme('backgroundColor.foreground');\n    --sidenav-background: theme('backgroundColor.foreground');\n    --sidenav-item-color: rgba(255, 255, 255, 0.8);\n    --sidenav-item-color-hover: #FFFFFF;\n    --sidenav-item-ripple-color: rgb(255, 255, 255, 0.06);\n  }\n}\n","\r\n@use '@angular/material' as mat;\r\n@import \"~simplebar/dist/simplebar.css\";\r\n@import \"~highlight.js/styles/androidstudio.css\";\r\n// Vex Core\r\n@import \"./@vex/styles/core\";\r\n\r\n\r\n/*\r\n  You can override any CSS Variable or style here\r\n  Example:\r\n\r\n  :root {\r\n   --sidenav-background: #333333;\r\n  }\r\n\r\n  All possible variables can be found in @vex/styles/core or by simply inspecting the element you want to change\r\n  in Chrome/Firefox DevTools\r\n*/\r\n\r\n/**\r\n  Uncomment the below code and adjust the values to fit your colors, the application will automatically adjust\r\n */\r\n:root {\r\n  // --color-primary: blue;\r\n  // --color-primary-contrast: white;\r\n\r\n  // --color-accent: yellow;\r\n  // --color-accent-contrast: black;\r\n\r\n  // --color-warn: yellow;\r\n  // --color-warn-contrast: black;\r\n}\r\n\r\n.dense-2 {\r\n  @include mat.all-component-densities(-2);\r\n}\r\n\r\n","//\n// Copyright 2020 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// Selector '.mdc-*' should only be used in this project.\n// stylelint-disable selector-class-pattern --\n// Internal styling for Chip MDC component.\n\n@use 'sass:map';\n@use 'sass:meta';\n@use 'sass:math';\n@use 'sass:color';\n@use '@material/dom/dom';\n@use '@material/density/density';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/shape/shape';\n@use '@material/ripple/ripple-theme';\n@use '@material/rtl/rtl';\n@use '@material/theme/theme';\n@use '@material/theme/keys';\n@use '@material/elevation/elevation-theme';\n@use '@material/tokens/resolvers';\n@use '@material/theme/state';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n\n$height: 32px;\n$minimum-height: 24px;\n$maximum-height: $height;\n$density-scale: density.$default-scale;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n);\n$radius: math.div($height, 2);\n$type-scale: body2;\n$container-color: color.mix(\n  theme-color.prop-value(on-surface),\n  theme-color.prop-value(surface),\n  12%\n);\n$text-label-color: rgba(theme-color.prop-value(on-surface), 0.87);\n$icon-color: rgba(theme-color.prop-value(on-surface), 0.87);\n$checkmark-color: rgba(theme-color.prop-value(on-surface), 0.87);\n$trailing-action-color: rgba(theme-color.prop-value(on-surface), 0.87);\n$ripple-color: on-surface;\n$checkmark-size: 20px;\n$leading-icon-size: 20px;\n$trailing-action-size: 18px;\n$leading-padding: 12px;\n$trailing-padding: 12px;\n$avatar-size: 24px;\n$avatar-leading-padding: 4px;\n$avatar-trailing-padding: 8px;\n$graphic-leading-padding: 6px;\n$graphic-trailing-padding: 6px;\n$trailing-action-leading-padding: 8px;\n$trailing-action-trailing-padding: 8px;\n$ripple-target: '.mdc-evolution-chip__ripple';\n$ripple-target-primary: '.mdc-evolution-chip__ripple--primary';\n$ripple-target-trailing: '.mdc-evolution-chip__ripple--trailing';\n\n// Filter chip colors\n$filter-selected-container-color: color.mix(\n  theme-color.prop-value(on-surface),\n  $container-color,\n  8%\n);\n\n$_light-theme: (\n  container-elevation: null,\n  container-height: null,\n  container-shadow-color: null,\n  container-shape: null,\n  disabled-label-text-color: null,\n  disabled-label-text-opacity: null,\n  disabled-outline-color: null,\n  disabled-outline-opacity: null,\n  elevated-container-color: null,\n  elevated-container-elevation: null,\n  elevated-container-shadow-color: null,\n  container-surface-tint-layer-color: null,\n  elevated-disabled-container-color: null,\n  elevated-disabled-container-elevation: null,\n  elevated-disabled-container-opacity: null,\n  elevated-focus-container-elevation: null,\n  elevated-hover-container-elevation: null,\n  elevated-pressed-container-elevation: null,\n  elevated-selected-container-color: null,\n  elevated-selected-container-elevation: null,\n  elevated-unselected-container-color: null,\n  flat-container-elevation: null,\n  flat-disabled-outline-color: null,\n  flat-disabled-outline-opacity: null,\n  flat-disabled-selected-container-color: null,\n  flat-disabled-selected-container-opacity: null,\n  flat-disabled-selected-outline-color: null,\n  flat-disabled-selected-outline-opacity: null,\n  flat-disabled-unselected-outline-color: null,\n  flat-disabled-unselected-outline-opacity: null,\n  flat-focus-outline-color: null,\n  flat-outline-color: null,\n  flat-outline-width: null,\n  flat-selected-container-color: null,\n  flat-selected-focus-container-elevation: null,\n  flat-selected-hover-container-elevation: null,\n  flat-selected-outline-color: null,\n  flat-selected-outline-width: null,\n  flat-selected-pressed-container-elevation: null,\n  flat-unselected-focus-container-elevation: null,\n  flat-unselected-focus-outline-color: null,\n  flat-unselected-hover-container-elevation: null,\n  flat-unselected-outline-color: null,\n  flat-unselected-outline-width: null,\n  flat-unselected-pressed-container-elevation: null,\n  focus-label-text-color: null,\n  focus-outline-color: null,\n  focus-state-layer-color: null,\n  focus-state-layer-opacity: null,\n  hover-label-text-color: null,\n  hover-state-layer-color: null,\n  hover-state-layer-opacity: null,\n  label-text-color: null,\n  label-text-font: null,\n  label-text-line-height: null,\n  label-text-size: null,\n  label-text-tracking: null,\n  label-text-weight: null,\n  outline-color: null,\n  outline-width: null,\n  pressed-label-text-color: null,\n  pressed-state-layer-color: null,\n  pressed-state-layer-opacity: null,\n  selected-focus-label-text-color: null,\n  selected-focus-state-layer-color: null,\n  selected-focus-state-layer-opacity: null,\n  selected-hover-label-text-color: null,\n  selected-hover-state-layer-color: null,\n  selected-hover-state-layer-opacity: null,\n  selected-label-text-color: null,\n  selected-pressed-label-text-color: null,\n  selected-pressed-state-layer-color: null,\n  selected-pressed-state-layer-opacity: null,\n  unselected-focus-label-text-color: null,\n  unselected-focus-state-layer-color: null,\n  unselected-focus-state-layer-opacity: null,\n  unselected-hover-label-text-color: null,\n  unselected-hover-state-layer-color: null,\n  unselected-hover-state-layer-opacity: null,\n  unselected-label-text-color: null,\n  unselected-pressed-label-text-color: null,\n  unselected-pressed-state-layer-color: null,\n  unselected-pressed-state-layer-opacity: null,\n  with-avatar-avatar-shape: null,\n  with-avatar-avatar-size: null,\n  with-avatar-disabled-avatar-opacity: null,\n  with-icon-disabled-icon-color: null,\n  with-icon-disabled-icon-opacity: null,\n  with-icon-focus-icon-color: null,\n  with-icon-hover-icon-color: null,\n  with-icon-icon-color: null,\n  with-icon-icon-size: null,\n  with-icon-pressed-icon-color: null,\n  with-icon-selected-focus-icon-color: null,\n  with-icon-selected-hover-icon-color: null,\n  with-icon-selected-icon-color: null,\n  with-icon-selected-pressed-icon-color: null,\n  with-icon-unselected-focus-icon-color: null,\n  with-icon-unselected-hover-icon-color: null,\n  with-icon-unselected-icon-color: null,\n  with-icon-unselected-pressed-icon-color: null,\n  with-leading-icon-disabled-leading-icon-color: null,\n  with-leading-icon-disabled-leading-icon-opacity: null,\n  with-leading-icon-focus-leading-icon-color: null,\n  with-leading-icon-hover-leading-icon-color: null,\n  with-leading-icon-leading-icon-color: null,\n  with-leading-icon-leading-icon-size: null,\n  with-leading-icon-pressed-leading-icon-color: null,\n  with-trailing-icon-disabled-trailing-icon-color: null,\n  with-trailing-icon-disabled-trailing-icon-opacity: null,\n  with-trailing-icon-focus-trailing-icon-color: null,\n  with-trailing-icon-hover-trailing-icon-color: null,\n  with-trailing-icon-pressed-trailing-icon-color: null,\n  with-trailing-icon-trailing-icon-color: null,\n  with-trailing-icon-trailing-icon-size: null,\n);\n$_custom-property-prefix: 'chip';\n\n// TODO(b/259513131): Move theme resolution to variant theme\n// and remove custom property declaration when all customers are ready to be migrated\n@mixin theme($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme($_light-theme, $theme);\n  $theme: resolve-theme($theme, $resolvers: $resolvers);\n  @include keys.declare-custom-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n}\n\n// TODO(b/259513131): Move theme resolution to variant theme\n// and remove custom property declaration when all customers are ready to be migrated\n@mixin theme-styles($theme, $resolvers: resolvers.$material) {\n  @include theme.validate-theme-styles($_light-theme, $theme);\n  $theme: resolve-theme($theme, $resolvers: $resolvers);\n  $theme: keys.create-theme-properties(\n    $theme,\n    $prefix: $_custom-property-prefix\n  );\n\n  @include _container-shape(map.get($theme, container-shape));\n  @include _avatar-shape(map.get($theme, with-avatar-avatar-shape));\n  @include graphic-size(map.get($theme, with-avatar-avatar-size));\n  @include height(map.get($theme, container-height));\n  @include elevation-theme.overlay-container-color(\n    map.get($theme, container-surface-tint-layer-color)\n  );\n  @include _container-elevation(\n    $map: (\n      default: map.get($theme, container-elevation),\n    )\n  );\n  @include _container-elevation(\n    $map: (\n      enabled: map.get($theme, flat-container-elevation),\n    )\n  );\n  @include _container-elevation(\n    $map: (\n      enabled: map.get($theme, elevated-container-elevation),\n      disabled: map.get($theme, elevated-disabled-container-elevation),\n      hover: map.get($theme, elevated-hover-container-elevation),\n      focus: map.get($theme, elevated-focus-container-elevation),\n      pressed: map.get($theme, elevated-pressed-container-elevation),\n    )\n  );\n  @include _selected-container-elevation(\n    $map: (\n      enabled: map.get($theme, elevated-selected-container-elevation),\n      disabled: map.get($theme, elevated-selected-disabled-container-elevation),\n      hover: map.get($theme, elevated-selected-hover-container-elevation),\n      focus: map.get($theme, elevated-selected-focus-container-elevation),\n      pressed: map.get($theme, elevated-selected-pressed-container-elevation),\n    )\n  );\n  @include _selected-container-elevation(\n    $map: (\n      enabled: map.get($theme, flat-selected-container-elevation),\n      disabled: map.get($theme, flat-selected-disabled-container-elevation),\n      hover: map.get($theme, flat-selected-hover-container-elevation),\n      focus: map.get($theme, flat-selected-focus-container-elevation),\n      pressed: map.get($theme, flat-selected-pressed-container-elevation),\n    )\n  );\n  @include _unselected-container-elevation(\n    $map: (\n      enabled: map.get($theme, flat-unselected-container-elevation),\n      disabled: map.get($theme, flat-unselected-disabled-container-elevation),\n      hover: map.get($theme, flat-unselected-hover-container-elevation),\n      focus: map.get($theme, flat-unselected-focus-container-elevation),\n      pressed: map.get($theme, flat-unselected-pressed-container-elevation),\n    )\n  );\n  @include outline-color(\n    (\n      enabled: map.get($theme, outline-color),\n      focus: map.get($theme, focus-outline-color),\n      disabled: map.get($theme, disabled-outline-color),\n    )\n  );\n  @include outline-color(\n    (\n      enabled: map.get($theme, flat-outline-color),\n      focus: map.get($theme, flat-focus-outline-color),\n      disabled: map.get($theme, flat-disabled-outline-color),\n    )\n  );\n  @include selected-outline-color(\n    (\n      enabled: map.get($theme, flat-selected-outline-color),\n      disabled: map.get($theme, flat-disabled-selected-outline-color),\n    )\n  );\n  @include _unselected-outline-color(\n    (\n      disabled: map.get($theme, flat-disabled-unselected-outline-color),\n      focus: map.get($theme, flat-unselected-focus-outline-color),\n      enabled: map.get($theme, flat-unselected-outline-color),\n    )\n  );\n  @include outline-width(map.get($theme, outline-width));\n  @include outline-width(map.get($theme, flat-outline-width));\n  @include _selected-outline-width(\n    map.get($theme, flat-selected-outline-width)\n  );\n  @include _unselected-outline-width(\n    map.get($theme, flat-unselected-outline-width)\n  );\n  @include container-color(\n    (\n      enabled: map.get($theme, elevated-container-color),\n      disabled: map.get($theme, elevated-disabled-container-color),\n    )\n  );\n  @include selected-container-color(\n    (\n      enabled: map.get($theme, elevated-selected-container-color),\n      disabled: map.get($theme, elevated-disabled-container-color),\n    )\n  );\n  // TODO(b/255716167) Separate theme-styles mixin for hairline and elevated chip variants.\n  @include selected-container-color(\n    (\n      enabled: map.get($theme, flat-selected-container-color),\n      disabled: map.get($theme, flat-disabled-selected-container-color),\n    )\n  );\n  @include _unselected-container-color(\n    (\n      enabled: map.get($theme, elevated-unselected-container-color),\n    )\n  );\n  @include _label-text-typography(\n    (\n      font: map.get($theme, label-text-font),\n      line-height: map.get($theme, label-text-line-height),\n      size: map.get($theme, label-text-size),\n      weight: map.get($theme, label-text-weight),\n      tracking: map.get($theme, label-text-tracking),\n    )\n  );\n  @include text-label-color(\n    (\n      enabled: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    )\n  );\n  @include selected-text-label-color(\n    (\n      enabled: map.get($theme, selected-label-text-color),\n      hover: map.get($theme, selected-hover-label-text-color),\n      focus: map.get($theme, selected-focus-label-text-color),\n      pressed: map.get($theme, selected-pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    )\n  );\n  @include _unselected-text-label-color(\n    (\n      enabled: map.get($theme, unselected-label-text-color),\n      hover: map.get($theme, unselected-hover-label-text-color),\n      focus: map.get($theme, unselected-focus-label-text-color),\n      pressed: map.get($theme, unselected-pressed-label-text-color),\n      disabled: map.get($theme, unselected-disabled-label-text-color),\n    )\n  );\n\n  @include icon-size(map.get($theme, with-icon-icon-size));\n  @include icon-color(\n    (\n      enabled: map.get($theme, with-icon-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n      hover: map.get($theme, with-icon-hover-icon-color),\n      focus: map.get($theme, with-icon-focus-icon-color),\n      pressed: map.get($theme, with-icon-pressed-icon-color),\n    )\n  );\n  @include _selected-icon-color(\n    (\n      enabled: map.get($theme, with-icon-selected-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n      hover: map.get($theme, with-icon-selected-hover-icon-color),\n      focus: map.get($theme, with-icon-selected-focus-icon-color),\n      pressed: map.get($theme, with-icon-selected-pressed-icon-color),\n    )\n  );\n  @include _unselected-icon-color(\n    (\n      enabled: map.get($theme, with-icon-unselected-icon-color),\n      disabled: map.get($theme, with-icon-unselected-disabled-icon-color),\n      hover: map.get($theme, with-icon-unselected-hover-icon-color),\n      focus: map.get($theme, with-icon-unselected-focus-icon-color),\n      pressed: map.get($theme, with-icon-unselected-pressed-icon-color),\n    )\n  );\n  @include icon-color(\n    (\n      disabled: map.get($theme, with-leading-icon-disabled-leading-icon-color),\n      focus: map.get($theme, with-leading-icon-focus-leading-icon-color),\n      hover: map.get($theme, with-leading-icon-hover-leading-icon-color),\n      enabled: map.get($theme, with-leading-icon-leading-icon-color),\n      pressed: map.get($theme, with-leading-icon-pressed-leading-icon-color),\n    )\n  );\n  @include trailing-action-color(\n    (\n      disabled: map.get($theme, with-trailing-icon-disabled-trailing-icon-color),\n      focus: map.get($theme, with-trailing-icon-focus-trailing-icon-color),\n      hover: map.get($theme, with-trailing-icon-hover-trailing-icon-color),\n      enabled: map.get($theme, with-trailing-icon-trailing-icon-color),\n      pressed: map.get($theme, with-trailing-icon-pressed-trailing-icon-color),\n    )\n  );\n  @include _ripple-theme(\n    (\n      focus-state-layer-color: map.get($theme, focus-state-layer-color),\n      focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, hover-state-layer-color),\n      hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity),\n      pressed-state-layer-color: map.get($theme, pressed-state-layer-color),\n      pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity),\n    )\n  );\n  @include _selected-ripple-theme(\n    (\n      focus-state-layer-color: map.get($theme, selected-focus-state-layer-color),\n      focus-state-layer-opacity:\n        map.get($theme, selected-focus-state-layer-opacity),\n      hover-state-layer-color: map.get($theme, selected-hover-state-layer-color),\n      hover-state-layer-opacity:\n        map.get($theme, selected-hover-state-layer-opacity),\n      pressed-state-layer-color:\n        map.get($theme, selected-pressed-state-layer-color),\n      pressed-state-layer-opacity:\n        map.get($theme, selected-pressed-state-layer-opacity),\n    )\n  );\n  @include _unselected-ripple-theme(\n    (\n      focus-state-layer-color:\n        map.get($theme, unselected-focus-state-layer-color),\n      focus-state-layer-opacity:\n        map.get($theme, unselected-focus-state-layer-opacity),\n      hover-state-layer-color:\n        map.get($theme, unselected-hover-state-layer-color),\n      hover-state-layer-opacity:\n        map.get($theme, unselected-hover-state-layer-opacity),\n      pressed-state-layer-color:\n        map.get($theme, unselected-pressed-state-layer-color),\n      pressed-state-layer-opacity:\n        map.get($theme, unselected-pressed-state-layer-opacity),\n    )\n  );\n}\n\n@function resolve-theme($theme, $resolvers) {\n  $elevation-resolver: map.get($resolvers, elevation);\n  @if $elevation-resolver == null {\n    @return $theme;\n  }\n\n  $elevation-pairs: (\n    container-shadow-color: (\n      container-elevation,\n    ),\n    flat-container-shadow-color: (\n      flat-container-elevation,\n    ),\n    elevated-container-shadow-color: (\n      elevated-container-elevation,\n      elevated-disabled-container-elevation,\n      elevated-focus-container-elevation,\n      elevated-hover-container-elevation,\n      elevated-pressed-container-elevation,\n      elevated-selected-container-elevation,\n      elevated-selected-disabled-container-elevation,\n      elevated-selected-focus-container-elevation,\n      elevated-selected-hover-container-elevation,\n      elevated-selected-pressed-container-elevation,\n      flat-selected-focus-container-elevation,\n      flat-selected-hover-container-elevation,\n      flat-selected-pressed-container-elevation,\n      flat-unselected-focus-container-elevation,\n      flat-unselected-hover-container-elevation,\n      flat-unselected-pressed-container-elevation,\n    ),\n  );\n\n  @each $shadow-color-key, $elevation-keys in $elevation-pairs {\n    $shadow-color: map.get($theme, $shadow-color-key);\n    @if $shadow-color != null {\n      @each $key in $elevation-keys {\n        $elevation: map.get($theme, $key);\n        @if $elevation != null {\n          $resolved-value: meta.call(\n            $elevation-resolver,\n            $elevation: $elevation,\n            $shadow-color: $shadow-color\n          );\n          // Update the key with the resolved value.\n          $theme: map.set($theme, $key, $resolved-value);\n        }\n      }\n    }\n  }\n  @return $theme;\n}\n\n@mixin _ripple-theme($ripple-theme) {\n  .mdc-evolution-chip__action--primary {\n    @include ripple-theme.internal-theme-styles(\n      (\n        focus-state-layer-color: map.get($ripple-theme, focus-state-layer-color),\n        focus-state-layer-opacity:\n          map.get($ripple-theme, focus-state-layer-opacity),\n        hover-state-layer-color: map.get($ripple-theme, hover-state-layer-color),\n        hover-state-layer-opacity:\n          map.get($ripple-theme, hover-state-layer-opacity),\n        pressed-state-layer-color:\n          map.get($ripple-theme, pressed-state-layer-color),\n        pressed-state-layer-opacity:\n          map.get($ripple-theme, pressed-state-layer-opacity),\n      ),\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n@mixin _selected-ripple-theme($ripple-theme) {\n  @include _is-selected() {\n    @include _ripple-theme($ripple-theme);\n  }\n}\n\n@mixin _unselected-ripple-theme($ripple-theme) {\n  @include _is-unselected() {\n    @include _ripple-theme($ripple-theme);\n  }\n}\n\n///\n/// Sets the ripple color of the chip.\n/// @param {Color} $color - The color of the ripple.\n/// @param {Map} $opacity-map [null] - The optional opacity map for the states.\n///\n@mixin ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include _ripple-color($color, $opacity-map, $query);\n}\n\n///\n/// Sets the selected ripple color of the chip.\n/// @param {Color} $color - The color of the ripple.\n/// @param {Map} $opacity-map [null] - The optional opacity map for the states.\n///\n@mixin selected-ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  &.mdc-evolution-chip--selected {\n    @include ripple-color($color, $opacity-map, $query: $query);\n  }\n}\n\n@mixin _ripple-color($color, $opacity-map, $query) {\n  .mdc-evolution-chip__action--primary {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Sets the ripple color of the chip's trailing action.\n/// @param {Color} $color - The color of the ripple.\n/// @param {Map} $opacity-map [null] - The optional opacity map for the states.\n///\n@mixin trailing-action-ripple-color(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  .mdc-evolution-chip__action--trailing {\n    @include ripple-theme.states(\n      $color: $color,\n      $opacity-map: $opacity-map,\n      $query: $query,\n      $ripple-target: $ripple-target\n    );\n  }\n}\n\n///\n/// Sets the size of the trailing action's ripple.\n/// @param {Number} $size - The size of the ripple.\n///\n@mixin trailing-action-ripple-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  .mdc-evolution-chip__ripple--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n    }\n  }\n}\n\n///\n/// Sets the density scale for the chip.\n/// @param {Number | String} $density-scale - Density scale value for component.\n///     Supported density scale values are `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include _reset-touch-target($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin _reset-touch-target($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__action-touch {\n    @include feature-targeting.targets($feat-structure) {\n      display: none;\n    }\n  }\n}\n\n///\n/// Sets custom height for the chip.\n/// @param {Number} $height - The height of the chip.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin _container-shape($radius) {\n  @include shape.radius($radius);\n\n  #{$ripple-target} {\n    @include shape.radius($radius);\n  }\n\n  .mdc-evolution-chip__action--primary:before {\n    @include shape.radius($radius);\n  }\n}\n\n@mixin _avatar-shape($radius) {\n  .mdc-evolution-chip__icon--primary {\n    @include shape.radius($radius);\n  }\n}\n\n///\n/// Sets the shape radius of the chip.\n/// @param {Number|List} $radius - Shape radius in `border-radius` CSS format.\n/// @param {Boolean} $rtl-reflexive - True flips radius corners in RTL.\n///\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include shape.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{$ripple-target} {\n    @include shape.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-chip__action--primary:before {\n    @include shape.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n\n  .mdc-evolution-chip__icon--primary {\n    @include shape.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the width of the chip outline.\n/// @param {Number} $width - The width of the chip outline.\n///\n@mixin outline-width($width, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__action--primary:before {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-width, $width);\n    }\n  }\n}\n\n@mixin _selected-outline-width($width) {\n  @include _is-selected() {\n    @include outline-width($width);\n  }\n}\n\n@mixin _unselected-outline-width($width) {\n  @include _is-unselected() {\n    @include outline-width($width);\n  }\n}\n\n///\n/// Customizes the outline color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `focus`, `disabled`.\n///\n/// @example\n///   @include outline-color(blue);\n///   @include outline-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The outline's color or a state Map\n///\n@mixin outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _outline-color(state.get-default-state($color-or-map), $query);\n  @include _is-enabled() {\n    @include _outline-color(state.get-enabled-state($color-or-map), $query);\n  }\n  @include _focus-outline-color(state.get-focus-state($color-or-map), $query);\n  @include _is-disabled() {\n    @include _outline-color(state.get-disabled-state($color-or-map), $query);\n  }\n}\n\n@mixin _selected-outline-color($color-or-map) {\n  @include _is-selected() {\n    @include _outline-color($color-or-map);\n  }\n}\n\n///\n/// Customizes the selected outline color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `focus`, `disabled`.\n///\n/// @example\n///   @include selected-outline-color(blue);\n///   @include selected-outline-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The outline's color or a state Map\n///\n@mixin selected-outline-color($color-or-map, $query: feature-targeting.all()) {\n  @include _is-selected() {\n    @include outline-color($color-or-map, $query: $query);\n  }\n}\n\n@mixin _unselected-outline-color($color-or-map) {\n  @include _is-unselected() {\n    @include outline-color($color-or-map);\n  }\n}\n\n@mixin _outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__action--primary:before {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(border-color, $color);\n      }\n\n      // TODO(b/206694742): Find a better solution.\n      @if $color == transparent {\n        @include dom.forced-colors-mode($exclude-ie11: true) {\n          @include theme.property(border-color, CanvasText);\n        }\n      }\n    }\n  }\n}\n\n@mixin _focus-outline-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational) {\n    @include ripple-theme.focus() {\n      &:before {\n        @include feature-targeting.targets($feat-color) {\n          @if $color {\n            @include theme.property(border-color, $color);\n          }\n        }\n      }\n    }\n  }\n}\n\n///\n/// Sets the style of the chip outline.\n/// @param {String} $style - The style of the chip outline.\n///\n@mixin outline-style($style, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__action--primary:before {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(border-style, $style);\n    }\n  }\n}\n\n///\n/// Customizes the container color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `disabled`.\n///\n/// @example\n///   @include container-color(blue);\n///   @include container-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The container's color or a state Map\n///\n@mixin container-color($color-or-map, $query: feature-targeting.all()) {\n  @include _container-color(state.get-default-state($color-or-map), $query);\n  @include _is-enabled() {\n    @include _container-color(state.get-enabled-state($color-or-map), $query);\n  }\n  @include _is-disabled() {\n    @include _container-color(state.get-disabled-state($color-or-map), $query);\n  }\n}\n\n///\n/// Customizes the selected container color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `disabled`.\n///\n/// @example\n///   @include selected-container-color(blue);\n///   @include selected-container-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The container's color or a state Map\n///\n@mixin selected-container-color(\n  $color-or-map,\n  $query: feature-targeting.all()\n) {\n  @include _is-selected() {\n    @include container-color($color-or-map, $query: $query);\n  }\n}\n\n@mixin _unselected-container-color($color-or-map) {\n  @include _is-unselected() {\n    @include container-color($color-or-map);\n  }\n}\n\n@mixin _container-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @include feature-targeting.targets($feat-color) {\n    @if $color {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Customizes the text label color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include text-label-color(blue);\n///   @include text-label-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n///\n@mixin text-label-color($color-or-map, $query: feature-targeting.all()) {\n  @include _text-label-color(state.get-default-state($color-or-map), $query);\n  @include _is-enabled() {\n    @include _text-label-color(state.get-enabled-state($color-or-map), $query);\n  }\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):hover {\n    @include _text-label-color(state.get-hover-state($color-or-map), $query);\n  }\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational) {\n    @include ripple-theme.focus() {\n      @include _text-label-color(state.get-focus-state($color-or-map), $query);\n    }\n  }\n\n  @include _is-disabled() {\n    @include _text-label-color(state.get-disabled-state($color-or-map), $query);\n  }\n}\n\n@mixin _label-text-typography($typography-theme) {\n  .mdc-evolution-chip__text-label {\n    @include typography.theme-styles($typography-theme);\n  }\n}\n\n///\n/// Customizes the selected text label color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include selected-text-label-color(blue);\n///   @include selected-text-label-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The label's color or a state Map\n///\n@mixin selected-text-label-color(\n  $color-or-map,\n  $query: feature-targeting.all()\n) {\n  @include _is-selected() {\n    @include text-label-color($color-or-map, $query: $query);\n  }\n}\n\n@mixin _unselected-text-label-color($color-or-map) {\n  @include _is-unselected() {\n    @include text-label-color($color-or-map);\n  }\n}\n\n@mixin _text-label-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__text-label {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Sets the type scale of the text label.\n/// @param {String} $type-scale - The type scale of the text label.\n///\n@mixin text-label-type-scale($type-scale, $query: feature-targeting.all()) {\n  .mdc-evolution-chip__text-label {\n    @include typography.typography($type-scale, $query: $query);\n  }\n}\n\n///\n/// Sets the size of the graphic.\n/// @param {Number} $size - The size of the graphic.\n///\n@mixin graphic-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  // Expose the width as a readable custom property that can be used when\n  // computing the chip bounding client rect as an additive value for the chip\n  // width. This solves for selectable chips without icons growing/shrinking as\n  // they toggle their selected state. The ripple dimensions will have been\n  // computed based on the unselected bounding client react which will not have\n  // enough horizontal space to account for the growth in width.\n  &.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--with-primary-icon) {\n    @if $size {\n      @include theme.property(--mdc-chip-graphic-selected-width, $size);\n    }\n  }\n\n  .mdc-evolution-chip__graphic {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n      @include theme.property(font-size, $size);\n    }\n  }\n}\n\n///\n/// Customizes the icon color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `focus`, `disabled`.\n///\n/// @example\n///   @include icon-color(blue);\n///   @include icon-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The icon's color or a state Map\n///\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  @include _icon-color(state.get-default-state($color-or-map), $query);\n\n  @include _is-enabled() {\n    @include _icon-color(state.get-enabled-state($color-or-map), $query);\n  }\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):hover {\n    @include _icon-color(state.get-hover-state($color-or-map), $query);\n  }\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational) {\n    @include ripple-theme.focus() {\n      @include _icon-color(state.get-focus-state($color-or-map), $query);\n    }\n  }\n\n  @include _is-disabled() {\n    @include _icon-color(state.get-disabled-state($color-or-map), $query);\n  }\n}\n\n@mixin _selected-icon-color($color-or-map) {\n  @include checkmark-color($color-or-map);\n}\n\n@mixin _unselected-icon-color($color-or-map) {\n  @include _is-unselected() {\n    @include icon-color($color-or-map);\n  }\n}\n\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__icon--primary {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes the icon container color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include icon-container-color(blue);\n///   @include icon-container-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The icon's container color or a state Map\n///\n@mixin icon-container-color($color-or-map, $query: feature-targeting.all()) {\n  @include _icon-container-color(\n    state.get-default-state($color-or-map),\n    $query\n  );\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):hover {\n    @include _icon-container-color(\n      state.get-hover-state($color-or-map),\n      $query\n    );\n  }\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational) {\n    @include ripple-theme.focus() {\n      @include _icon-container-color(\n        state.get-focus-state($color-or-map),\n        $query\n      );\n    }\n  }\n\n  &.mdc-evolution-chip--disabled {\n    @include _icon-container-color(\n      state.get-disabled-state($color-or-map),\n      $query\n    );\n  }\n}\n\n@mixin _icon-container-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__icon--primary {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Sets the size of the icon.\n/// @param {Number} $size - The size of the icon.\n///\n@mixin icon-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__icon--primary {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n      @include theme.property(font-size, $size);\n    }\n  }\n}\n\n///\n/// Sets the size of the trailing action.\n/// @param {Number} $size - The size of the trailing action.\n///\n@mixin trailing-action-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__icon--trailing {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n      @include theme.property(font-size, $size);\n    }\n  }\n}\n\n///\n/// Customizes the trailing action color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include trailing-action-color(blue);\n///   @include trailing-action-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The trailing action's color or a state Map\n///\n@mixin trailing-action-color($color-or-map, $query: feature-targeting.all()) {\n  @include _trailing-action-color(\n    state.get-default-state($color-or-map),\n    $query\n  );\n\n  @include _is-enabled() {\n    @include _trailing-action-color(\n      state.get-enabled-state($color-or-map),\n      $query\n    );\n  }\n\n  .mdc-evolution-chip__action--trailing:hover {\n    @include _trailing-action-color(\n      state.get-hover-state($color-or-map),\n      $query\n    );\n  }\n\n  .mdc-evolution-chip__action--trailing {\n    @include ripple-theme.focus() {\n      @include _trailing-action-color(\n        state.get-focus-state($color-or-map),\n        $query\n      );\n    }\n  }\n\n  @include _is-disabled() {\n    @include _trailing-action-color(\n      state.get-disabled-state($color-or-map),\n      $query\n    );\n  }\n}\n\n@mixin _trailing-action-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__icon--trailing {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Sets the size of the checkmark.\n/// @param {Number} $size - The size of the checkmark.\n///\n@mixin checkmark-size($size, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__checkmark {\n    @include feature-targeting.targets($feat-structure) {\n      @include theme.property(height, $size);\n      @include theme.property(width, $size);\n    }\n  }\n}\n\n///\n/// Customizes the checkmark color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `enabled`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include checkmark-color(blue);\n///   @include checkmark-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The checkmark's color or a state Map\n///\n@mixin checkmark-color($color-or-map, $query: feature-targeting.all()) {\n  @include _checkmark-color(state.get-default-state($color-or-map), $query);\n\n  @include _is-enabled() {\n    @include _checkmark-color(state.get-enabled-state($color-or-map), $query);\n  }\n\n  .mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):hover {\n    @include _checkmark-color(state.get-hover-state($color-or-map), $query);\n  }\n\n  .mdc-evolution-chip__action--primary {\n    @include ripple-theme.focus() {\n      @include _checkmark-color(state.get-focus-state($color-or-map), $query);\n    }\n  }\n\n  @include _is-disabled() {\n    @include _checkmark-color(state.get-disabled-state($color-or-map), $query);\n  }\n}\n\n@mixin _checkmark-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__checkmark {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Customizes the checkmark container color, using a Color or state Map.\n/// - To set only the default color, provide a single Color.\n/// - To set one or more state colors, provide a state Map with optional keys.\n/// - Supported state Map keys: `default`, `hover`, `focus`, `disabled`.\n///\n/// @example\n///   @include checkmark-container-color(blue);\n///   @include checkmark-container-color((disabled: gray));\n///\n/// @param {Color | Map} $color-or-map - The checkmark container's color or a state Map\n///\n@mixin checkmark-container-color(\n  $color-or-map,\n  $query: feature-targeting.all()\n) {\n  @include _checkmark-container-color(\n    state.get-default-state($color-or-map),\n    $query\n  );\n\n  &.mdc-evolution-chip--disabled {\n    @include _checkmark-container-color(\n      state.get-disabled-state($color-or-map),\n      $query\n    );\n  }\n}\n\n@mixin _checkmark-container-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  .mdc-evolution-chip__checkmark-background {\n    @include feature-targeting.targets($feat-color) {\n      @if $color {\n        @include theme.property(background-color, $color);\n      }\n    }\n  }\n}\n\n///\n/// Sets the horizontal padding for the chip.\n/// @param {Number} $leading - The leading padding for the chip.\n/// @param {Number} $trailing [$leading] - The trailing padding for the chip.\n///\n@mixin horizontal-padding(\n  $leading,\n  $trailing: $leading,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  .mdc-evolution-chip__action--primary {\n    @include feature-targeting.targets($feat-structure) {\n      @include rtl.reflexive-property(padding, $leading, $trailing);\n    }\n  }\n}\n\n///\n/// Sets the horizontal padding for chips with a graphic.\n/// @param {Number} $graphic-leading - The leading padding for the graphic.\n/// @param {Number} $graphic-trailing - The trailing padding for the graphic.\n/// @param {Number} $primary-trailing - The trailing padding for the primary action.\n///\n@mixin with-graphic-horizontal-padding(\n  $graphic-leading,\n  $graphic-trailing,\n  $primary-trailing,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-evolution-chip--with-primary-graphic {\n    .mdc-evolution-chip__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          $graphic-leading,\n          $graphic-trailing\n        );\n      }\n    }\n\n    .mdc-evolution-chip__action--primary {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(padding, 0, $primary-trailing);\n      }\n    }\n  }\n}\n\n///\n/// Sets the horizontal padding for chips with a trailing action.\n/// @param {Number} $primary-leading - The leading padding for the primary action.\n/// @param {Number} $trailing-action-leading - The leading padding for the trailing action.\n/// @param {Number} $trailing-action-trailing - The trailing padding for the trailing action.\n///\n@mixin with-trailing-action-horizontal-padding(\n  $primary-leading,\n  $trailing-action-leading,\n  $trailing-action-trailing,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  &.mdc-evolution-chip--with-trailing-action {\n    .mdc-evolution-chip__action--trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          $trailing-action-leading,\n          $trailing-action-trailing\n        );\n      }\n    }\n\n    #{$ripple-target-trailing} {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-position(left, $trailing-action-leading);\n      }\n    }\n\n    .mdc-evolution-chip__action--primary {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(padding, $primary-leading, 0);\n      }\n    }\n  }\n}\n\n///\n/// Sets the horizontal padding for chips with a graphic and trailing action.\n/// @param {Number} $graphic-leading - The leading padding for the graphic.\n/// @param {Number} $graphic-trailing - The trailing padding for the graphic.\n/// @param {Number} $trailing-action-leading - The leading padding for the trailing action.\n/// @param {Number} $trailing-action-trailing - The trailing padding for the trailing action.\n///\n@mixin with-graphic-and-trailing-action-horizontal-padding(\n  $graphic-leading,\n  $graphic-trailing,\n  $trailing-action-leading,\n  $trailing-action-trailing,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n  &.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action {\n    .mdc-evolution-chip__graphic {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          $graphic-leading,\n          $graphic-trailing\n        );\n      }\n    }\n\n    .mdc-evolution-chip__action--trailing {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(\n          padding,\n          $trailing-action-leading,\n          $trailing-action-trailing\n        );\n      }\n    }\n\n    #{$ripple-target-trailing} {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-position(left, $trailing-action-leading);\n      }\n    }\n\n    .mdc-evolution-chip__action--primary {\n      @include feature-targeting.targets($feat-structure) {\n        @include rtl.reflexive-property(padding, 0, 0);\n      }\n    }\n  }\n}\n\n@mixin _container-elevation-theme($theme) {\n  @if map.get($theme, shadow) {\n    @include elevation-theme.shadow(map.get($theme, shadow));\n  }\n  @if map.get($theme, overlay-opacity) {\n    @include elevation-theme.overlay-opacity(map.get($theme, overlay-opacity));\n  }\n  // TODO(b/260053182): Remove setting overlay color after migration of customers\n  @if map.get($theme, overlay-color) {\n    @include elevation-theme.overlay-container-color(\n      map.get($theme, overlay-color)\n    );\n  }\n}\n\n// TODO(b/259913622): Use elevation's theme-style() mixin.\n@mixin _container-elevation($map) {\n  $default-state: state.get-default-state($map);\n  @if $default-state {\n    @include _container-elevation-theme($default-state);\n  }\n\n  @include _is-enabled() {\n    $enabled-state: state.get-enabled-state($map);\n    @if $enabled-state {\n      @include _container-elevation-theme($enabled-state);\n    }\n  }\n\n  @include ripple-theme.hover() {\n    $hover-state: state.get-hover-state($map);\n    @if $hover-state {\n      @include _container-elevation-theme($hover-state);\n    }\n  }\n\n  @include ripple-theme.focus() {\n    $focus-state: state.get-focus-state($map);\n    @if $focus-state {\n      @include _container-elevation-theme($focus-state);\n    }\n  }\n\n  @include ripple-theme.pressed() {\n    $pressed-state: state.get-pressed-state($map);\n    @if $pressed-state {\n      @include _container-elevation-theme($pressed-state);\n    }\n  }\n\n  @include _is-disabled() {\n    $disabled-state: state.get-disabled-state($map);\n    @if $disabled-state {\n      @include _container-elevation-theme($disabled-state);\n    }\n  }\n}\n\n@mixin _selected-container-elevation($map) {\n  @include _is-selected() {\n    @include _container-elevation($map);\n  }\n}\n\n@mixin _unselected-container-elevation($map) {\n  @include _is-unselected() {\n    @include _container-elevation($map);\n  }\n}\n\n@mixin _is-enabled() {\n  &:not(.mdc-evolution-chip--disabled) {\n    @content;\n  }\n}\n\n@mixin _is-disabled() {\n  &.mdc-evolution-chip--disabled {\n    @content;\n  }\n}\n\n@mixin _is-selected() {\n  &.mdc-evolution-chip--selected {\n    @content;\n  }\n}\n\n@mixin _is-unselected() {\n  &:not(.mdc-evolution-chip--selected) {\n    @content;\n  }\n}\n\n@mixin button-cursor($cursor) {\n  .mdc-evolution-chip__action {\n    cursor: $cursor;\n  }\n}\n","//\n// Copyright 2021 Google Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n//\n\n// stylelint-disable selector-class-pattern --\n// Selector '.mdc-*' should only be used in this project.\n\n@use 'sass:map';\n@use 'sass:math';\n@use 'sass:meta';\n@use '@material/density/functions' as density-functions;\n@use '@material/density/variables' as density-variables;\n@use '@material/dom/mixins' as dom-mixins;\n@use '@material/elevation/elevation-theme';\n@use '@material/feature-targeting/feature-targeting';\n@use '@material/focus-ring/focus-ring';\n@use '@material/ripple/ripple-theme';\n@use '@material/shape/mixins' as shape-mixins;\n@use '@material/theme/custom-properties';\n@use '@material/theme/state';\n@use '@material/theme/theme';\n@use '@material/theme/theme-color';\n@use '@material/typography/typography';\n@use './button-ripple';\n\n$height: 36px !default;\n$horizontal-padding: 8px !default;\n$contained-horizontal-padding: 16px !default;\n// For a contained button with an icon, the padding on the side of the\n// button with the icon.\n$contained-horizontal-padding-icon: 12px !default;\n\n$minimum-height: 24px !default;\n$maximum-height: $height !default;\n$density-scale: density-variables.$default-scale !default;\n$density-config: (\n  height: (\n    default: $height,\n    maximum: $maximum-height,\n    minimum: $minimum-height,\n  ),\n) !default;\n\n$shape-radius: small !default;\n\n$disabled-ink-color: rgba(theme-color.prop-value(on-surface), 0.38) !default;\n$disabled-container-color: rgba(\n  theme-color.prop-value(on-surface),\n  0.12\n) !default;\n\n@mixin theme-styles($theme, $resolver, $query: feature-targeting.all()) {\n  @include _label-text-typography(\n    (\n      family: map.get($theme, label-text-font),\n      size: map.get($theme, label-text-size),\n      tracking: map.get($theme, label-text-tracking),\n      weight: map.get($theme, label-text-weight),\n      transform: map.get($theme, label-text-transform),\n    ),\n    $query: $query\n  );\n\n  @include container-fill-color(\n    (\n      default: map.get($theme, container-color),\n      disabled: map.get($theme, disabled-container-color),\n    ),\n    $query: $query\n  );\n\n  @include ink-color(\n    (\n      default: map.get($theme, label-text-color),\n      hover: map.get($theme, hover-label-text-color),\n      focus: map.get($theme, focus-label-text-color),\n      pressed: map.get($theme, pressed-label-text-color),\n      disabled: map.get($theme, disabled-label-text-color),\n    ),\n    $query: $query\n  );\n\n  @include icon-color(\n    (\n      default: map.get($theme, with-icon-icon-color),\n      hover: map.get($theme, with-icon-hover-icon-color),\n      focus: map.get($theme, with-icon-focus-icon-color),\n      pressed: map.get($theme, with-icon-pressed-icon-color),\n      disabled: map.get($theme, with-icon-disabled-icon-color),\n    ),\n    $query: $query\n  );\n\n  $icon-size: map.get($theme, with-icon-icon-size);\n  @include _icon-size($icon-size, $query: $query);\n\n  @include _states-colors(\n    (\n      focus: map.get($theme, focus-state-layer-color),\n      hover: map.get($theme, hover-state-layer-color),\n      pressed: map.get($theme, pressed-state-layer-color),\n    ),\n    $query: $query\n  );\n\n  $hover-state-layer-opacity: map.get($theme, hover-state-layer-opacity);\n  $focus-state-layer-opacity: map.get($theme, focus-state-layer-opacity);\n  $pressed-state-layer-opacity: map.get($theme, pressed-state-layer-opacity);\n  @include ripple-theme.states-opacities(\n    $opacity-map: (\n      focus: $focus-state-layer-opacity,\n      hover: $hover-state-layer-opacity,\n      press: $pressed-state-layer-opacity,\n    ),\n    $ripple-target: button-ripple.$ripple-target,\n    $query: $query\n  );\n\n  $container-height: map.get($theme, container-height);\n  @include height($container-height, $query: $query);\n\n  $container-height-value: if(\n    custom-properties.is-custom-prop($container-height),\n    custom-properties.get-fallback($container-height),\n    $container-height\n  );\n\n  /// Token \"keep-touch-target\":\n  /// Prevent the increased touch target from being reseted if the\n  /// container-height differs from the default (36px)\n  $keep-touch-target: map.get($theme, keep-touch-target);\n  @if (not $keep-touch-target) and\n    ($container-height-value != null) and\n    ($container-height-value != $height)\n  {\n    @include _touch-target-reset($query: $query);\n  }\n\n  $shape: map.get($theme, container-shape);\n  @if $shape {\n    $container-height: if(\n      $container-height != null,\n      $container-height,\n      $height\n    );\n    @include _shape-radius-with-height(\n      $shape,\n      $height: $container-height,\n      $query: $query\n    );\n  }\n\n  @include _elevation(\n    $resolver,\n    $elevation-map: (\n      default: map.get($theme, container-elevation),\n      disabled: map.get($theme, disabled-container-elevation),\n      focus: map.get($theme, focus-container-elevation),\n      hover: map.get($theme, hover-container-elevation),\n      pressed: map.get($theme, pressed-container-elevation)\n    ),\n    $shadow-color: map.get($theme, container-shadow-color),\n    $query: $query\n  );\n}\n\n@function resolve-theme-elevation-keys($theme, $resolver) {\n  $elevation-resolver: map.get($resolver, elevation);\n  $shadow-color: map.get($theme, container-shadow-color);\n  @if $elevation-resolver == null or $shadow-color == null {\n    @return $theme;\n  }\n\n  $elevation-keys: (\n    container-elevation,\n    hover-container-elevation,\n    focus-container-elevation,\n    pressed-container-elevation,\n    disabled-container-elevation\n  );\n\n  @each $key in $elevation-keys {\n    $elevation: map.get($theme, $key);\n    @if $elevation != null {\n      $resolved-value: meta.call(\n        $resolver,\n        $elevation: $elevation,\n        $shadow-color: $shadow-color\n      );\n      // Update the key with the resolved value.\n      $theme: map.set($theme, $key, $resolved-value);\n    }\n  }\n  @return $theme;\n}\n\n///\n/// Sets ripple color for button.\n///\n@mixin ripple-states(\n  $color,\n  $opacity-map: null,\n  $query: feature-targeting.all()\n) {\n  @include ripple-theme.states(\n    $color: $color,\n    $opacity-map: $opacity-map,\n    $query: $query,\n    $ripple-target: button-ripple.$ripple-target\n  );\n}\n\n@mixin filled-accessible(\n  $container-fill-color,\n  $query: feature-targeting.all()\n) {\n  $fill-tone: theme-color.tone($container-fill-color);\n\n  @include container-fill-color($container-fill-color, $query);\n\n  @if ($fill-tone == 'dark') {\n    @include ink-color(text-primary-on-dark, $query);\n    @include ripple-states($color: text-primary-on-dark, $query: $query);\n  } @else {\n    @include ink-color(text-primary-on-light, $query);\n    @include ripple-states($color: text-primary-on-light, $query: $query);\n  }\n}\n\n///\n/// Sets the container fill color to the given color for an enabled button.\n/// @param {Color|map} $color-or-map - The desired container fill color,\n///     specified either as a flat value or a map of colors with states\n///     {default, hover, focus, pressed, disabled} as keys.\n///\n@mixin container-fill-color($color-or-map, $query: feature-targeting.all()) {\n  // :not(:disabled) is used to support link styled as button\n  // as link does not support :enabled style\n  &:not(:disabled) {\n    @include _container-fill-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _container-fill-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _container-fill-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _container-fill-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _container-fill-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the container fill color to the given color for a disabled button.\n/// @param {Color} $color - The desired container fill color.\n/// @deprecated - call `container-fill-color` instead with `disabled` as a map\n///     key.\n///\n@mixin disabled-container-fill-color($color, $query: feature-targeting.all()) {\n  @include container-fill-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the icon color to the given color for an enabled button.\n/// @param {Color} $color-or-map - The desired icon color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focus, pressed, disabled} as keys.\n///\n@mixin icon-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _icon-color(\n      state.get-default-state($color-or-map),\n      $query: $query\n    );\n\n    &:hover {\n      @include _icon-color(\n        state.get-hover-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.focus() {\n      @include _icon-color(\n        state.get-focus-state($color-or-map),\n        $query: $query\n      );\n    }\n\n    @include ripple-theme.active {\n      @include _icon-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _icon-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the icon color to the given color for a disabled button.\n/// @param {Color} $color - The desired icon color.\n/// @deprecated - call `icon-color` instead with `disabled` as a map key.\n///\n@mixin disabled-icon-color($color, $query: feature-targeting.all()) {\n  @include icon-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets the ink color to the given color for an enabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color-or-map - The desired ink color, specified either\n///     as a flat value or a map of colors with states\n///     {default, hover, focus, pressed, disabled} as keys.\n///\n@mixin ink-color($color-or-map, $query: feature-targeting.all()) {\n  &:not(:disabled) {\n    @include _ink-color(state.get-default-state($color-or-map), $query: $query);\n\n    &:hover {\n      @include _ink-color(state.get-hover-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.focus() {\n      @include _ink-color(state.get-focus-state($color-or-map), $query: $query);\n    }\n\n    @include ripple-theme.active {\n      @include _ink-color(\n        state.get-pressed-state($color-or-map),\n        $query: $query\n      );\n    }\n  }\n\n  &:disabled {\n    @include _ink-color(\n      state.get-disabled-state($color-or-map),\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets the ink color to the given color for a disabled button,\n/// and sets the icon color to the given color unless `mdc-button-icon-color`\n/// is also used.\n/// @param {Color} $color - The desired ink color.\n/// @deprecated - call `ink-color` instead with `disabled` as a map key.\n///\n@mixin disabled-ink-color($color, $query: feature-targeting.all()) {\n  @include ink-color(\n    (\n      disabled: $color,\n    ),\n    $query: $query\n  );\n}\n\n///\n/// Sets density scale for button.\n///\n/// @param {Number | String} $density-scale - Density scale value for component. Supported density scale values `-3`,\n///     `-2`, `-1`, `0`.\n///\n@mixin density($density-scale, $query: feature-targeting.all()) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include height($height, $query: $query);\n\n  @if $density-scale != 0 {\n    @include _touch-target-reset($query: $query);\n  }\n}\n\n///\n/// Resets touch target-related styles. This is called from the density mixin to\n/// automatically remove the increased touch target, since dense components\n/// don't have the same default a11y requirements.\n/// @access private\n///\n@mixin _touch-target-reset($query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .mdc-button__touch {\n    @include feature-targeting.targets($feat-structure) {\n      // Do not set display: none in case the touch target is <a> element.\n      height: 100%;\n    }\n  }\n}\n\n///\n/// Sets custom height for button.\n/// @param {Number} $height - Height of button in `px`.\n///\n@mixin height($height, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    @include theme.property(height, $height);\n  }\n}\n\n@mixin shape-radius(\n  $radius,\n  $rtl-reflexive: false,\n  $density-scale: $density-scale,\n  $query: feature-targeting.all()\n) {\n  $height: density-functions.prop-value(\n    $density-config: $density-config,\n    $density-scale: $density-scale,\n    $property-name: height,\n  );\n\n  @include _shape-radius-with-height($radius, $rtl-reflexive, $height, $query);\n}\n\n@mixin _shape-radius-with-height(\n  $radius,\n  $rtl-reflexive: false,\n  $height: $height,\n  $query: feature-targeting.all()\n) {\n  @include shape-mixins.radius(\n    $radius,\n    $rtl-reflexive,\n    $component-height: $height,\n    $query: $query\n  );\n\n  #{button-ripple.$ripple-target} {\n    @include shape-mixins.radius(\n      $radius,\n      $rtl-reflexive,\n      $component-height: $height,\n      $query: $query\n    );\n  }\n}\n\n///\n/// Sets horizontal padding to the given number.\n/// @param {Number} $padding\n/// @param {Number} $padding-icon [null] For buttons with an icon, the\n///     horizontal padding on the side with the icon, if different from\n///     $padding.\n///\n@mixin horizontal-padding(\n  $padding,\n  $padding-icon: null,\n  $query: feature-targeting.all()\n) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @include feature-targeting.targets($feat-structure) {\n    // $padding should be a single value; enforce it by specifying all 4 sides in the output\n    padding: 0 $padding 0 $padding;\n  }\n\n  @if $padding-icon != null {\n    &.mdc-button--icon-trailing {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding-icon 0 $padding;\n      }\n    }\n\n    &.mdc-button--icon-leading {\n      @include feature-targeting.targets($feat-structure) {\n        // $padding should be a single value; enforce it by specifying all 4\n        // sides in the output.\n        padding: 0 $padding 0 $padding-icon;\n      }\n    }\n  }\n}\n\n///\n/// Sets the button label to overflow as ellipsis\n///\n@mixin label-overflow-ellipsis($query: feature-targeting.all()) {\n  .mdc-button__label {\n    @include typography.overflow-ellipsis($query: $query);\n  }\n}\n\n///\n/// Add a visible outline to the button in high contrast mode.\n///\n@mixin outline-hcm-shim($query: feature-targeting.all()) {\n  &::before {\n    @include dom-mixins.transparent-border($query: $query);\n  }\n}\n\n///\n/// Includes ad-hoc high contrast mode support.\n/// @deprecated Use `outline-hcm-shim` for the outline button. The focus ring\n///     is provided by default.\n///\n@mixin high-contrast-mode-shim($query: feature-targeting.all()) {\n  @include outline-hcm-shim($query: $query);\n\n  // Link buttons apply focus to the contained link. Focus is indicated via the\n  // link since focus-within isn't supported by IE.\n  & .mdc-button__link:focus,\n  &:focus {\n    &::before {\n      @include focus-ring.focus-ring($query: $query);\n    }\n  }\n}\n\n///\n/// Sets the container fill color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _container-fill-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(background-color, $color);\n    }\n  }\n}\n\n///\n/// Sets the icon color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _icon-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-color) {\n        @include theme.property(color, $color);\n      }\n    }\n  }\n}\n\n@mixin _icon-size($size-px, $query: feature-targeting.all()) {\n  $feat-structure: feature-targeting.create-target($query, structure);\n\n  @if $size-px != null {\n    $size-rem: typography.px-to-rem($size-px);\n    .mdc-button__icon {\n      @include feature-targeting.targets($feat-structure) {\n        @include theme.property(font-size, $size-rem);\n        @include theme.property(width, $size-rem);\n        @include theme.property(height, $size-rem);\n      }\n    }\n  }\n}\n\n///\n/// Sets the ink color to the given color. This mixin should be\n/// wrapped in a selector that qualifies button state.\n/// @access private\n///\n@mixin _ink-color($color, $query: feature-targeting.all()) {\n  $feat-color: feature-targeting.create-target($query, color);\n\n  @if $color {\n    @include feature-targeting.targets($feat-color) {\n      @include theme.property(color, $color);\n    }\n  }\n}\n\n@mixin _states-colors($color-map, $query: feature-targeting.all()) {\n  $hover: map.get($color-map, hover);\n\n  $hover-value: if(\n    custom-properties.is-custom-prop($hover),\n    custom-properties.get-fallback($hover),\n    $hover\n  );\n  // TODO(b/191298796): support focused & pressed key colors.\n\n  @if $hover-value != null {\n    @include ripple-theme.states-base-color(\n      $color: $hover,\n      $ripple-target: button-ripple.$ripple-target,\n      $query: $query\n    );\n  }\n}\n\n@mixin _label-text-typography(\n  $typography-map,\n  $query: feature-targeting.all()\n) {\n  $feat-typography: feature-targeting.create-target($query, typography);\n\n  $family: map.get($typography-map, family);\n  $size: map.get($typography-map, size);\n  $tracking: map.get($typography-map, tracking);\n  $weight: map.get($typography-map, weight);\n  $transform: map.get($typography-map, transform);\n\n  @include feature-targeting.targets($feat-typography) {\n    @include theme.property(font-family, $family);\n    @include theme.property(font-size, $size);\n    @include theme.property(letter-spacing, $tracking);\n    @include theme.property(font-weight, $weight);\n    @include theme.property(text-transform, $transform);\n  }\n}\n\n@mixin _elevation(\n  $resolver,\n  $elevation-map,\n  $shadow-color,\n  $query: feature-targeting.all()\n) {\n  $elevation-resolver: map.get($resolver, elevation);\n\n  @if $shadow-color {\n    $default: state.get-default-state($elevation-map);\n    @if $default != null {\n      @include elevation-theme.with-resolver(\n        $elevation-resolver,\n        $elevation: $default,\n        $shadow-color: $shadow-color,\n        $query: $query\n      );\n    }\n\n    $focus: state.get-focus-state($elevation-map);\n    @if $focus != null {\n      @include ripple-theme.focus {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $focus,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $hover: state.get-hover-state($elevation-map);\n    @if $hover != null {\n      &:hover {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $hover,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $pressed: state.get-pressed-state($elevation-map);\n    @if $pressed != null {\n      @include ripple-theme.active {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $pressed,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n\n    $disabled: state.get-disabled-state($elevation-map);\n    @if $disabled != null {\n      &:disabled {\n        @include elevation-theme.with-resolver(\n          $elevation-resolver,\n          $elevation: $disabled,\n          $shadow-color: $shadow-color,\n          $query: $query\n        );\n      }\n    }\n  }\n}\n","@tailwind base;\n","html {\n  box-sizing: border-box;\n  font-size: 16px;\n  height: 100%;\n  overflow: hidden;\n  font-feature-settings: \"cv02\", \"cv03\", \"cv04\", \"cv11\", \"salt\", \"calt\", \"case\";\n  @apply font-sans leading-normal antialiased;\n}\n\nbody {\n  height: 100%;\n  letter-spacing: -0.006em;\n  @apply text-sm text-black;\n}\n\ndiv {\n  box-sizing: border-box;\n}\n\ninput, textarea {\n  box-sizing: content-box;\n  line-height: 1.5;\n}\n\nbutton:focus {\n  outline: unset !important;\n}\n\ncode {\n  background: var(--background-app-bar);\n  border-radius: var(--border-radius);\n  color: var(--text-color);\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;\n  font-size: 85%;\n  padding: .2em .4em;\n}\n\nblockquote {\n  background: rgba(var(--color-primary), 0.1);\n  border-left: 3px solid theme('backgroundColor.primary');\n  color: rgba(0, 0, 0, .87);\n  font-style: normal;\n  margin: 1em 0 1.5em;\n  padding: 1em 1.5em;\n\n  > * {\n    margin: 0;\n  }\n}\n","@tailwind base;\nhtml {\n  box-sizing: border-box;\n  font-size: 16px;\n  height: 100%;\n  overflow: hidden;\n  font-feature-settings: \"cv02\", \"cv03\", \"cv04\", \"cv11\", \"salt\", \"calt\", \"case\";\n  @apply font-sans leading-normal antialiased;\n}\n\nbody {\n  height: 100%;\n  letter-spacing: -0.006em;\n  @apply text-sm text-black;\n}\n\ndiv {\n  box-sizing: border-box;\n}\n\ninput, textarea {\n  box-sizing: content-box;\n  line-height: 1.5;\n}\n\nbutton:focus {\n  outline: unset !important;\n}\n\ncode {\n  background: var(--background-app-bar);\n  border-radius: var(--border-radius);\n  color: var(--text-color);\n  font-family: SFMono-Regular, Consolas, Liberation Mono, Menlo, monospace;\n  font-size: 85%;\n  padding: 0.2em 0.4em;\n}\n\nblockquote {\n  background: rgba(var(--color-primary), 0.1);\n  border-left: 3px solid theme(\"backgroundColor.primary\");\n  color: rgba(0, 0, 0, 0.87);\n  font-style: normal;\n  margin: 1em 0 1.5em;\n  padding: 1em 1.5em;\n}\nblockquote > * {\n  margin: 0;\n}\n\n@tailwind components;\n@tailwind utilities;\n.container {\n  padding-left: var(--padding-gutter);\n  padding-right: var(--padding-gutter);\n}\n@screen lg {\n  .container {\n    margin-left: auto;\n    margin-right: auto;\n    max-width: theme(\"screens.lg\");\n    width: 100%;\n  }\n}\n\n.card {\n  @apply rounded shadow bg-foreground;\n}\n\n.avatar {\n  @apply h-10 w-10 object-cover rounded-full bg-hover;\n}\n\n.hidden-input {\n  @apply border-2 border-solid border-transparent py-1 px-3 rounded;\n}\n.hidden-input:focus {\n  @apply border-primary outline-none;\n}\n.hidden-input.empty {\n  @apply border-primary;\n}\n\n.bg-pattern {\n  background: linear-gradient(135deg, var(--background-base) 22px, var(--background-hover) 22px, var(--background-hover) 24px, transparent 24px, transparent 67px, var(--background-hover) 67px, var(--background-hover) 69px, transparent 69px), linear-gradient(225deg, var(--background-base) 22px, var(--background-hover) 22px, var(--background-hover) 24px, transparent 24px, transparent 67px, var(--background-hover) 67px, var(--background-hover) 69px, transparent 69px) 0 64px;\n  background-color: var(--background-base);\n  background-size: 64px 128px;\n}\n\n.trans-ease-out {\n  transition: all 400ms cubic-bezier(0.25, 0.8, 0.25, 1);\n}\n\n.trans-shadow {\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\n}","@tailwind utilities;\n","@import \"./var.scss\";\r\n\r\n.container {\r\n  padding-left: var(--padding-gutter);\r\n  padding-right: var(--padding-gutter);\r\n\r\n  @screen lg {\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    max-width: theme('screens.lg');\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.card {\r\n  @apply rounded shadow bg-foreground;\r\n}\r\n\r\n.avatar {\r\n  @apply h-10 w-10 object-cover rounded-full bg-hover;\r\n}\r\n\r\n.hidden-input {\r\n  @apply border-2 border-solid border-transparent py-1 px-3 rounded;\r\n\r\n  &:focus {\r\n    @apply border-primary outline-none;\r\n  }\r\n\r\n  &.empty {\r\n    @apply border-primary;\r\n  }\r\n}\r\n\r\n.bg-pattern {\r\n  background: linear-gradient(135deg, var(--background-base) 22px, var(--background-hover) 22px, var(--background-hover) 24px, transparent 24px, transparent 67px, var(--background-hover) 67px, var(--background-hover) 69px, transparent 69px),\r\n  linear-gradient(225deg, var(--background-base) 22px, var(--background-hover) 22px, var(--background-hover) 24px, transparent 24px, transparent 67px, var(--background-hover) 67px, var(--background-hover) 69px, transparent 69px) 0 64px;\r\n  background-color: var(--background-base);\r\n  background-size: 64px 128px;\r\n}\r\n\r\n// Transitions\r\n\r\n.trans-ease-out {\r\n  transition: $swift-ease-out;\r\n}\r\n\r\n.trans-shadow {\r\n  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);\r\n}\r\n","// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$xsmall: 'max-width: 599px';\n$small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index main list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$toggle-padding: 8px !default;\n// Width and height of input toggles\n$toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,116,117,118,121,123]}