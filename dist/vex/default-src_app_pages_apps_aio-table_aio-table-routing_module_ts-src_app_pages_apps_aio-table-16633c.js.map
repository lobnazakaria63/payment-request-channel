{"version":3,"file":"default-src_app_pages_apps_aio-table_aio-table-routing_module_ts-src_app_pages_apps_aio-table-16633c.js","mappings":"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","sources":["./src/app/pages/apps/aio-table/aio-table-routing.module.ts","./src/app/pages/apps/aio-table/aio-table.component.ts","./src/app/pages/apps/aio-table/aio-table.component.html","./src/app/pages/apps/aio-table/customer-create-update/customer-create-update.component.ts","./src/app/pages/apps/aio-table/customer-create-update/customer-create-update.component.html","./src/app/pages/apps/aio-table/customer-create-update/customer-create-update.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { QuicklinkModule } from 'ngx-quicklink';\r\nimport { VexRoutes } from '../../../../@vex/interfaces/vex-route.interface';\r\nimport { AioTableComponent } from './aio-table.component';\r\n\r\n\r\nconst routes: VexRoutes = [\r\n  {\r\n    path: '',\r\n    component: AioTableComponent,\r\n    data: {\r\n      toolbarShadowEnabled: false\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule, QuicklinkModule]\r\n})\r\nexport class AioTableRoutingModule {\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ViewChild } from '@angular/core';\r\nimport { Observable, of, ReplaySubject } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Customer } from './interfaces/customer.model';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { TableColumn } from '../../../../@vex/interfaces/table-column.interface';\r\nimport { aioTableData, aioTableLabels } from '../../../../static-data/aio-table-data';\r\nimport { CustomerCreateUpdateComponent } from './customer-create-update/customer-create-update.component';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { fadeInUp400ms } from '../../../../@vex/animations/fade-in-up.animation';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS, MatFormFieldDefaultOptions } from '@angular/material/form-field';\r\nimport { stagger40ms } from '../../../../@vex/animations/stagger.animation';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\r\nimport { MatSelectChange } from '@angular/material/select';\r\n\r\n\r\n@UntilDestroy()\r\n@Component({\r\n  selector: 'vex-aio-table',\r\n  templateUrl: './aio-table.component.html',\r\n  styleUrls: ['./aio-table.component.scss'],\r\n  animations: [\r\n    fadeInUp400ms,\r\n    stagger40ms\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: {\r\n        appearance: 'fill'\r\n      } as MatFormFieldDefaultOptions\r\n    }\r\n  ]\r\n})\r\nexport class AioTableComponent implements OnInit, AfterViewInit {\r\n\r\n  layoutCtrl = new UntypedFormControl('boxed');\r\n\r\n  /**\r\n   * Simulating a service with HTTP that returns Observables\r\n   * You probably want to remove this and do all requests in a service with HTTP\r\n   */\r\n  subject$: ReplaySubject<Customer[]> = new ReplaySubject<Customer[]>(1);\r\n  data$: Observable<Customer[]> = this.subject$.asObservable();\r\n  customers: Customer[];\r\n\r\n  @Input()\r\n  columns: TableColumn<Customer>[] = [\r\n    { label: 'Checkbox', property: 'checkbox', type: 'checkbox', visible: true },\r\n    { label: 'Image', property: 'image', type: 'image', visible: true },\r\n    { label: 'Name', property: 'name', type: 'text', visible: true, cssClasses: ['font-medium'] },\r\n    { label: 'First Name', property: 'firstName', type: 'text', visible: false },\r\n    { label: 'Last Name', property: 'lastName', type: 'text', visible: false },\r\n    { label: 'Contact', property: 'contact', type: 'button', visible: true },\r\n    { label: 'Address', property: 'address', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Street', property: 'street', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Zipcode', property: 'zipcode', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'City', property: 'city', type: 'text', visible: false, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Phone', property: 'phoneNumber', type: 'text', visible: true, cssClasses: ['text-secondary', 'font-medium'] },\r\n    { label: 'Labels', property: 'labels', type: 'button', visible: true },\r\n    { label: 'Actions', property: 'actions', type: 'button', visible: true }\r\n  ];\r\n  pageSize = 10;\r\n  pageSizeOptions: number[] = [5, 10, 20, 50];\r\n  dataSource: MatTableDataSource<Customer> | null;\r\n  selection = new SelectionModel<Customer>(true, []);\r\n  searchCtrl = new UntypedFormControl();\r\n\r\n  labels = aioTableLabels;\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  get visibleColumns() {\r\n    return this.columns.filter(column => column.visible).map(column => column.property);\r\n  }\r\n\r\n  /**\r\n   * Example on how to get data and pass it to the table - usually you would want a dedicated service with a HTTP request for this\r\n   * We are simulating this request here.\r\n   */\r\n  getData() {\r\n    return of(aioTableData.map(customer => new Customer(customer)));\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getData().subscribe(customers => {\r\n      this.subject$.next(customers);\r\n    });\r\n\r\n    this.dataSource = new MatTableDataSource();\r\n\r\n    this.data$.pipe(\r\n      filter<Customer[]>(Boolean)\r\n    ).subscribe(customers => {\r\n      this.customers = customers;\r\n      this.dataSource.data = customers;\r\n    });\r\n\r\n    this.searchCtrl.valueChanges.pipe(\r\n      untilDestroyed(this)\r\n    ).subscribe(value => this.onFilterChange(value));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  createCustomer() {\r\n    this.dialog.open(CustomerCreateUpdateComponent).afterClosed().subscribe((customer: Customer) => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (customer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        this.customers.unshift(new Customer(customer));\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  updateCustomer(customer: Customer) {\r\n    this.dialog.open(CustomerCreateUpdateComponent, {\r\n      data: customer\r\n    }).afterClosed().subscribe(updatedCustomer => {\r\n      /**\r\n       * Customer is the updated customer (if the user pressed Save - otherwise it's null)\r\n       */\r\n      if (updatedCustomer) {\r\n        /**\r\n         * Here we are updating our local array.\r\n         * You would probably make an HTTP request here.\r\n         */\r\n        const index = this.customers.findIndex((existingCustomer) => existingCustomer.id === updatedCustomer.id);\r\n        this.customers[index] = new Customer(updatedCustomer);\r\n        this.subject$.next(this.customers);\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCustomer(customer: Customer) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    this.customers.splice(this.customers.findIndex((existingCustomer) => existingCustomer.id === customer.id), 1);\r\n    this.selection.deselect(customer);\r\n    this.subject$.next(this.customers);\r\n  }\r\n\r\n  deleteCustomers(customers: Customer[]) {\r\n    /**\r\n     * Here we are updating our local array.\r\n     * You would probably make an HTTP request here.\r\n     */\r\n    customers.forEach(c => this.deleteCustomer(c));\r\n  }\r\n\r\n  onFilterChange(value: string) {\r\n    if (!this.dataSource) {\r\n      return;\r\n    }\r\n    value = value.trim();\r\n    value = value.toLowerCase();\r\n    this.dataSource.filter = value;\r\n  }\r\n\r\n  toggleColumnVisibility(column, event) {\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n    column.visible = !column.visible;\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selection.clear() :\r\n      this.dataSource.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  trackByProperty<T>(index: number, column: TableColumn<T>) {\r\n    return column.property;\r\n  }\r\n\r\n  onLabelChange(change: MatSelectChange, row: Customer) {\r\n    const index = this.customers.findIndex(c => c === row);\r\n    this.customers[index].labels = change.value;\r\n    this.subject$.next(this.customers);\r\n  }\r\n}\r\n","<vex-page-layout>\r\n\r\n  <vex-page-layout-header class=\"pb-16 flex flex-col items-start justify-center\">\r\n    <div [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n         [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n         class=\"w-full flex flex-col sm:flex-row justify-between\">\r\n      <div>\r\n        <h1 class=\"title mt-0 mb-1\">All-In-One Table</h1>\r\n        <vex-breadcrumbs [crumbs]=\"['Apps', 'All-In-One Table']\"></vex-breadcrumbs>\r\n      </div>\r\n\r\n      <div class=\"hidden sm:block\">\r\n        <mat-button-toggle-group [formControl]=\"layoutCtrl\" class=\"mt-4 sm:mt-0\">\r\n          <mat-button-toggle value=\"boxed\">Boxed</mat-button-toggle>\r\n          <mat-button-toggle value=\"fullwidth\">Full-Width</mat-button-toggle>\r\n        </mat-button-toggle-group>\r\n      </div>\r\n    </div>\r\n  </vex-page-layout-header>\r\n\r\n  <vex-page-layout-content [class.container]=\"layoutCtrl.value === 'boxed'\"\r\n                           [class.px-gutter]=\"layoutCtrl.value === 'fullwidth'\"\r\n                           class=\"-mt-6\">\r\n\r\n    <div class=\"card overflow-auto -mt-16\">\r\n      <div class=\"bg-app-bar px-6 h-16 border-b sticky left-0 flex items-center\">\r\n        <h2 class=\"title my-0 ltr:pr-4 rtl:pl-4 ltr:mr-4 rtl:ml-4 ltr:border-r rtl:border-l hidden sm:block flex-none\">\r\n          <span *ngIf=\"selection.isEmpty()\">Customers</span>\r\n          <span *ngIf=\"selection.hasValue()\">{{ selection.selected.length }}\r\n            Customer<span *ngIf=\"selection.selected.length > 1\">s</span> selected</span>\r\n        </h2>\r\n\r\n        <div *ngIf=\"selection.hasValue()\" class=\"mr-4 pr-4 border-r flex-none\">\r\n          <button (click)=\"deleteCustomers(selection.selected)\"\r\n                  color=\"primary\"\r\n                  mat-icon-button\r\n                  matTooltip=\"Delete selected\"\r\n                  type=\"button\">\r\n            <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n          </button>\r\n\r\n          <button color=\"primary\" mat-icon-button matTooltip=\"Another action\" type=\"button\">\r\n            <mat-icon svgIcon=\"mat:folder\"></mat-icon>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"bg-foreground rounded-full border px-4 max-w-[300px] flex-auto flex items-center border border-gray-300\">\r\n          <mat-icon class=\"icon-sm text-secondary\" svgIcon=\"mat:search\"></mat-icon>\r\n          <input [formControl]=\"searchCtrl\"\r\n                 class=\"px-4 py-2 border-0 outline-none w-full bg-transparent\"\r\n                 placeholder=\"Search...\"\r\n                 type=\"search\">\r\n        </div>\r\n\r\n        <span class=\"flex-1\"></span>\r\n\r\n        <button [matMenuTriggerFor]=\"columnFilterMenu\"\r\n                class=\"ml-4 flex-none\"\r\n                mat-icon-button\r\n                matTooltip=\"Filter Columns\"\r\n                type=\"button\">\r\n          <mat-icon svgIcon=\"mat:filter_list\"></mat-icon>\r\n        </button>\r\n\r\n        <button (click)=\"createCustomer()\"\r\n                class=\"ml-4 flex-none\"\r\n                color=\"primary\"\r\n                mat-mini-fab\r\n                matTooltip=\"Add Customer\"\r\n                type=\"button\">\r\n          <mat-icon svgIcon=\"mat:add\"></mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table @stagger [dataSource]=\"dataSource\" class=\"w-full\" mat-table matSort>\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Checkbox Column -->\r\n        <ng-container matColumnDef=\"checkbox\">\r\n          <th *matHeaderCellDef mat-header-cell>\r\n            <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                          [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                          [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </th>\r\n          <td *matCellDef=\"let row\" class=\"w-4\" mat-cell>\r\n            <mat-checkbox (change)=\"$event ? selection.toggle(row) : null\"\r\n                          (click)=\"$event.stopPropagation()\"\r\n                          [checked]=\"selection.isSelected(row)\"\r\n                          color=\"primary\">\r\n            </mat-checkbox>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Image Column -->\r\n        <ng-container matColumnDef=\"image\">\r\n          <th *matHeaderCellDef mat-header-cell></th>\r\n          <td *matCellDef=\"let row\" class=\"w-8 min-w-8 pr-0\" mat-cell>\r\n            <img [src]=\"row['imageSrc']\" class=\"avatar h-8 w-8 align-middle\">\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Text Columns -->\r\n        <ng-container *ngFor=\"let column of columns; trackBy: trackByProperty\">\r\n          <ng-container *ngIf=\"column.type === 'text'\" [matColumnDef]=\"column.property\">\r\n            <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header> {{ column.label }}</th>\r\n            <td *matCellDef=\"let row\" [ngClass]=\"column.cssClasses\" mat-cell>{{ row[column.property] }}</td>\r\n          </ng-container>\r\n        </ng-container>\r\n\r\n        <!-- Contact Column -->\r\n        <ng-container matColumnDef=\"contact\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div class=\"flex\">\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 p-0 leading-none flex items-center justify-center hover:bg-hover text-primary bg-primary/10\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:phone\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-teal bg-teal/10\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:mail\"></mat-icon>\r\n              </a>\r\n\r\n              <a (click)=\"$event.stopPropagation()\"\r\n                 class=\"w-8 h-8 p-0 leading-none flex items-center justify-center ml-1 hover:bg-hover text-green bg-green/10\"\r\n                 mat-icon-button>\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:map\"></mat-icon>\r\n              </a>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Label Column -->\r\n        <ng-container matColumnDef=\"labels\">\r\n          <th *matHeaderCellDef class=\"uppercase\" mat-header-cell mat-sort-header>Labels</th>\r\n          <td *matCellDef=\"let row\" mat-cell>\r\n            <div (click)=\"$event.stopPropagation()\" class=\"flex items-center gap-1\">\r\n              <div *ngFor=\"let label of row.labels\"\r\n                   [ngClass]=\"[label.textClass, label.bgClass]\"\r\n                   class=\"rounded px-2 py-1 font-medium text-xs flex-none\">\r\n                {{ label.text }}\r\n              </div>\r\n              <div class=\"text-secondary bg-base text-hint cursor-pointer hover:bg-hover flex-none flex items-center justify-center\">\r\n                <mat-icon class=\"icon-sm\" svgIcon=\"mat:add\"></mat-icon>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"actions\">\r\n          <th *matHeaderCellDef mat-header-cell mat-sort-header></th>\r\n          <td *matCellDef=\"let row\" class=\"w-10 text-secondary\" mat-cell>\r\n            <button (click)=\"$event.stopPropagation()\"\r\n                    [matMenuTriggerData]=\"{ customer: row }\"\r\n                    [matMenuTriggerFor]=\"actionsMenu\"\r\n                    mat-icon-button\r\n                    type=\"button\">\r\n              <mat-icon svgIcon=\"mat:more_horiz\"></mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr *matHeaderRowDef=\"visibleColumns\" mat-header-row></tr>\r\n        <tr (click)=\"updateCustomer(row)\"\r\n            *matRowDef=\"let row; columns: visibleColumns;\"\r\n            @fadeInUp\r\n            class=\"hover:bg-hover trans-ease-out cursor-pointer\"\r\n            mat-row></tr>\r\n      </table>\r\n\r\n      <mat-paginator [pageSizeOptions]=\"pageSizeOptions\" [pageSize]=\"pageSize\" class=\"sticky left-0\"></mat-paginator>\r\n    </div>\r\n\r\n  </vex-page-layout-content>\r\n\r\n</vex-page-layout>\r\n\r\n<mat-menu #columnFilterMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button (click)=\"toggleColumnVisibility(column, $event)\" *ngFor=\"let column of columns\"\r\n          class=\"mat-menu-item block\">\r\n    <mat-checkbox (click)=\"$event.stopPropagation()\" [(ngModel)]=\"column.visible\" color=\"primary\">\r\n      {{ column.label }}\r\n    </mat-checkbox>\r\n  </button>\r\n</mat-menu>\r\n\r\n<mat-menu #actionsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <ng-template let-customer=\"customer\" matMenuContent>\r\n    <button (click)=\"updateCustomer(customer)\" mat-menu-item>\r\n      <mat-icon svgIcon=\"mat:edit\"></mat-icon>\r\n      <span>Modify</span>\r\n    </button>\r\n    <button (click)=\"deleteCustomer(customer)\" mat-menu-item>\r\n      <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n      <span>Delete</span>\r\n    </button>\r\n  </ng-template>\r\n</mat-menu>\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Customer } from '../interfaces/customer.model';\r\n\r\n@Component({\r\n  selector: 'vex-customer-create-update',\r\n  templateUrl: './customer-create-update.component.html',\r\n  styleUrls: ['./customer-create-update.component.scss']\r\n})\r\nexport class CustomerCreateUpdateComponent implements OnInit {\r\n\r\n  static id = 100;\r\n\r\n  form: UntypedFormGroup;\r\n  mode: 'create' | 'update' = 'create';\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) public defaults: any,\r\n              private dialogRef: MatDialogRef<CustomerCreateUpdateComponent>,\r\n              private fb: UntypedFormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.defaults) {\r\n      this.mode = 'update';\r\n    } else {\r\n      this.defaults = {} as Customer;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      id: [CustomerCreateUpdateComponent.id++],\r\n      imageSrc: this.defaults.imageSrc,\r\n      firstName: [this.defaults.firstName || ''],\r\n      lastName: [this.defaults.lastName || ''],\r\n      street: this.defaults.street || '',\r\n      city: this.defaults.city || '',\r\n      zipcode: this.defaults.zipcode || '',\r\n      phoneNumber: this.defaults.phoneNumber || '',\r\n      notes: this.defaults.notes || ''\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.mode === 'create') {\r\n      this.createCustomer();\r\n    } else if (this.mode === 'update') {\r\n      this.updateCustomer();\r\n    }\r\n  }\r\n\r\n  createCustomer() {\r\n    const customer = this.form.value;\r\n\r\n    if (!customer.imageSrc) {\r\n      customer.imageSrc = 'assets/img/avatars/1.jpg';\r\n    }\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  updateCustomer() {\r\n    const customer = this.form.value;\r\n    customer.id = this.defaults.id;\r\n\r\n    this.dialogRef.close(customer);\r\n  }\r\n\r\n  isCreateMode() {\r\n    return this.mode === 'create';\r\n  }\r\n\r\n  isUpdateMode() {\r\n    return this.mode === 'update';\r\n  }\r\n}\r\n","<form (ngSubmit)=\"save()\" [formGroup]=\"form\">\r\n  <div class=\"flex items-center\" mat-dialog-title>\r\n    <img *ngIf=\"form.get('imageSrc').value\" [src]=\"form.get('imageSrc').value\" class=\"avatar mr-5\">\r\n\r\n    <h2 *ngIf=\"form.get('firstName').value || form.get('lastName').value\"\r\n        class=\"headline m-0 flex-auto\">{{ form.get('firstName').value + ' ' + form.get('lastName').value }}</h2>\r\n    <h2 *ngIf=\"!form.get('firstName').value && !form.get('lastName').value\"\r\n        class=\"headline m-0 flex-auto\">New Customer</h2>\r\n\r\n    <button [matMenuTriggerFor]=\"settingsMenu\" class=\"text-secondary\" mat-icon-button type=\"button\">\r\n      <mat-icon svgIcon=\"mat:more_vert\"></mat-icon>\r\n    </button>\r\n\r\n    <button class=\"text-secondary\" mat-dialog-close mat-icon-button type=\"button\">\r\n      <mat-icon svgIcon=\"mat:close\"></mat-icon>\r\n    </button>\r\n  </div>\r\n\r\n  <mat-divider class=\"text-border\"></mat-divider>\r\n\r\n  <mat-dialog-content class=\"flex flex-col\">\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>First Name</mat-label>\r\n        <input cdkFocusInitial formControlName=\"firstName\" matInput>\r\n\r\n        <mat-icon matPrefix svgIcon=\"mat:person\"></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>Last Name</mat-label>\r\n        <input formControlName=\"lastName\" matInput>\r\n\r\n        <mat-icon matPrefix svgIcon=\"mat:person\"></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Street</mat-label>\r\n      <input formControlName=\"street\" matInput>\r\n\r\n      <mat-icon matPrefix svgIcon=\"mat:edit_location\"></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <div class=\"flex flex-col sm:flex-row\">\r\n      <mat-form-field class=\"flex-auto\">\r\n        <mat-label>Zipcode</mat-label>\r\n        <input formControlName=\"zipcode\" matInput>\r\n\r\n        <mat-icon matPrefix svgIcon=\"mat:my_location\"></mat-icon>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field class=\"sm:ml-6 flex-auto\">\r\n        <mat-label>City</mat-label>\r\n        <input formControlName=\"city\" matInput>\r\n\r\n        <mat-icon matPrefix svgIcon=\"mat:location_city\"></mat-icon>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Phone Number</mat-label>\r\n      <input formControlName=\"phoneNumber\" matInput>\r\n\r\n      <mat-icon matPrefix svgIcon=\"mat:phone\"></mat-icon>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field class=\"flex-auto\">\r\n      <mat-label>Notes</mat-label>\r\n      <textarea formControlName=\"notes\" matInput></textarea>\r\n    </mat-form-field>\r\n  </mat-dialog-content>\r\n\r\n  <mat-dialog-actions align=\"end\">\r\n    <button mat-button mat-dialog-close type=\"button\">Cancel</button>\r\n    <button *ngIf=\"isCreateMode()\" color=\"primary\" mat-flat-button type=\"submit\">Create Customer</button>\r\n    <button *ngIf=\"isUpdateMode()\" color=\"primary\" mat-flat-button type=\"submit\">Update Customer</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n\r\n<mat-menu #settingsMenu=\"matMenu\" xPosition=\"before\" yPosition=\"below\">\r\n  <button mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:print\"></mat-icon>\r\n    <span>Print</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:download\"></mat-icon>\r\n    <span>Export</span>\r\n  </button>\r\n\r\n  <button mat-menu-item>\r\n    <mat-icon svgIcon=\"mat:delete\"></mat-icon>\r\n    <span>Delete</span>\r\n  </button>\r\n</mat-menu>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { CustomerCreateUpdateComponent } from './customer-create-update.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatMenuModule,\r\n\r\n    MatDividerModule\r\n  ],\r\n  declarations: [CustomerCreateUpdateComponent],\r\n  exports: [CustomerCreateUpdateComponent]\r\n})\r\nexport class CustomerCreateUpdateModule {\r\n}\r\n"],"names":["RouterModule","QuicklinkModule","AioTableComponent","routes","path","component","data","toolbarShadowEnabled","AioTableRoutingModule","forChild","imports","exports","of","ReplaySubject","filter","Customer","MatTableDataSource","MatPaginator","MatSort","aioTableData","aioTableLabels","CustomerCreateUpdateComponent","SelectionModel","fadeInUp400ms","MAT_FORM_FIELD_DEFAULT_OPTIONS","stagger40ms","UntypedFormControl","UntilDestroy","untilDestroyed","i0","ctx_r23","ctx_r26","$event","constructor","dialog","subject$","asObservable","label","property","type","visible","cssClasses","visibleColumns","columns","column","map","getData","customer","ngOnInit","subscribe","customers","next","dataSource","data$","pipe","Boolean","searchCtrl","valueChanges","value","onFilterChange","ngAfterViewInit","paginator","sort","createCustomer","open","afterClosed","unshift","updateCustomer","updatedCustomer","index","findIndex","existingCustomer","id","deleteCustomer","splice","selection","deselect","deleteCustomers","forEach","c","trim","toLowerCase","toggleColumnVisibility","event","stopPropagation","stopImmediatePropagation","isAllSelected","numSelected","selected","length","numRows","masterToggle","clear","row","select","trackByProperty","onLabelChange","change","labels","selectors","viewQuery","provide","useValue","appearance","decls","vars","consts","template","ctx","MAT_DIALOG_DATA","defaults","dialogRef","fb","mode","form","group","imageSrc","firstName","lastName","street","city","zipcode","phoneNumber","notes","save","close","isCreateMode","isUpdateMode","CommonModule","ReactiveFormsModule","MatButtonModule","MatDialogModule","MatIconModule","MatInputModule","MatRadioModule","MatSelectModule","MatMenuModule","MatDividerModule","CustomerCreateUpdateModule","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}