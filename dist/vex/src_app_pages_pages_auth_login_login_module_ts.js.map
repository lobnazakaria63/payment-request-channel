{"version":3,"file":"src_app_pages_pages_auth_login_login_module_ts.js","mappings":"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","sources":["./src/app/pages/pages/auth/login/login-routing.module.ts","./src/app/pages/pages/auth/login/login.component.ts","./src/app/pages/pages/auth/login/login.component.html","./src/app/pages/pages/auth/login/login.module.ts","./node_modules/@angular/material/fesm2020/snack-bar.mjs"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { QuicklinkModule } from 'ngx-quicklink';\nimport { LoginComponent } from './login.component';\nimport { VexRoutes } from '../../../../../@vex/interfaces/vex-route.interface';\n\n\nconst routes: VexRoutes = [\n  {\n    path: '',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule, QuicklinkModule]\n})\nexport class LoginRoutingModule {\n}\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { fadeInUp400ms } from '../../../../../@vex/animations/fade-in-up.animation';\n\n@Component({\n  selector: 'vex-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    fadeInUp400ms\n  ]\n})\nexport class LoginComponent implements OnInit {\n\n  form: UntypedFormGroup;\n\n  inputType = 'password';\n  visible = false;\n\n  constructor(private router: Router,\n              private fb: UntypedFormBuilder,\n              private cd: ChangeDetectorRef,\n              private snackbar: MatSnackBar\n  ) {}\n\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n\n  send() {\n    this.router.navigate(['/']);\n    this.snackbar.open('Lucky you! Looks like you didn\\'t need a password or email address! For a real application we provide validators to prevent this. ;)', 'LOL THANKS', {\n      duration: 10000\n    });\n  }\n\n  toggleVisibility() {\n    if (this.visible) {\n      this.inputType = 'password';\n      this.visible = false;\n      this.cd.markForCheck();\n    } else {\n      this.inputType = 'text';\n      this.visible = true;\n      this.cd.markForCheck();\n    }\n  }\n}\n","<div class=\"w-full h-full bg-pattern flex flex-col items-center justify-center\">\n  <div @fadeInUp class=\"card overflow-hidden w-full max-w-md\">\n    <div class=\"p-6 pb-0 flex flex-col items-center justify-center\">\n      <div class=\"fill-current text-center\">\n        <img class=\"w-16\" src=\"assets/img/demo/logo.svg\">\n      </div>\n    </div>\n\n    <div class=\"text-center mt-4\">\n      <h2 class=\"title m-0\">Welcome back</h2>\n      <h4 class=\"body-2 text-secondary m-0\">Sign in with your credentials below.</h4>\n    </div>\n\n    <div [formGroup]=\"form\" class=\"p-6 flex flex-col gap-4\">\n      <div class=\"flex flex-col\">\n        <mat-form-field class=\"flex-1\">\n          <mat-label>E-Mail</mat-label>\n          <input formControlName=\"email\" matInput required>\n          <mat-error *ngIf=\"form.get('email').hasError('required')\">We need an email address to log you in</mat-error>\n        </mat-form-field>\n        <mat-form-field class=\"flex-1\">\n          <mat-label>Password</mat-label>\n          <input [type]=\"inputType\" formControlName=\"password\" matInput required>\n          <button (click)=\"toggleVisibility()\" mat-icon-button matSuffix matTooltip=\"Toggle Visibility\" type=\"button\">\n            <mat-icon *ngIf=\"visible\" svgIcon=\"mat:visibility\"></mat-icon>\n            <mat-icon *ngIf=\"!visible\" svgIcon=\"mat:visibility_off\"></mat-icon>\n          </button>\n          <mat-hint>Click the eye to toggle visibility</mat-hint>\n          <mat-error *ngIf=\"form.get('password').hasError('required')\">We need a password to log you in</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"flex items-center justify-between\">\n        <mat-checkbox class=\"caption\" color=\"primary\">Remember Me</mat-checkbox>\n        <a [routerLink]=\"['/forgot-password']\" class=\"caption\">Forgot Password?</a>\n      </div>\n\n      <button (click)=\"send()\" color=\"primary\" mat-raised-button type=\"button\">\n        SIGN IN\n      </button>\n\n      <p class=\"text-secondary text-center\">\n        Don't have an account?<br/>\n        <a [routerLink]=\"['/register']\">Click here to create one</a>\n      </p>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n    MatInputModule,\n    MatIconModule,\n    MatSnackBarModule,\n\n    MatTooltipModule,\n    MatButtonModule,\n    MatCheckboxModule\n  ]\n})\nexport class LoginModule {\n}\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, ViewChild, NgModule, Injector, TemplateRef, Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport * as i3$1 from '@angular/cdk/portal';\nimport { BasePortalOutlet, CdkPortalOutlet, PortalModule, ComponentPortal, TemplatePortal } from '@angular/cdk/portal';\nimport * as i1 from '@angular/cdk/platform';\nimport { take, takeUntil } from 'rxjs/operators';\nimport * as i2$1 from '@angular/cdk/a11y';\nimport * as i3$2 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i1$1 from '@angular/cdk/overlay';\nimport { OverlayModule, OverlayConfig } from '@angular/cdk/overlay';\nimport { MatCommonModule } from '@angular/material/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nclass MatSnackBarRef {\n    constructor(containerInstance, _overlayRef) {\n        this._overlayRef = _overlayRef;\n        /** Subject for notifying the user that the snack bar has been dismissed. */\n        this._afterDismissed = new Subject();\n        /** Subject for notifying the user that the snack bar has opened and appeared. */\n        this._afterOpened = new Subject();\n        /** Subject for notifying the user that the snack bar action was called. */\n        this._onAction = new Subject();\n        /** Whether the snack bar was dismissed using the action button. */\n        this._dismissedByAction = false;\n        this.containerInstance = containerInstance;\n        containerInstance._onExit.subscribe(() => this._finishDismiss());\n    }\n    /** Dismisses the snack bar. */\n    dismiss() {\n        if (!this._afterDismissed.closed) {\n            this.containerInstance.exit();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /** Marks the snackbar action clicked. */\n    dismissWithAction() {\n        if (!this._onAction.closed) {\n            this._dismissedByAction = true;\n            this._onAction.next();\n            this._onAction.complete();\n            this.dismiss();\n        }\n        clearTimeout(this._durationTimeoutId);\n    }\n    /**\n     * Marks the snackbar action clicked.\n     * @deprecated Use `dismissWithAction` instead.\n     * @breaking-change 8.0.0\n     */\n    closeWithAction() {\n        this.dismissWithAction();\n    }\n    /** Dismisses the snack bar after some duration */\n    _dismissAfter(duration) {\n        // Note that we need to cap the duration to the maximum value for setTimeout, because\n        // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n        this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n    }\n    /** Marks the snackbar as opened */\n    _open() {\n        if (!this._afterOpened.closed) {\n            this._afterOpened.next();\n            this._afterOpened.complete();\n        }\n    }\n    /** Cleans up the DOM after closing. */\n    _finishDismiss() {\n        this._overlayRef.dispose();\n        if (!this._onAction.closed) {\n            this._onAction.complete();\n        }\n        this._afterDismissed.next({ dismissedByAction: this._dismissedByAction });\n        this._afterDismissed.complete();\n        this._dismissedByAction = false;\n    }\n    /** Gets an observable that is notified when the snack bar is finished closing. */\n    afterDismissed() {\n        return this._afterDismissed;\n    }\n    /** Gets an observable that is notified when the snack bar has opened and appeared. */\n    afterOpened() {\n        return this.containerInstance._onEnter;\n    }\n    /** Gets an observable that is notified when the snack bar action is called. */\n    onAction() {\n        return this._onAction;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nconst MAT_SNACK_BAR_DATA = new InjectionToken('MatSnackBarData');\n/**\n * Configuration used when opening a snack-bar.\n */\nclass MatSnackBarConfig {\n    constructor() {\n        /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n        this.politeness = 'assertive';\n        /**\n         * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n         * component or template, the announcement message will default to the specified message.\n         */\n        this.announcementMessage = '';\n        /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n        this.duration = 0;\n        /** Data being injected into the child component. */\n        this.data = null;\n        /** The horizontal position to place the snack bar. */\n        this.horizontalPosition = 'center';\n        /** The vertical position to place the snack bar. */\n        this.verticalPosition = 'bottom';\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive that should be applied to the text element to be rendered in the snack bar. */\nclass MatSnackBarLabel {\n}\nMatSnackBarLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSnackBarLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\", host: { classAttribute: \"mat-mdc-snack-bar-label mdc-snackbar__label\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarLabel]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-label mdc-snackbar__label',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to the element containing the snack bar's action buttons. */\nclass MatSnackBarActions {\n}\nMatSnackBarActions.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarActions, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSnackBarActions.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\", host: { classAttribute: \"mat-mdc-snack-bar-actions mdc-snackbar__actions\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarActions, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarActions]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-actions mdc-snackbar__actions',\n                    },\n                }]\n        }] });\n/** Directive that should be applied to each of the snack bar's action buttons. */\nclass MatSnackBarAction {\n}\nMatSnackBarAction.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSnackBarAction.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\", host: { classAttribute: \"mat-mdc-snack-bar-action mdc-snackbar__action\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `[matSnackBarAction]`,\n                    host: {\n                        'class': 'mat-mdc-snack-bar-action mdc-snackbar__action',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass SimpleSnackBar {\n    constructor(snackBarRef, data) {\n        this.snackBarRef = snackBarRef;\n        this.data = data;\n    }\n    /** Performs the action on the snack bar. */\n    action() {\n        this.snackBarRef.dismissWithAction();\n    }\n    /** If the action button should be shown. */\n    get hasAction() {\n        return !!this.data.action;\n    }\n}\nSimpleSnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: SimpleSnackBar, deps: [{ token: MatSnackBarRef }, { token: MAT_SNACK_BAR_DATA }], target: i0.ɵɵFactoryTarget.Component });\nSimpleSnackBar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: SimpleSnackBar, selector: \"simple-snack-bar\", host: { classAttribute: \"mat-mdc-simple-snack-bar\" }, exportAs: [\"matSnackBar\"], ngImport: i0, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"], dependencies: [{ kind: \"directive\", type: i2.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: i3.MatButton, selector: \"    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  \", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }, { kind: \"directive\", type: MatSnackBarLabel, selector: \"[matSnackBarLabel]\" }, { kind: \"directive\", type: MatSnackBarActions, selector: \"[matSnackBarActions]\" }, { kind: \"directive\", type: MatSnackBarAction, selector: \"[matSnackBarAction]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: SimpleSnackBar, decorators: [{\n            type: Component,\n            args: [{ selector: 'simple-snack-bar', exportAs: 'matSnackBar', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'class': 'mat-mdc-simple-snack-bar',\n                    }, template: \"<div matSnackBarLabel>\\n  {{data.message}}\\n</div>\\n\\n<div matSnackBarActions *ngIf=\\\"hasAction\\\">\\n  <button mat-button matSnackBarAction (click)=\\\"action()\\\">\\n    {{data.action}}\\n  </button>\\n</div>\\n\", styles: [\".mat-mdc-simple-snack-bar{display:flex}\"] }]\n        }], ctorParameters: function () { return [{ type: MatSnackBarRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DATA]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nconst matSnackBarAnimations = {\n    /** Animation that shows and hides a snack bar. */\n    snackBarState: trigger('state', [\n        state('void, hidden', style({\n            transform: 'scale(0.8)',\n            opacity: 0,\n        })),\n        state('visible', style({\n            transform: 'scale(1)',\n            opacity: 1,\n        })),\n        transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n            opacity: 0,\n        }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Base class for snack bar containers.\n * @docs-private\n */\nclass _MatSnackBarContainerBase extends BasePortalOutlet {\n    constructor(_ngZone, _elementRef, _changeDetectorRef, _platform, \n    /** The snack bar configuration. */\n    snackBarConfig) {\n        super();\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platform = _platform;\n        this.snackBarConfig = snackBarConfig;\n        /** The number of milliseconds to wait before announcing the snack bar's content. */\n        this._announceDelay = 150;\n        /** Whether the component has been destroyed. */\n        this._destroyed = false;\n        /** Subject for notifying that the snack bar has announced to screen readers. */\n        this._onAnnounce = new Subject();\n        /** Subject for notifying that the snack bar has exited from view. */\n        this._onExit = new Subject();\n        /** Subject for notifying that the snack bar has finished entering the view. */\n        this._onEnter = new Subject();\n        /** The state of the snack bar animations. */\n        this._animationState = 'void';\n        /**\n         * Attaches a DOM portal to the snack bar container.\n         * @deprecated To be turned into a method.\n         * @breaking-change 10.0.0\n         */\n        this.attachDomPortal = (portal) => {\n            this._assertNotAttached();\n            const result = this._portalOutlet.attachDomPortal(portal);\n            this._afterPortalAttached();\n            return result;\n        };\n        // Use aria-live rather than a live role like 'alert' or 'status'\n        // because NVDA and JAWS have show inconsistent behavior with live roles.\n        if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n            this._live = 'assertive';\n        }\n        else if (snackBarConfig.politeness === 'off') {\n            this._live = 'off';\n        }\n        else {\n            this._live = 'polite';\n        }\n        // Only set role for Firefox. Set role based on aria-live because setting role=\"alert\" implies\n        // aria-live=\"assertive\" which may cause issues if aria-live is set to \"polite\" above.\n        if (this._platform.FIREFOX) {\n            if (this._live === 'polite') {\n                this._role = 'status';\n            }\n            if (this._live === 'assertive') {\n                this._role = 'alert';\n            }\n        }\n    }\n    /** Attach a component portal as content to this snack bar container. */\n    attachComponentPortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachComponentPortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Attach a template portal as content to this snack bar container. */\n    attachTemplatePortal(portal) {\n        this._assertNotAttached();\n        const result = this._portalOutlet.attachTemplatePortal(portal);\n        this._afterPortalAttached();\n        return result;\n    }\n    /** Handle end of animations, updating the state of the snackbar. */\n    onAnimationEnd(event) {\n        const { fromState, toState } = event;\n        if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n            this._completeExit();\n        }\n        if (toState === 'visible') {\n            // Note: we shouldn't use `this` inside the zone callback,\n            // because it can cause a memory leak.\n            const onEnter = this._onEnter;\n            this._ngZone.run(() => {\n                onEnter.next();\n                onEnter.complete();\n            });\n        }\n    }\n    /** Begin animation of snack bar entrance into view. */\n    enter() {\n        if (!this._destroyed) {\n            this._animationState = 'visible';\n            this._changeDetectorRef.detectChanges();\n            this._screenReaderAnnounce();\n        }\n    }\n    /** Begin animation of the snack bar exiting from view. */\n    exit() {\n        // It's common for snack bars to be opened by random outside calls like HTTP requests or\n        // errors. Run inside the NgZone to ensure that it functions correctly.\n        this._ngZone.run(() => {\n            // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n            // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n            // `MatSnackBar.open`).\n            this._animationState = 'hidden';\n            // Mark this element with an 'exit' attribute to indicate that the snackbar has\n            // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n            // test harness.\n            this._elementRef.nativeElement.setAttribute('mat-exit', '');\n            // If the snack bar hasn't been announced by the time it exits it wouldn't have been open\n            // long enough to visually read it either, so clear the timeout for announcing.\n            clearTimeout(this._announceTimeoutId);\n        });\n        return this._onExit;\n    }\n    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n    ngOnDestroy() {\n        this._destroyed = true;\n        this._completeExit();\n    }\n    /**\n     * Waits for the zone to settle before removing the element. Helps prevent\n     * errors where we end up removing an element which is in the middle of an animation.\n     */\n    _completeExit() {\n        this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n            this._ngZone.run(() => {\n                this._onExit.next();\n                this._onExit.complete();\n            });\n        });\n    }\n    /**\n     * Called after the portal contents have been attached. Can be\n     * used to modify the DOM once it's guaranteed to be in place.\n     */\n    _afterPortalAttached() {\n        const element = this._elementRef.nativeElement;\n        const panelClasses = this.snackBarConfig.panelClass;\n        if (panelClasses) {\n            if (Array.isArray(panelClasses)) {\n                // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n                panelClasses.forEach(cssClass => element.classList.add(cssClass));\n            }\n            else {\n                element.classList.add(panelClasses);\n            }\n        }\n    }\n    /** Asserts that no content is already attached to the container. */\n    _assertNotAttached() {\n        if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('Attempting to attach snack bar content after content is already attached');\n        }\n    }\n    /**\n     * Starts a timeout to move the snack bar content to the live region so screen readers will\n     * announce it.\n     */\n    _screenReaderAnnounce() {\n        if (!this._announceTimeoutId) {\n            this._ngZone.runOutsideAngular(() => {\n                this._announceTimeoutId = setTimeout(() => {\n                    const inertElement = this._elementRef.nativeElement.querySelector('[aria-hidden]');\n                    const liveElement = this._elementRef.nativeElement.querySelector('[aria-live]');\n                    if (inertElement && liveElement) {\n                        // If an element in the snack bar content is focused before being moved\n                        // track it and restore focus after moving to the live region.\n                        let focusedElement = null;\n                        if (this._platform.isBrowser &&\n                            document.activeElement instanceof HTMLElement &&\n                            inertElement.contains(document.activeElement)) {\n                            focusedElement = document.activeElement;\n                        }\n                        inertElement.removeAttribute('aria-hidden');\n                        liveElement.appendChild(inertElement);\n                        focusedElement?.focus();\n                        this._onAnnounce.next();\n                        this._onAnnounce.complete();\n                    }\n                }, this._announceDelay);\n            });\n        }\n    }\n}\n_MatSnackBarContainerBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSnackBarContainerBase, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Platform }, { token: MatSnackBarConfig }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSnackBarContainerBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: _MatSnackBarContainerBase, viewQueries: [{ propertyName: \"_portalOutlet\", first: true, predicate: CdkPortalOutlet, descendants: true, static: true }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSnackBarContainerBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Platform }, { type: MatSnackBarConfig }]; }, propDecorators: { _portalOutlet: [{\n                type: ViewChild,\n                args: [CdkPortalOutlet, { static: true }]\n            }] } });\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\nclass MatSnackBarContainer extends _MatSnackBarContainerBase {\n    /** Applies the correct CSS class to the label based on its content. */\n    _afterPortalAttached() {\n        super._afterPortalAttached();\n        // Check to see if the attached component or template uses the MDC template structure,\n        // specifically the MDC label. If not, the container should apply the MDC label class to this\n        // component's label container, which will apply MDC's label styles to the attached view.\n        const label = this._label.nativeElement;\n        const labelClass = 'mdc-snackbar__label';\n        label.classList.toggle(labelClass, !label.querySelector(`.${labelClass}`));\n    }\n}\nMatSnackBarContainer.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarContainer, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSnackBarContainer.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", type: MatSnackBarContainer, selector: \"mat-snack-bar-container\", host: { listeners: { \"@state.done\": \"onAnimationEnd($event)\" }, properties: { \"@state\": \"_animationState\" }, classAttribute: \"mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open\" }, viewQueries: [{ propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"], dependencies: [{ kind: \"directive\", type: i3$1.CdkPortalOutlet, selector: \"[cdkPortalOutlet]\", inputs: [\"cdkPortalOutlet\"], outputs: [\"attached\"], exportAs: [\"cdkPortalOutlet\"] }], animations: [matSnackBarAnimations.snackBarState], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarContainer, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-snack-bar-container', changeDetection: ChangeDetectionStrategy.Default, encapsulation: ViewEncapsulation.None, animations: [matSnackBarAnimations.snackBarState], host: {\n                        'class': 'mdc-snackbar mat-mdc-snack-bar-container mdc-snackbar--open',\n                        '[@state]': '_animationState',\n                        '(@state.done)': 'onAnimationEnd($event)',\n                    }, template: \"<div class=\\\"mdc-snackbar__surface\\\">\\n  <!--\\n    This outer label wrapper will have the class `mdc-snackbar__label` applied if\\n    the attached template/component does not contain it.\\n  -->\\n  <div class=\\\"mat-mdc-snack-bar-label\\\" #label>\\n    <!-- Initialy holds the snack bar content, will be empty after announcing to screen readers. -->\\n    <div aria-hidden=\\\"true\\\">\\n      <ng-template cdkPortalOutlet></ng-template>\\n    </div>\\n\\n    <!-- Will receive the snack bar content from the non-live div, move will happen a short delay after opening -->\\n    <div [attr.aria-live]=\\\"_live\\\" [attr.role]=\\\"_role\\\"></div>\\n  </div>\\n</div>\\n\", styles: [\".mdc-snackbar{display:none;position:fixed;right:0;bottom:0;left:0;align-items:center;justify-content:center;box-sizing:border-box;pointer-events:none;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mdc-snackbar--opening,.mdc-snackbar--open,.mdc-snackbar--closing{display:flex}.mdc-snackbar--open .mdc-snackbar__label,.mdc-snackbar--open .mdc-snackbar__actions{visibility:visible}.mdc-snackbar__surface{padding-left:0;padding-right:8px;display:flex;align-items:center;justify-content:flex-start;box-sizing:border-box;transform:scale(0.8);opacity:0}.mdc-snackbar__surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}@media screen and (forced-colors: active){.mdc-snackbar__surface::before{border-color:CanvasText}}[dir=rtl] .mdc-snackbar__surface,.mdc-snackbar__surface[dir=rtl]{padding-left:8px;padding-right:0}.mdc-snackbar--open .mdc-snackbar__surface{transform:scale(1);opacity:1;pointer-events:auto}.mdc-snackbar--closing .mdc-snackbar__surface{transform:scale(1)}.mdc-snackbar__label{padding-left:16px;padding-right:8px;width:100%;flex-grow:1;box-sizing:border-box;margin:0;visibility:hidden;padding-top:14px;padding-bottom:14px}[dir=rtl] .mdc-snackbar__label,.mdc-snackbar__label[dir=rtl]{padding-left:8px;padding-right:16px}.mdc-snackbar__label::before{display:inline;content:attr(data-mdc-snackbar-label-text)}.mdc-snackbar__actions{display:flex;flex-shrink:0;align-items:center;box-sizing:border-box;visibility:hidden}.mdc-snackbar__action+.mdc-snackbar__dismiss{margin-left:8px;margin-right:0}[dir=rtl] .mdc-snackbar__action+.mdc-snackbar__dismiss,.mdc-snackbar__action+.mdc-snackbar__dismiss[dir=rtl]{margin-left:0;margin-right:8px}.mat-mdc-snack-bar-container{margin:8px;position:static}.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:344px}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container .mdc-snackbar__surface{min-width:100%}}@media(max-width: 480px),(max-width: 344px){.mat-mdc-snack-bar-container{width:100vw}}.mat-mdc-snack-bar-container .mdc-snackbar__surface{max-width:672px}.mat-mdc-snack-bar-container .mdc-snackbar__surface{box-shadow:0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12)}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss .mdc-button__icon{font-size:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__dismiss svg,.mat-mdc-snack-bar-container .mdc-snackbar__dismiss img{width:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px));height:var(--mdc-icon-button-icon-size, var(--mdc-snackbar-icon-size, 24px))}.mat-mdc-snack-bar-container .mdc-snackbar__surface{background-color:var(--mdc-snackbar-container-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__surface{border-radius:var(--mdc-snackbar-container-shape, var(--mdc-shape-small, 4px))}.mat-mdc-snack-bar-container .mdc-snackbar__label{color:var(--mdc-snackbar-supporting-text-color, inherit)}.mat-mdc-snack-bar-container .mdc-snackbar__label{font-size:var(--mdc-snackbar-supporting-text-size, inherit);font-family:var(--mdc-snackbar-supporting-text-font, inherit);font-weight:var(--mdc-snackbar-supporting-text-weight, inherit);line-height:var(--mdc-snackbar-supporting-text-line-height, inherit)}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled){color:var(--mat-mdc-snack-bar-button-color, transparent);--mat-mdc-button-persistent-ripple-color: currentColor}.mat-mdc-snack-bar-container .mat-mdc-button.mat-mdc-snack-bar-action:not(:disabled) .mat-ripple-element{background-color:currentColor;opacity:.1}.mat-mdc-snack-bar-container .mdc-snackbar__label::before{display:none}.mat-mdc-snack-bar-handset,.mat-mdc-snack-bar-container,.mat-mdc-snack-bar-label{flex:1 1 auto}.mat-mdc-snack-bar-handset .mdc-snackbar__surface{width:100%}\"] }]\n        }], propDecorators: { _label: [{\n                type: ViewChild,\n                args: ['label', { static: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSnackBarModule {\n}\nMatSnackBarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSnackBarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarModule, declarations: [SimpleSnackBar,\n        MatSnackBarContainer,\n        MatSnackBarLabel,\n        MatSnackBarActions,\n        MatSnackBarAction], imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule], exports: [MatCommonModule,\n        MatSnackBarContainer,\n        MatSnackBarLabel,\n        MatSnackBarActions,\n        MatSnackBarAction] });\nMatSnackBarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarModule, imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBarModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [OverlayModule, PortalModule, CommonModule, MatButtonModule, MatCommonModule],\n                    exports: [\n                        MatCommonModule,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                    declarations: [\n                        SimpleSnackBar,\n                        MatSnackBarContainer,\n                        MatSnackBarLabel,\n                        MatSnackBarActions,\n                        MatSnackBarAction,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {\n    return new MatSnackBarConfig();\n}\n/** Injection token that can be used to specify default snack bar. */\nconst MAT_SNACK_BAR_DEFAULT_OPTIONS = new InjectionToken('mat-snack-bar-default-options', {\n    providedIn: 'root',\n    factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n});\nclass _MatSnackBarBase {\n    /** Reference to the currently opened snackbar at *any* level. */\n    get _openedSnackBarRef() {\n        const parent = this._parentSnackBar;\n        return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n    }\n    set _openedSnackBarRef(value) {\n        if (this._parentSnackBar) {\n            this._parentSnackBar._openedSnackBarRef = value;\n        }\n        else {\n            this._snackBarRefAtThisLevel = value;\n        }\n    }\n    constructor(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {\n        this._overlay = _overlay;\n        this._live = _live;\n        this._injector = _injector;\n        this._breakpointObserver = _breakpointObserver;\n        this._parentSnackBar = _parentSnackBar;\n        this._defaultConfig = _defaultConfig;\n        /**\n         * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n         * If there is a parent snack-bar service, all operations should delegate to that parent\n         * via `_openedSnackBarRef`.\n         */\n        this._snackBarRefAtThisLevel = null;\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom component for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param component Component to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromComponent(component, config) {\n        return this._attach(component, config);\n    }\n    /**\n     * Creates and dispatches a snack bar with a custom template for the content, removing any\n     * currently opened snack bars.\n     *\n     * @param template Template to be instantiated.\n     * @param config Extra configuration for the snack bar.\n     */\n    openFromTemplate(template, config) {\n        return this._attach(template, config);\n    }\n    /**\n     * Opens a snackbar with a message and an optional action.\n     * @param message The message to show in the snackbar.\n     * @param action The label for the snackbar action.\n     * @param config Additional configuration options for the snackbar.\n     */\n    open(message, action = '', config) {\n        const _config = { ...this._defaultConfig, ...config };\n        // Since the user doesn't have access to the component, we can\n        // override the data to pass in our own message and action.\n        _config.data = { message, action };\n        // Since the snack bar has `role=\"alert\"`, we don't\n        // want to announce the same message twice.\n        if (_config.announcementMessage === message) {\n            _config.announcementMessage = undefined;\n        }\n        return this.openFromComponent(this.simpleSnackBarComponent, _config);\n    }\n    /**\n     * Dismisses the currently-visible snack bar.\n     */\n    dismiss() {\n        if (this._openedSnackBarRef) {\n            this._openedSnackBarRef.dismiss();\n        }\n    }\n    ngOnDestroy() {\n        // Only dismiss the snack bar at the current level on destroy.\n        if (this._snackBarRefAtThisLevel) {\n            this._snackBarRefAtThisLevel.dismiss();\n        }\n    }\n    /**\n     * Attaches the snack bar container component to the overlay.\n     */\n    _attachSnackBarContainer(overlayRef, config) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        const injector = Injector.create({\n            parent: userInjector || this._injector,\n            providers: [{ provide: MatSnackBarConfig, useValue: config }],\n        });\n        const containerPortal = new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n        const containerRef = overlayRef.attach(containerPortal);\n        containerRef.instance.snackBarConfig = config;\n        return containerRef.instance;\n    }\n    /**\n     * Places a new component or a template as the content of the snack bar container.\n     */\n    _attach(content, userConfig) {\n        const config = { ...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig };\n        const overlayRef = this._createOverlay(config);\n        const container = this._attachSnackBarContainer(overlayRef, config);\n        const snackBarRef = new MatSnackBarRef(container, overlayRef);\n        if (content instanceof TemplateRef) {\n            const portal = new TemplatePortal(content, null, {\n                $implicit: config.data,\n                snackBarRef,\n            });\n            snackBarRef.instance = container.attachTemplatePortal(portal);\n        }\n        else {\n            const injector = this._createInjector(config, snackBarRef);\n            const portal = new ComponentPortal(content, undefined, injector);\n            const contentRef = container.attachComponentPortal(portal);\n            // We can't pass this via the injector, because the injector is created earlier.\n            snackBarRef.instance = contentRef.instance;\n        }\n        // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n        // appropriate. This class is applied to the overlay element because the overlay must expand to\n        // fill the width of the screen for full width snackbars.\n        this._breakpointObserver\n            .observe(Breakpoints.HandsetPortrait)\n            .pipe(takeUntil(overlayRef.detachments()))\n            .subscribe(state => {\n            overlayRef.overlayElement.classList.toggle(this.handsetCssClass, state.matches);\n        });\n        if (config.announcementMessage) {\n            // Wait until the snack bar contents have been announced then deliver this message.\n            container._onAnnounce.subscribe(() => {\n                this._live.announce(config.announcementMessage, config.politeness);\n            });\n        }\n        this._animateSnackBar(snackBarRef, config);\n        this._openedSnackBarRef = snackBarRef;\n        return this._openedSnackBarRef;\n    }\n    /** Animates the old snack bar out and the new one in. */\n    _animateSnackBar(snackBarRef, config) {\n        // When the snackbar is dismissed, clear the reference to it.\n        snackBarRef.afterDismissed().subscribe(() => {\n            // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n            if (this._openedSnackBarRef == snackBarRef) {\n                this._openedSnackBarRef = null;\n            }\n            if (config.announcementMessage) {\n                this._live.clear();\n            }\n        });\n        if (this._openedSnackBarRef) {\n            // If a snack bar is already in view, dismiss it and enter the\n            // new snack bar after exit animation is complete.\n            this._openedSnackBarRef.afterDismissed().subscribe(() => {\n                snackBarRef.containerInstance.enter();\n            });\n            this._openedSnackBarRef.dismiss();\n        }\n        else {\n            // If no snack bar is in view, enter the new snack bar.\n            snackBarRef.containerInstance.enter();\n        }\n        // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n        if (config.duration && config.duration > 0) {\n            snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration));\n        }\n    }\n    /**\n     * Creates a new overlay and places it in the correct location.\n     * @param config The user-specified snack bar config.\n     */\n    _createOverlay(config) {\n        const overlayConfig = new OverlayConfig();\n        overlayConfig.direction = config.direction;\n        let positionStrategy = this._overlay.position().global();\n        // Set horizontal position.\n        const isRtl = config.direction === 'rtl';\n        const isLeft = config.horizontalPosition === 'left' ||\n            (config.horizontalPosition === 'start' && !isRtl) ||\n            (config.horizontalPosition === 'end' && isRtl);\n        const isRight = !isLeft && config.horizontalPosition !== 'center';\n        if (isLeft) {\n            positionStrategy.left('0');\n        }\n        else if (isRight) {\n            positionStrategy.right('0');\n        }\n        else {\n            positionStrategy.centerHorizontally();\n        }\n        // Set horizontal position.\n        if (config.verticalPosition === 'top') {\n            positionStrategy.top('0');\n        }\n        else {\n            positionStrategy.bottom('0');\n        }\n        overlayConfig.positionStrategy = positionStrategy;\n        return this._overlay.create(overlayConfig);\n    }\n    /**\n     * Creates an injector to be used inside of a snack bar component.\n     * @param config Config that was used to create the snack bar.\n     * @param snackBarRef Reference to the snack bar.\n     */\n    _createInjector(config, snackBarRef) {\n        const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n        return Injector.create({\n            parent: userInjector || this._injector,\n            providers: [\n                { provide: MatSnackBarRef, useValue: snackBarRef },\n                { provide: MAT_SNACK_BAR_DATA, useValue: config.data },\n            ],\n        });\n    }\n}\n_MatSnackBarBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSnackBarBase, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: _MatSnackBarBase, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\n_MatSnackBarBase.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSnackBarBase });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: _MatSnackBarBase, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: _MatSnackBarBase, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n/**\n * Service to dispatch Material Design snack bar messages.\n */\nclass MatSnackBar extends _MatSnackBarBase {\n    constructor(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig) {\n        super(overlay, live, injector, breakpointObserver, parentSnackBar, defaultConfig);\n        this.simpleSnackBarComponent = SimpleSnackBar;\n        this.snackBarContainerComponent = MatSnackBarContainer;\n        this.handsetCssClass = 'mat-mdc-snack-bar-handset';\n    }\n}\nMatSnackBar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBar, deps: [{ token: i1$1.Overlay }, { token: i2$1.LiveAnnouncer }, { token: i0.Injector }, { token: i3$2.BreakpointObserver }, { token: MatSnackBar, optional: true, skipSelf: true }, { token: MAT_SNACK_BAR_DEFAULT_OPTIONS }], target: i0.ɵɵFactoryTarget.Injectable });\nMatSnackBar.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBar, providedIn: MatSnackBarModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.0-rc.0\", ngImport: i0, type: MatSnackBar, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: MatSnackBarModule }]\n        }], ctorParameters: function () { return [{ type: i1$1.Overlay }, { type: i2$1.LiveAnnouncer }, { type: i0.Injector }, { type: i3$2.BreakpointObserver }, { type: MatSnackBar, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }] }, { type: MatSnackBarConfig, decorators: [{\n                    type: Inject,\n                    args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]\n                }] }]; } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarAction, MatSnackBarActions, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarLabel, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, _MatSnackBarBase, _MatSnackBarContainerBase, matSnackBarAnimations };\n"],"names":["RouterModule","QuicklinkModule","LoginComponent","routes","path","component","LoginRoutingModule","forChild","imports","exports","Validators","fadeInUp400ms","i0","constructor","router","fb","cd","snackbar","ngOnInit","form","group","email","required","password","send","navigate","open","duration","toggleVisibility","visible","inputType","markForCheck","selectors","decls","vars","consts","template","ctx","changeDetection","CommonModule","ReactiveFormsModule","MatInputModule","MatIconModule","MatSnackBarModule","MatTooltipModule","MatButtonModule","MatCheckboxModule","LoginModule","declarations","InjectionToken","Directive","Component","ViewEncapsulation","ChangeDetectionStrategy","Inject","ViewChild","NgModule","Injector","TemplateRef","Injectable","Optional","SkipSelf","Subject","i2","i3","trigger","state","style","transition","animate","i3$1","BasePortalOutlet","CdkPortalOutlet","PortalModule","ComponentPortal","TemplatePortal","i1","take","takeUntil","i2$1","i3$2","Breakpoints","i1$1","OverlayModule","OverlayConfig","MatCommonModule","MAX_TIMEOUT","Math","pow","MatSnackBarRef","containerInstance","_overlayRef","_afterDismissed","_afterOpened","_onAction","_dismissedByAction","_onExit","subscribe","_finishDismiss","dismiss","closed","exit","clearTimeout","_durationTimeoutId","dismissWithAction","next","complete","closeWithAction","_dismissAfter","setTimeout","min","_open","dispose","dismissedByAction","afterDismissed","afterOpened","_onEnter","onAction","MAT_SNACK_BAR_DATA","MatSnackBarConfig","politeness","announcementMessage","data","horizontalPosition","verticalPosition","MatSnackBarLabel","ɵfac","ɵdir","type","args","selector","host","MatSnackBarActions","MatSnackBarAction","SimpleSnackBar","snackBarRef","action","hasAction","ɵcmp","NgIf","MatButton","exportAs","encapsulation","None","OnPush","styles","undefined","decorators","matSnackBarAnimations","snackBarState","transform","opacity","_MatSnackBarContainerBase","_ngZone","_elementRef","_changeDetectorRef","_platform","snackBarConfig","_announceDelay","_destroyed","_onAnnounce","_animationState","attachDomPortal","portal","_assertNotAttached","result","_portalOutlet","_afterPortalAttached","_live","FIREFOX","_role","attachComponentPortal","attachTemplatePortal","onAnimationEnd","event","fromState","toState","_completeExit","onEnter","run","enter","detectChanges","_screenReaderAnnounce","nativeElement","setAttribute","_announceTimeoutId","ngOnDestroy","onMicrotaskEmpty","pipe","element","panelClasses","panelClass","Array","isArray","forEach","cssClass","classList","add","hasAttached","ngDevMode","Error","runOutsideAngular","inertElement","querySelector","liveElement","focusedElement","isBrowser","document","activeElement","HTMLElement","contains","removeAttribute","appendChild","focus","NgZone","ElementRef","ChangeDetectorRef","Platform","static","MatSnackBarContainer","label","_label","labelClass","toggle","Default","animations","ɵmod","ɵinj","MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY","MAT_SNACK_BAR_DEFAULT_OPTIONS","providedIn","factory","_MatSnackBarBase","_openedSnackBarRef","parent","_parentSnackBar","_snackBarRefAtThisLevel","value","_overlay","_injector","_breakpointObserver","_defaultConfig","openFromComponent","config","_attach","openFromTemplate","message","_config","simpleSnackBarComponent","_attachSnackBarContainer","overlayRef","userInjector","viewContainerRef","injector","create","providers","provide","useValue","containerPortal","snackBarContainerComponent","containerRef","attach","instance","content","userConfig","_createOverlay","container","$implicit","_createInjector","contentRef","observe","HandsetPortrait","detachments","overlayElement","handsetCssClass","matches","announce","_animateSnackBar","clear","overlayConfig","direction","positionStrategy","position","global","isRtl","isLeft","isRight","left","right","centerHorizontally","top","bottom","Overlay","LiveAnnouncer","BreakpointObserver","ɵprov","MatSnackBar","overlay","live","breakpointObserver","parentSnackBar","defaultConfig"],"sourceRoot":"webpack:///","x_google_ignoreList":[4]}